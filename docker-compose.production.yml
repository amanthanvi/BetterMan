version: '3.8'

services:
  # Redis Cache (required)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - betterman_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: ${DATABASE_URL}
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      # API
      API_V1_STR: "/api/v1"
      PROJECT_NAME: "BetterMan"
      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS}
      # Auth
      ADMIN_TOKEN: ${ADMIN_TOKEN}
    depends_on:
      - redis
    networks:
      - betterman_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL}
    networks:
      - betterman_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    networks:
      - betterman_network

volumes:
  redis_data:

networks:
  betterman_network:
    driver: bridge