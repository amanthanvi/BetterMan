name: Dependency Updates

on:
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday
  workflow_dispatch:

jobs:
  update-python-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install pip-tools
      run: pip install pip-tools
    
    - name: Update requirements
      run: |
        cd backend
        pip-compile --upgrade requirements.in -o requirements.txt
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Python dependencies'
        title: 'chore: update Python dependencies'
        body: |
          ## Python Dependency Updates
          
          This PR updates Python dependencies to their latest versions.
          
          ### Checklist
          - [ ] All tests pass
          - [ ] No breaking changes
          - [ ] Security vulnerabilities addressed
        branch: update-python-dependencies
        delete-branch: true

  update-node-dependencies:
    name: Update Node Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '23'
    
    - name: Update dependencies
      run: |
        cd frontend
        npm update
        npm audit fix
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Node dependencies'
        title: 'chore: update Node dependencies'
        body: |
          ## Node Dependency Updates
          
          This PR updates Node.js dependencies to their latest versions.
          
          ### Checklist
          - [ ] All tests pass
          - [ ] No breaking changes
          - [ ] Security vulnerabilities addressed
        branch: update-node-dependencies
        delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Python security audit
      run: |
        cd backend
        pip install safety
        safety check --json > ../python-audit.json || true
    
    - name: Run Node security audit
      run: |
        cd frontend
        npm audit --json > ../node-audit.json || true
    
    - name: Upload audit results
      uses: actions/upload-artifact@v4
      with:
        name: security-audits
        path: |
          python-audit.json
          node-audit.json
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const pythonAudit = JSON.parse(fs.readFileSync('python-audit.json', 'utf8'));
          const nodeAudit = JSON.parse(fs.readFileSync('node-audit.json', 'utf8'));
          
          let comment = '## Security Audit Results\n\n';
          
          // Python results
          comment += '### Python Dependencies\n';
          if (pythonAudit.vulnerabilities && pythonAudit.vulnerabilities.length > 0) {
            comment += `⚠️ Found ${pythonAudit.vulnerabilities.length} vulnerabilities\n\n`;
            pythonAudit.vulnerabilities.forEach(vuln => {
              comment += `- **${vuln.package}**: ${vuln.vulnerability}\n`;
            });
          } else {
            comment += '✅ No vulnerabilities found\n';
          }
          
          comment += '\n### Node Dependencies\n';
          if (nodeAudit.vulnerabilities && Object.keys(nodeAudit.vulnerabilities).length > 0) {
            const vulnCount = Object.keys(nodeAudit.vulnerabilities).length;
            comment += `⚠️ Found ${vulnCount} vulnerabilities\n\n`;
          } else {
            comment += '✅ No vulnerabilities found\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });