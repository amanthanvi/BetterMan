name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
    
  parse-man-pages:
    name: Parse Man Pages
    runs-on: ubuntu-latest
    needs: ci
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install man pages database
        run: |
          sudo apt-get update
          sudo apt-get install -y man-db manpages manpages-posix manpages-dev
          sudo mandb
      
      - name: Parse man pages
        run: |
          mkdir -p data/parsed-man-pages/json
          npm run parse:man-pages
      
      - name: Migrate data
        run: npm run migrate:man-pages
      
      - name: Generate index
        run: npm run generate:man-index
      
      - name: Upload parsed data
        uses: actions/upload-artifact@v4
        with:
          name: man-pages-data
          path: data/man-pages/
          retention-days: 7
      
      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add data/man-pages/
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update man pages [skip ci]
            
            - Automated update from deploy workflow
            - Parsed from Ubuntu man pages
            
            Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
            
            git push
          fi

  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: parse-man-pages
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Render
        if: env.RENDER_API_KEY != ''
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys"

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: [parse-man-pages, deploy-backend]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        id: deploy
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Deployment successful!'
            })