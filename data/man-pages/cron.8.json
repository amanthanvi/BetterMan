{
  "name": "cron",
  "section": 8,
  "title": "cron manual page",
  "description": "The cron utility is launched by launchd(8) when it sees the existence of /etc/crontab or files in /usr/lib/cron/tabs.",
  "synopsis": "cron [-s] [-o] [-x debugflag[,...]]",
  "category": "System Administration",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "macOS 15.5\t\t\t June 17, 2007\t\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     cron – daemon to execute scheduled commands (Vixie Cron)\n",
        "     cron [-s] [-o] [-x debugflag[,...]]\n",
        "     The cron utility is launched by launchd(8) when it sees the existence of\n     /etc/crontab or files in /usr/lib/cron/tabs.  There should be no need to\n     start it manually.  See /System/Library/LaunchDaemons/com.vix.cron.plist\n     for details.\n\n     The cron utility searches /usr/lib/cron/tabs for crontab files which are\n     named after accounts in /etc/passwd; crontabs found are loaded into\n     memory.  The cron utility also searches for /etc/crontab which is in a\n     different format (see crontab(5)).\n\n     The cron utility then wakes up every minute, examining all stored\n     crontabs, checking each command to see if it should be run in the current\n     minute.  When executing commands, any output is mailed to the owner of\n     the crontab (or to the user named in the MAILTO environment variable in\n     the crontab, if such exists).\n\n     Additionally, cron checks each minute to see if its spool directory's\n     modification time (or the modification time on /etc/crontab) has changed,\n     and if it has, cron will then examine the modification time on all\n     crontabs and reload those which have changed.  Thus cron need not be\n     restarted whenever a crontab file is modified.  Note that the crontab(1)\n     command updates the modification time of the spool directory whenever it\n     changes a crontab.\n\n     Available options:\n\n     -s      Enable special handling of situations when the GMT offset of the\n\t     local timezone changes, such as the switches between the standard\n\t     time and daylight saving time.\n\n\t     The jobs run during the GMT offset changes time as intuitively\n\t     expected.\tIf a job falls into a time interval that disappears\n\t     (for example, during the switch from standard time) to daylight\n\t     saving time or is duplicated (for example, during the reverse\n\t     switch), then it is handled in one of two ways:\n\n\t     The first case is for the jobs that run every at hour of a time\n\t     interval overlapping with the disappearing or duplicated\n\t     interval.\tIn other words, if the job had run within one hour\n\t     before the GMT offset change (and cron was not restarted nor the\n\t     crontab(5) changed after that) or would run after the change at\n\t     the next hour.  They work as always, skip the skipped time or run\n\t     in the added time as usual.\n\n\t     The second case is for the jobs that run less frequently.\tThey\n\t     are executed exactly once, they are not skipped nor executed\n\t     twice (unless cron is restarted or the user's crontab(5) is\n\t     changed during such a time interval).  If an interval disappears\n\t     due to the GMT offset change, such jobs are executed at the same\n\t     absolute point of time as they would be in the old time zone.\n\t     For example, if exactly one hour disappears, this point would be\n\t     during the next hour at the first minute that is specified for\n\t     them in crontab(5).\n\n     -o      Disable the special handling of situations when the GMT offset of\n\t     the local timezone changes, to be compatible with the old\n\t     (default) behavior.  If both options -o and -s are specified, the\n\t     option specified last wins.\n\n     -x debugflag[,...]\n\t     Enable writing of debugging information to standard output.  One\n\t     or more of the following comma separated debugflag identifiers\n\t     must be specified:\n\n\t     bit       currently not used\n\t     ext       make the other debug flags more verbose\n\t     load      be verbose when loading crontab files\n\t     misc      be verbose about miscellaneous one-off events\n\t     pars      be verbose about parsing individual crontab lines\n\t     proc      be verbose about the state of the process, including\n\t\t       all of its offspring\n\t     sch       be verbose when iterating through the scheduling\n\t\t       algorithms\n\t     test      trace through the execution, but do not perform any\n\t\t       actions\n",
        "     /usr/lib/cron/tabs  Directory for personal crontab files\n",
        "     crontab(1), launchctl(1), crontab(5), launchd.plist(5), launchd(8)\n",
        "     Paul Vixie ⟨paul@vix.com⟩\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-o",
      "description": " option specified last wins.",
      "optional": true
    },
    {
      "flag": "-x",
      "description": " Enable writing of debugging information to standard output.  One or more of the following comma separated debugflag identifiers must be specified: bit       currently not used ext       make the other debug flags more verbose load      be verbose when loading crontab files misc      be verbose about miscellaneous one-off events pars      be verbose about parsing individual crontab lines proc      be verbose about the state of the process, including all of its offspring sch       be verbose when iterating through the scheduling algorithms test      trace through the execution, but do not perform any actions",
      "optional": true
    }
  ],
  "examples": [],
  "relatedCommands": [
    "crontab",
    "launchctl",
    "plist",
    "launchd",
    "cron",
    "daemon",
    "execute",
    "scheduled",
    "commands",
    "debugflag",
    "utility",
    "launched",
    "when",
    "sees",
    "existence"
  ],
  "seeAlso": [
    {
      "name": "crontab",
      "section": 1
    },
    {
      "name": "launchctl",
      "section": 1
    },
    {
      "name": "crontab",
      "section": 5
    },
    {
      "name": "plist",
      "section": 5
    },
    {
      "name": "launchd",
      "section": 8
    }
  ],
  "metadata": {},
  "searchContent": "cron cron manual page the cron utility is launched by launchd 8 when it sees the existence of etc crontab or files in usr lib cron tabs cron -s -o -x debugflag cron manual page utility launched launchd 8 when sees existence etc crontab usr lib cron tabs -o option specified last wins -x enable writing of debugging information to standard output one or more of the following comma separated debugflag identifiers must be specified bit currently not used ext make the other debug flags more verbose load be verbose when loading crontab files misc be verbose about miscellaneous one-off events pars be verbose about parsing individual crontab lines proc be verbose about the state of the process including all of its offspring sch be verbose when iterating through the scheduling algorithms test trace through the execution but do not perform any actions name macos 15 5 june 17 2007 macos 15 5",
  "keywords": [
    "cron",
    "manual",
    "page",
    "utility",
    "launched",
    "launchd(8)",
    "when",
    "sees",
    "existence",
    "/etc/crontab",
    "/usr/lib/cron/tabs."
  ],
  "complexity": "basic",
  "hash": "9ae62ec23dc944ea",
  "parsedAt": "2025-06-17T19:32:12.866Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": false,
  "hasDiagrams": false
}