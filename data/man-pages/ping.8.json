{
  "name": "ping",
  "section": 8,
  "title": "ping manual page",
  "description": "The ping utility uses the ICMP protocol's mandatory ECHO_REQUEST datagram to elicit an ICMP ECHO_RESPONSE from a host or gateway.",
  "synopsis": "ping [-AaCDdfnoQqRrv] [-b boundif] [-c count] [-G sweepmaxsize] [-g sweepminsize] [-h sweepincrsize] [-i wait] [-k trafficclass] [-K netservicetype] [-l preload] [-M mask | time] [-m ttl] [-P policy] [-p pattern] [-S src_addr] [-s packetsize] [-t timeout] [-W waittime] [-z tos] [--apple-connect] [--apple-time] [--apple-print-id] [--apple-print-req] host ping [-AaDdfLnoQqRrv] [-b boundif] [-c count] [-I iface] [-i wait] [-k trafficclass] [-K netservicetype] [-l preload] [-M mask | time] [-m ttl] [-P policy] [-p pattern] [-S src_addr] [-s packetsize] [-T ttl] [-t timeout] [-W waittime] [-z tos] [--apple-connect] [--apple-time] [--apple-print-id] [--apple-print-req] mcast-group",
  "category": "System Administration",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "[-k trafficclass] [-K netservicetype] [-l preload] [-M mask | time]\n\t  [-m ttl] [-P policy] [-p pattern] [-S src_addr] [-s packetsize]\n\t  [-T ttl] [-t timeout] [-W waittime] [-z tos] [--apple-connect]\n\t  [--apple-time] [--apple-print-id] [--apple-print-req] mcast-group",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     ping – send ICMP ECHO_REQUEST packets to network hosts\n",
        "     ping [-AaCDdfnoQqRrv] [-b boundif] [-c count] [-G sweepmaxsize]",
        "     ping [-AaDdfLnoQqRrv] [-b boundif] [-c count] [-I iface] [-i wait]"
      ]
    },
    {
      "id": "description",
      "title": "DESCRIPTION",
      "content": "ICMP packets that they use for TCP packets, for example either 30 or\n\t 60.  Others may use completely wild values.",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     The ping utility uses the ICMP protocol's mandatory ECHO_REQUEST datagram\n     to elicit an ICMP ECHO_RESPONSE from a host or gateway.  ECHO_REQUEST\n     datagrams (“pings”) have an IP and ICMP header, followed by a “struct\n     timeval” and then an arbitrary number of “pad” bytes used to fill out the\n     packet.  The options are as follows:\n\n     -A      Audible.  Output a bell (ASCII 0x07) character when no packet is\n\t     received before the next packet is transmitted.  To cater for\n\t     round-trip times that are longer than the interval between\n\t     transmissions, further missing packets cause a bell only if the\n\t     maximum number of unreceived packets has increased.\n\n     -a      Audible.  Include a bell (ASCII 0x07) character in the output\n\t     when any packet is received.  This option is ignored if other\n\t     format options are present.\n\n     -b boundif\n\t     Bind the socket to interface boundif for sending.\tThis option is\n\t     an Apple addition.\n\n     -C      Prohibit the socket from using the cellular network interface.\n\t     This option is an Apple addition.\n\n     -c count\n\t     Stop after sending (and receiving) count ECHO_RESPONSE packets.\n\t     If this option is not specified, ping will operate until\n\t     interrupted.  If this option is specified in conjunction with\n\t     ping sweeps, each sweep will consist of count packets.\n\n     -D      Set the Don't Fragment bit.\n\n     -d      Set the SO_DEBUG option on the socket being used.\n\n     -f      Flood ping.  Outputs packets as fast as they come back or one\n\t     hundred times per second, whichever is more.  For every\n\t     ECHO_REQUEST sent a period “.” is printed, while for every\n\t     ECHO_REPLY received a backspace is printed.  This provides a\n\t     rapid display of how many packets are being dropped.  Only the\n\t     super-user may use this option.  This can be very hard on a\n\t     network and should be used with caution.\n\n     -G sweepmaxsize\n\t     Specify the maximum size of ICMP payload when sending sweeping\n\t     pings.  This option is required for ping sweeps.\n\n     -g sweepminsize\n\t     Specify the size of ICMP payload to start with when sending\n\t     sweeping pings.  The default value is 0.\n\n     -h sweepincrsize\n\t     Specify the number of bytes to increment the size of ICMP payload\n\t     after each sweep when sending sweeping pings.  The default value\n\t     is 1.\n\n     -I iface\n\t     Source multicast packets with the given interface address.  This\n\t     flag only applies if the ping destination is a multicast address.\n\n     -i wait\n\t     Wait wait seconds between sending each packet.  The default is to\n\t     wait for one second between each packet.  The wait time may be\n\t     fractional, but only the super-user may specify values less than\n\t     0.002 second.  This option is incompatible with the -f option.\n\n     -k trafficclass\n\t     Specifies the traffic class to use for sending ICMP packets.  The\n\t     supported traffic classes are BK_SYS, BK, BE, RD, OAM, AV, RV,\n\t     VI, VO and CTL.  By default ping uses the control traffic class\n\t     (CTL).  This option is an Apple addition.\n\n     -K netservicetype\n\t     Specifies the network service type to use for sending ICMP\n\t     packets.  The supported network service type are BK_SYS, BK, BE,\n\t     RV, AV, RD, OAM, VI, SIG and VO.  Note this overrides the default\n\t     traffic class (-k can still be specified after -K to use both).\n\t     This option is an Apple addition.\n\n     -L      Suppress loopback of multicast packets.  This flag only applies\n\t     if the ping destination is a multicast address.\n\n     -l preload\n\t     If preload is specified, ping sends that many packets as fast as\n\t     possible before falling into its normal mode of behavior.\tOnly\n\t     the super-user may use this option.\n\n     -M mask | time\n\t     Use ICMP_MASKREQ or ICMP_TSTAMP instead of ICMP_ECHO.  For mask,\n\t     print the netmask of the remote machine.  Set the\n\t     net.inet.icmp.maskrepl MIB variable to enable ICMP_MASKREPLY.\n\t     For time, print the origination, reception and transmission\n\t     timestamps.\n\n     -m ttl  Set the IP Time To Live for outgoing packets.  If not specified,\n\t     the kernel uses the value of the net.inet.ip.ttl MIB variable.\n\n     -n      Numeric output only.  No attempt will be made to lookup symbolic\n\t     names for host addresses.\n\n     -o      Exit successfully after receiving one reply packet.\n\n     -P policy\n\t     policy specifies IPsec policy for the ping session.  For details\n\t     please refer to ipsec(4) and ipsec_set_policy(3).\n\n     -p pattern\n\t     You may specify up to 16 “pad” bytes to fill out the packet you\n\t     send.  This is useful for diagnosing data-dependent problems in a\n\t     network.  For example, “-p ff” will cause the sent packet to be\n\t     filled with all ones.\n\n     -Q      Somewhat quiet output.  Don't display ICMP error messages that\n\t     are in response to our query messages.  Originally, the -v flag\n\t     was required to display such errors, but -v displays all ICMP\n\t     error messages.  On a busy machine, this output can be\n\t     overbearing.  Without the -Q flag, ping prints out any ICMP error\n\t     messages caused by its own ECHO_REQUEST messages.\n\n     -q      Quiet output.  Nothing is displayed except the summary lines at\n\t     startup time and when finished.\n\n     -R      Record route.  Includes the RECORD_ROUTE option in the\n\t     ECHO_REQUEST packet and displays the route buffer on returned\n\t     packets.  This option is deprecated and is now a no-op.\n\n     -r      Bypass the normal routing tables and send directly to a host on\n\t     an attached network.  If the host is not on a directly-attached\n\t     network, an error is returned.  This option can be used to ping a\n\t     local host through an interface that has no route through it.\n\n     -S src_addr\n\t     Use the following IP address as the source address in outgoing\n\t     packets.  On hosts with more than one IP address, this option can\n\t     be used to force the source address to be something other than\n\t     the IP address of the interface the probe packet is sent on.  If\n\t     the IP address is not one of this machine's interface addresses,\n\t     an error is returned and nothing is sent.\n\n     -s packetsize\n\t     Specify the number of data bytes to be sent.  The default is 56,\n\t     which translates into 64 ICMP data bytes when combined with the 8\n\t     bytes of ICMP header data.  This option cannot be used with ping\n\t     sweeps.\n\n     -T ttl  Set the IP Time To Live for multicasted packets.  This flag only\n\t     applies if the ping destination is a multicast address.\n\n     -t timeout\n\t     Specify a timeout, in seconds, before ping exits regardless of\n\t     how many packets have been received.\n\n     -v      Verbose output.  ICMP packets other than ECHO_RESPONSE that are\n\t     received are listed.\n\n     -W waittime\n\t     Time in milliseconds to wait for a reply for each packet sent.\n\t     If a reply arrives later, the packet is not printed as replied,\n\t     but considered as replied when calculating statistics.\n\n     -z tos  Use the specified type of service.\n\n     --apple-connect\n\t     Connects the socket to the destination address.  This option is\n\t     an Apple addition.\n\n     --apple-time\n\t     Prints the time a packet was received.  This option is an Apple\n\t     addition.\n\n     --apple-print-id\n\t     Prints the ICMP echo ID.  This option is an Apple addition.\n\n     --apple-print-req\n\t     Prints the ICMP echo request.  This option is an Apple addition.\n\n     When using ping for fault isolation, it should first be run on the local\n     host, to verify that the local network interface is up and running.\n     Then, hosts and gateways further and further away should be “pinged”.\n     Round-trip times and packet loss statistics are computed.\tIf duplicate\n     packets are received, they are not included in the packet loss\n     calculation, although the round trip time of these packets is used in\n     calculating the round-trip time statistics.  When the specified number of\n     packets have been sent (and received) or if the program is terminated\n     with a SIGINT, a brief summary is displayed, showing the number of\n     packets sent and received, and the minimum, mean, maximum, and standard\n     deviation of the round-trip times.\n\n     If ping receives a SIGINFO (see the status argument for stty(1)) signal,\n     the current number of packets sent and received, and the minimum, mean,\n     and maximum of the round-trip times will be written to the standard error\n     output.\n\n     This program is intended for use in network testing, measurement and\n     management.  Because of the load it can impose on the network, it is\n     unwise to use ping during normal operations or from automated scripts.\n",
        "     An IP header without options is 20 bytes.\tAn ICMP ECHO_REQUEST packet\n     contains an additional 8 bytes worth of ICMP header followed by an\n     arbitrary amount of data.\tWhen a packetsize is given, this indicated the\n     size of this extra piece of data (the default is 56).  Thus the amount of\n     data received inside of an IP packet of type ICMP ECHO_REPLY will always\n     be 8 bytes more than the requested data space (the ICMP header).\n\n     If the data space is at least eight bytes large, ping uses the first\n     eight bytes of this space to include a timestamp which it uses in the\n     computation of round trip times.  If less than eight bytes of pad are\n     specified, no round trip times are given.\n",
        "     The ping utility will report duplicate and damaged packets.  Duplicate\n     packets should never occur when pinging a unicast address, and seem to be\n     caused by inappropriate link-level retransmissions.  Duplicates may occur\n     in many situations and are rarely (if ever) a good sign, although the\n     presence of low levels of duplicates may not always be cause for alarm.\n     Duplicates are expected when pinging a broadcast or multicast address,\n     since they are not really duplicates but replies from different hosts to\n     the same request.\n\n     Damaged packets are obviously serious cause for alarm and often indicate\n     broken hardware somewhere in the ping packet's path (in the network or in\n     the hosts).\n",
        "     The (inter)network layer should never treat packets differently depending\n     on the data contained in the data portion.  Unfortunately, data-dependent\n     problems have been known to sneak into networks and remain undetected for\n     long periods of time.  In many cases the particular pattern that will\n     have problems is something that does not have sufficient “transitions”,\n     such as all ones or all zeros, or a pattern right at the edge, such as\n     almost all zeros.\tIt is not necessarily enough to specify a data pattern\n     of all zeros (for example) on the command line because the pattern that\n     is of interest is at the data link level, and the relationship between\n     what you type and what the controllers transmit can be complicated.\n\n     This means that if you have a data-dependent problem you will probably\n     have to do a lot of testing to find it.  If you are lucky, you may manage\n     to find a file that either cannot be sent across your network or that\n     takes much longer to transfer than other similar length files.  You can\n     then examine this file for repeated patterns that you can test using the\n     -p option of ping.\n",
        "     The TTL value of an IP packet represents the maximum number of IP routers\n     that the packet can go through before being thrown away.  In current\n     practice you can expect each router in the Internet to decrement the TTL\n     field by exactly one.\n\n     The TCP/IP specification recommends setting the TTL field for IP packets\n     to 64, but many systems use smaller values (4.3BSD uses 30, 4.2BSD used\n     15).\n\n     The maximum possible value of this field is 255, and most UNIX systems\n     set the TTL field of ICMP ECHO_REQUEST packets to 255.  This is why you\n     will find you can “ping” some hosts, but not reach them with telnet(1) or\n     ftp(1).\n\n     In normal operation ping prints the ttl value from the packet it\n     receives.\tWhen a remote system receives a ping packet, it can do one of\n     three things with the TTL field in its response:\n\n     •\t Not change it; this is what BSD systems did before the 4.3BSD-Tahoe",
        "     •\t Set it to 255; this is what current BSD systems do.  In this case the",
        "     •\t Set it to some other value.  Some machines use the same value for"
      ]
    },
    {
      "id": "exit-status",
      "title": "EXIT STATUS",
      "content": "macOS 15.5\t\t\tMarch 29, 2013\t\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     The ping utility exits with one of the following values:\n\n     0\t     At least one response was heard from the specified host.\n\n     2\t     The transmission was successful but no responses were received.\n\n     any other value\n\t     An error occurred.  These values are defined in <sysexits.h>.\n",
        "     netstat(1), ifconfig(8), traceroute(8), ping6(8)\n",
        "     The ping utility appeared in 4.3BSD.\n",
        "     The original ping utility was written by Mike Muuss while at the US Army\n     Ballistics Research Laboratory.\n",
        "     Flood pinging is not recommended in general, and flood pinging the\n     broadcast address should only be done under very controlled conditions.\n\n     The -v option is not worth much on busy hosts.\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-A",
      "description": "Audible.  Output a bell (ASCII 0x07) character when no packet is received before the next packet is transmitted.  To cater for round-trip times that are longer than the interval between transmissions, further missing packets cause a bell only if the maximum number of unreceived packets has increased."
    },
    {
      "flag": "-a",
      "description": "Audible.  Include a bell (ASCII 0x07) character in the output when any packet is received.  This option is ignored if other format options are present."
    },
    {
      "flag": "-b",
      "description": " Bind the socket to interface boundif for sending.\tThis option is an Apple addition.",
      "optional": true
    },
    {
      "flag": "-C",
      "description": "Prohibit the socket from using the cellular network interface. This option is an Apple addition."
    },
    {
      "flag": "-c",
      "description": " Stop after sending (and receiving) count ECHO_RESPONSE packets. If this option is not specified, ping will operate until interrupted.  If this option is specified in conjunction with ping sweeps, each sweep will consist of count packets.",
      "optional": true
    },
    {
      "flag": "-D",
      "description": "Set the Don't Fragment bit."
    },
    {
      "flag": "-d",
      "description": "Set the SO_DEBUG option on the socket being used."
    },
    {
      "flag": "-f",
      "description": "Flood ping.  Outputs packets as fast as they come back or one hundred times per second, whichever is more.  For every ECHO_REQUEST sent a period “.” is printed, while for every ECHO_REPLY received a backspace is printed.  This provides a rapid display of how many packets are being dropped.  Only the super-user may use this option.  This can be very hard on a network and should be used with caution."
    },
    {
      "flag": "-G",
      "description": " Specify the maximum size of ICMP payload when sending sweeping pings.  This option is required for ping sweeps.",
      "optional": true
    },
    {
      "flag": "-g",
      "description": " Specify the size of ICMP payload to start with when sending sweeping pings.  The default value is 0.",
      "optional": true
    },
    {
      "flag": "-h",
      "description": " Specify the number of bytes to increment the size of ICMP payload after each sweep when sending sweeping pings.  The default value is 1.",
      "optional": true
    },
    {
      "flag": "-I",
      "description": " Source multicast packets with the given interface address.  This flag only applies if the ping destination is a multicast address.",
      "optional": true
    },
    {
      "flag": "-i",
      "description": " Wait wait seconds between sending each packet.  The default is to wait for one second between each packet.  The wait time may be fractional, but only the super-user may specify values less than 0.002 second.  This option is incompatible with the -f option.",
      "optional": true
    },
    {
      "flag": "-k",
      "description": " Specifies the traffic class to use for sending ICMP packets.  The supported traffic classes are BK_SYS, BK, BE, RD, OAM, AV, RV, VI, VO and CTL.  By default ping uses the control traffic class (CTL).  This option is an Apple addition.",
      "optional": true
    },
    {
      "flag": "-K",
      "description": " Specifies the network service type to use for sending ICMP packets.  The supported network service type are BK_SYS, BK, BE, RV, AV, RD, OAM, VI, SIG and VO.  Note this overrides the default traffic class (-k can still be specified after -K to use both). This option is an Apple addition.",
      "optional": true
    },
    {
      "flag": "-L",
      "description": "Suppress loopback of multicast packets.  This flag only applies if the ping destination is a multicast address."
    },
    {
      "flag": "-l",
      "description": " If preload is specified, ping sends that many packets as fast as possible before falling into its normal mode of behavior.\tOnly the super-user may use this option.",
      "optional": true
    },
    {
      "flag": "-M",
      "description": " Use ICMP_MASKREQ or ICMP_TSTAMP instead of ICMP_ECHO.  For mask, print the netmask of the remote machine.  Set the net.inet.icmp.maskrepl MIB variable to enable ICMP_MASKREPLY. For time, print the origination, reception and transmission timestamps.",
      "optional": true
    },
    {
      "flag": "-m",
      "description": " the kernel uses the value of the net.inet.ip.ttl MIB variable.",
      "optional": true
    },
    {
      "flag": "-n",
      "description": "Numeric output only.  No attempt will be made to lookup symbolic names for host addresses."
    },
    {
      "flag": "-o",
      "description": "Exit successfully after receiving one reply packet."
    },
    {
      "flag": "-P",
      "description": " policy specifies IPsec policy for the ping session.  For details please refer to ipsec(4) and ipsec_set_policy(3).",
      "optional": true
    },
    {
      "flag": "-p",
      "description": " You may specify up to 16 “pad” bytes to fill out the packet you send.  This is useful for diagnosing data-dependent problems in a network.  For example, “-p ff” will cause the sent packet to be filled with all ones. TTL DETAILS The TTL value of an IP packet represents the maximum number of IP routers that the packet can go through before being thrown away.  In current practice you can expect each router in the Internet to decrement the TTL field by exactly one. The TCP/IP specification recommends setting the TTL field for IP packets to 64, but many systems use smaller values (4.3BSD uses 30, 4.2BSD used 15). The maximum possible value of this field is 255, and most UNIX systems set the TTL field of ICMP ECHO_REQUEST packets to 255.  This is why you will find you can “ping” some hosts, but not reach them with telnet(1) or ftp(1). In normal operation ping prints the ttl value from the packet it receives.\tWhen a remote system receives a ping packet, it can do one of three things with the TTL field in its response: •\t Not change it; this is what BSD systems did before the 4.3BSD-Tahoe release.  In this case the TTL value in the received packet will be 255 minus the number of routers in the round-trip path. •\t Set it to 255; this is what current BSD systems do.  In this case the TTL value in the received packet will be 255 minus the number of routers in the path from the remote system to the pinging host. •\t Set it to some other value.  Some machines use the same value for ICMP packets that they use for TCP packets, for example either 30 or 60.  Others may use completely wild values. EXIT STATUS The ping utility exits with one of the following values: 0\t     At least one response was heard from the specified host. 2\t     The transmission was successful but no responses were received. any other value An error occurred.  These values are defined in <sysexits.h>. SEE ALSO netstat(1), ifconfig(8), traceroute(8), ping6(8)",
      "optional": true
    },
    {
      "flag": "-Q",
      "description": "Somewhat quiet output.  Don't display ICMP error messages that are in response to our query messages.  Originally, the -v flag was required to display such errors, but -v displays all ICMP error messages.  On a busy machine, this output can be overbearing.  Without the -Q flag, ping prints out any ICMP error messages caused by its own ECHO_REQUEST messages."
    },
    {
      "flag": "-q",
      "description": "Quiet output.  Nothing is displayed except the summary lines at startup time and when finished."
    },
    {
      "flag": "-R",
      "description": "Record route.  Includes the RECORD_ROUTE option in the ECHO_REQUEST packet and displays the route buffer on returned packets.  This option is deprecated and is now a no-op."
    },
    {
      "flag": "-r",
      "description": "Bypass the normal routing tables and send directly to a host on an attached network.  If the host is not on a directly-attached network, an error is returned.  This option can be used to ping a local host through an interface that has no route through it."
    },
    {
      "flag": "-S",
      "description": " Use the following IP address as the source address in outgoing packets.  On hosts with more than one IP address, this option can be used to force the source address to be something other than the IP address of the interface the probe packet is sent on.  If the IP address is not one of this machine's interface addresses, an error is returned and nothing is sent.",
      "optional": true
    },
    {
      "flag": "-s",
      "description": " Specify the number of data bytes to be sent.  The default is 56, which translates into 64 ICMP data bytes when combined with the 8 bytes of ICMP header data.  This option cannot be used with ping sweeps.",
      "optional": true
    },
    {
      "flag": "-T",
      "description": " applies if the ping destination is a multicast address.",
      "optional": true
    },
    {
      "flag": "-t",
      "description": " Specify a timeout, in seconds, before ping exits regardless of how many packets have been received.",
      "optional": true
    },
    {
      "flag": "-v",
      "description": "Verbose output.  ICMP packets other than ECHO_RESPONSE that are received are listed."
    },
    {
      "flag": "-W",
      "description": " Time in milliseconds to wait for a reply for each packet sent. If a reply arrives later, the packet is not printed as replied, but considered as replied when calculating statistics.",
      "optional": true
    },
    {
      "flag": "--apple-connect",
      "description": " Connects the socket to the destination address.  This option is an Apple addition.",
      "optional": true,
      "shortFlag": "-z"
    },
    {
      "flag": "--apple-time",
      "description": " Prints the time a packet was received.  This option is an Apple addition.",
      "optional": true
    },
    {
      "flag": "--apple-print-id",
      "description": " Prints the ICMP echo ID.  This option is an Apple addition.",
      "optional": true
    },
    {
      "flag": "--apple-print-req",
      "description": " Prints the ICMP echo request.  This option is an Apple addition. When using ping for fault isolation, it should first be run on the local host, to verify that the local network interface is up and running. Then, hosts and gateways further and further away should be “pinged”. Round-trip times and packet loss statistics are computed.\tIf duplicate packets are received, they are not included in the packet loss calculation, although the round trip time of these packets is used in calculating the round-trip time statistics.  When the specified number of packets have been sent (and received) or if the program is terminated with a SIGINT, a brief summary is displayed, showing the number of packets sent and received, and the minimum, mean, maximum, and standard deviation of the round-trip times. If ping receives a SIGINFO (see the status argument for stty(1)) signal, the current number of packets sent and received, and the minimum, mean, and maximum of the round-trip times will be written to the standard error output. This program is intended for use in network testing, measurement and management.  Because of the load it can impose on the network, it is unwise to use ping during normal operations or from automated scripts. ICMP PACKET DETAILS An IP header without options is 20 bytes.\tAn ICMP ECHO_REQUEST packet contains an additional 8 bytes worth of ICMP header followed by an arbitrary amount of data.\tWhen a packetsize is given, this indicated the size of this extra piece of data (the default is 56).  Thus the amount of data received inside of an IP packet of type ICMP ECHO_REPLY will always be 8 bytes more than the requested data space (the ICMP header). If the data space is at least eight bytes large, ping uses the first eight bytes of this space to include a timestamp which it uses in the computation of round trip times.  If less than eight bytes of pad are specified, no round trip times are given. DUPLICATE AND DAMAGED PACKETS The ping utility will report duplicate and damaged packets.  Duplicate packets should never occur when pinging a unicast address, and seem to be caused by inappropriate link-level retransmissions.  Duplicates may occur in many situations and are rarely (if ever) a good sign, although the presence of low levels of duplicates may not always be cause for alarm. Duplicates are expected when pinging a broadcast or multicast address, since they are not really duplicates but replies from different hosts to the same request. Damaged packets are obviously serious cause for alarm and often indicate broken hardware somewhere in the ping packet's path (in the network or in the hosts). TRYING DIFFERENT DATA PATTERNS The (inter)network layer should never treat packets differently depending on the data contained in the data portion.  Unfortunately, data-dependent problems have been known to sneak into networks and remain undetected for long periods of time.  In many cases the particular pattern that will have problems is something that does not have sufficient “transitions”, such as all ones or all zeros, or a pattern right at the edge, such as almost all zeros.\tIt is not necessarily enough to specify a data pattern of all zeros (for example) on the command line because the pattern that is of interest is at the data link level, and the relationship between what you type and what the controllers transmit can be complicated. This means that if you have a data-dependent problem you will probably have to do a lot of testing to find it.  If you are lucky, you may manage to find a file that either cannot be sent across your network or that takes much longer to transfer than other similar length files.  You can then examine this file for repeated patterns that you can test using the",
      "optional": true
    },
    {
      "flag": "-p",
      "description": " You may specify up to 16 “pad” bytes to fill out the packet you send.  This is useful for diagnosing data-dependent problems in a network.  For example, “-p ff” will cause the sent packet to be filled with all ones. TTL DETAILS The TTL value of an IP packet represents the maximum number of IP routers that the packet can go through before being thrown away.  In current practice you can expect each router in the Internet to decrement the TTL field by exactly one. The TCP/IP specification recommends setting the TTL field for IP packets to 64, but many systems use smaller values (4.3BSD uses 30, 4.2BSD used 15). The maximum possible value of this field is 255, and most UNIX systems set the TTL field of ICMP ECHO_REQUEST packets to 255.  This is why you will find you can “ping” some hosts, but not reach them with telnet(1) or ftp(1). In normal operation ping prints the ttl value from the packet it receives.\tWhen a remote system receives a ping packet, it can do one of three things with the TTL field in its response: •\t Not change it; this is what BSD systems did before the 4.3BSD-Tahoe release.  In this case the TTL value in the received packet will be 255 minus the number of routers in the round-trip path. •\t Set it to 255; this is what current BSD systems do.  In this case the TTL value in the received packet will be 255 minus the number of routers in the path from the remote system to the pinging host. •\t Set it to some other value.  Some machines use the same value for ICMP packets that they use for TCP packets, for example either 30 or 60.  Others may use completely wild values. EXIT STATUS The ping utility exits with one of the following values: 0\t     At least one response was heard from the specified host. 2\t     The transmission was successful but no responses were received. any other value An error occurred.  These values are defined in <sysexits.h>. SEE ALSO netstat(1), ifconfig(8), traceroute(8), ping6(8)",
      "optional": true
    }
  ],
  "examples": [],
  "relatedCommands": [
    "netstat",
    "ifconfig",
    "traceroute",
    "ping6",
    "ping",
    "send",
    "packets",
    "network",
    "hosts",
    "boundif",
    "count",
    "sweepmaxsize",
    "sweepminsize",
    "sweepincrsize",
    "wait"
  ],
  "seeAlso": [
    {
      "name": "netstat",
      "section": 1
    },
    {
      "name": "ifconfig",
      "section": 8
    },
    {
      "name": "traceroute",
      "section": 8
    },
    {
      "name": "ping6",
      "section": 8
    }
  ],
  "metadata": {},
  "searchContent": "ping ping manual page the ping utility uses the icmp protocol s mandatory echo request datagram to elicit an icmp echo response from a host or gateway ping -aacddfnoqqrrv -b boundif -c count -g sweepmaxsize -g sweepminsize -h sweepincrsize -i wait -k trafficclass -k netservicetype -l preload -m mask time -m ttl -p policy -p pattern -s src addr -s packetsize -t timeout -w waittime -z tos --apple-connect --apple-time --apple-print-id --apple-print-req host ping -aaddflnoqqrrv -b boundif -c count -i iface -i wait -k trafficclass -k netservicetype -l preload -m mask time -m ttl -p policy -p pattern -s src addr -s packetsize -t ttl -t timeout -w waittime -z tos --apple-connect --apple-time --apple-print-id --apple-print-req mcast-group ping manual page utility uses icmp protocol s mandatory echo request datagram elicit echo response host gateway -a audible output a bell ascii 0x07 character when no packet is received before the next packet is transmitted to cater for round-trip times that are longer than the interval between transmissions further missing packets cause a bell only if the maximum number of unreceived packets has increased -a audible include a bell ascii 0x07 character in the output when any packet is received this option is ignored if other format options are present -b bind the socket to interface boundif for sending this option is an apple addition -c prohibit the socket from using the cellular network interface this option is an apple addition -c stop after sending and receiving count echo response packets if this option is not specified ping will operate until interrupted if this option is specified in conjunction with ping sweeps each sweep will consist of count packets -d set the don t fragment bit -d set the so debug option on the socket being used -f flood ping outputs packets as fast as they come back or one hundred times per second whichever is more for every echo request sent a period is printed while for every echo reply received a backspace is printed this provides a rapid display of how many packets are being dropped only the super-user may use this option this can be very hard on a network and should be used with caution -g specify the maximum size of icmp payload when sending sweeping pings this option is required for ping sweeps -g specify the size of icmp payload to start with when sending sweeping pings the default value is 0 -h specify the number of bytes to increment the size of icmp payload after each sweep when sending sweeping pings the default value is 1 -i source multicast packets with the given interface address this flag only applies if the ping destination is a multicast address -i wait wait seconds between sending each packet the default is to wait for one second between each packet the wait time may be fractional but only the super-user may specify values less than 0 002 second this option is incompatible with the -f option -k specifies the traffic class to use for sending icmp packets the supported traffic classes are bk sys bk be rd oam av rv vi vo and ctl by default ping uses the control traffic class ctl this option is an apple addition -k specifies the network service type to use for sending icmp packets the supported network service type are bk sys bk be rv av rd oam vi sig and vo note this overrides the default traffic class -k can still be specified after -k to use both this option is an apple addition -l suppress loopback of multicast packets this flag only applies if the ping destination is a multicast address -l if preload is specified ping sends that many packets as fast as possible before falling into its normal mode of behavior only the super-user may use this option -m use icmp maskreq or icmp tstamp instead of icmp echo for mask print the netmask of the remote machine set the net inet icmp maskrepl mib variable to enable icmp maskreply for time print the origination reception and transmission timestamps -m the kernel uses the value of the net inet ip ttl mib variable -n numeric output only no attempt will be made to lookup symbolic names for host addresses -o exit successfully after receiving one reply packet -p policy specifies ipsec policy for the ping session for details please refer to ipsec 4 and ipsec set policy 3 -p you may specify up to 16 pad bytes to fill out the packet you send this is useful for diagnosing data-dependent problems in a network for example -p ff will cause the sent packet to be filled with all ones ttl details the ttl value of an ip packet represents the maximum number of ip routers that the packet can go through before being thrown away in current practice you can expect each router in the internet to decrement the ttl field by exactly one the tcp ip specification recommends setting the ttl field for ip packets to 64 but many systems use smaller values 4 3bsd uses 30 4 2bsd used 15 the maximum possible value of this field is 255 and most unix systems set the ttl field of icmp echo request packets to 255 this is why you will find you can ping some hosts but not reach them with telnet 1 or ftp 1 in normal operation ping prints the ttl value from the packet it receives when a remote system receives a ping packet it can do one of three things with the ttl field in its response not change it this is what bsd systems did before the 4 3bsd-tahoe release in this case the ttl value in the received packet will be 255 minus the number of routers in the round-trip path set it to 255 this is what current bsd systems do in this case the ttl value in the received packet will be 255 minus the number of routers in the path from the remote system to the pinging host set it to some other value some machines use the same value for icmp packets that they use for tcp packets for example either 30 or 60 others may use completely wild values exit status the ping utility exits with one of the following values 0 at least one response was heard from the specified host 2 the transmission was successful but no responses were received any other value an error occurred these values are defined in sysexits h see also netstat 1 ifconfig 8 traceroute 8 ping6 8 -q somewhat quiet output don t display icmp error messages that are in response to our query messages originally the -v flag was required to display such errors but -v displays all icmp error messages on a busy machine this output can be overbearing without the -q flag ping prints out any icmp error messages caused by its own echo request messages -q quiet output nothing is displayed except the summary lines at startup time and when finished -r record route includes the record route option in the echo request packet and displays the route buffer on returned packets this option is deprecated and is now a no-op -r bypass the normal routing tables and send directly to a host on an attached network if the host is not on a directly-attached network an error is returned this option can be used to ping a local host through an interface that has no route through it -s use the following ip address as the source address in outgoing packets on hosts with more than one ip address this option can be used to force the source address to be something other than the ip address of the interface the probe packet is sent on if the ip address is not one of this machine s interface addresses an error is returned and nothing is sent -s specify the number of data bytes to be sent the default is 56 which translates into 64 icmp data bytes when combined with the 8 bytes of icmp header data this option cannot be used with ping sweeps -t applies if the ping destination is a multicast address -t specify a timeout in seconds before ping exits regardless of how many packets have been received -v verbose output icmp packets other than echo response that are received are listed -w time in milliseconds to wait for a reply for each packet sent if a reply arrives later the packet is not printed as replied but considered as replied when calculating statistics --apple-connect connects the socket to the destination address this option is an apple addition --apple-time prints the time a packet was received this option is an apple addition --apple-print-id prints the icmp echo id this option is an apple addition --apple-print-req prints the icmp echo request this option is an apple addition when using ping for fault isolation it should first be run on the local host to verify that the local network interface is up and running then hosts and gateways further and further away should be pinged round-trip times and packet loss statistics are computed if duplicate packets are received they are not included in the packet loss calculation although the round trip time of these packets is used in calculating the round-trip time statistics when the specified number of packets have been sent and received or if the program is terminated with a sigint a brief summary is displayed showing the number of packets sent and received and the minimum mean maximum and standard deviation of the round-trip times if ping receives a siginfo see the status argument for stty 1 signal the current number of packets sent and received and the minimum mean and maximum of the round-trip times will be written to the standard error output this program is intended for use in network testing measurement and management because of the load it can impose on the network it is unwise to use ping during normal operations or from automated scripts icmp packet details an ip header without options is 20 bytes an icmp echo request packet contains an additional 8 bytes worth of icmp header followed by an arbitrary amount of data when a packetsize is given this indicated the size of this extra piece of data the default is 56 thus the amount of data received inside of an ip packet of type icmp echo reply will always be 8 bytes more than the requested data space the icmp header if the data space is at least eight bytes large ping uses the first eight bytes of this space to include a timestamp which it uses in the computation of round trip times if less than eight bytes of pad are specified no round trip times are given duplicate and damaged packets the ping utility will report duplicate and damaged packets duplicate packets should never occur when pinging a unicast address and seem to be caused by inappropriate link-level retransmissions duplicates may occur in many situations and are rarely if ever a good sign although the presence of low levels of duplicates may not always be cause for alarm duplicates are expected when pinging a broadcast or multicast address since they are not really duplicates but replies from different hosts to the same request damaged packets are obviously serious cause for alarm and often indicate broken hardware somewhere in the ping packet s path in the network or in the hosts trying different data patterns the inter network layer should never treat packets differently depending on the data contained in the data portion unfortunately data-dependent problems have been known to sneak into networks and remain undetected for long periods of time in many cases the particular pattern that will have problems is something that does not have sufficient transitions such as all ones or all zeros or a pattern right at the edge such as almost all zeros it is not necessarily enough to specify a data pattern of all zeros for example on the command line because the pattern that is of interest is at the data link level and the relationship between what you type and what the controllers transmit can be complicated this means that if you have a data-dependent problem you will probably have to do a lot of testing to find it if you are lucky you may manage to find a file that either cannot be sent across your network or that takes much longer to transfer than other similar length files you can then examine this file for repeated patterns that you can test using the -p you may specify up to 16 pad bytes to fill out the packet you send this is useful for diagnosing data-dependent problems in a network for example -p ff will cause the sent packet to be filled with all ones ttl details the ttl value of an ip packet represents the maximum number of ip routers that the packet can go through before being thrown away in current practice you can expect each router in the internet to decrement the ttl field by exactly one the tcp ip specification recommends setting the ttl field for ip packets to 64 but many systems use smaller values 4 3bsd uses 30 4 2bsd used 15 the maximum possible value of this field is 255 and most unix systems set the ttl field of icmp echo request packets to 255 this is why you will find you can ping some hosts but not reach them with telnet 1 or ftp 1 in normal operation ping prints the ttl value from the packet it receives when a remote system receives a ping packet it can do one of three things with the ttl field in its response not change it this is what bsd systems did before the 4 3bsd-tahoe release in this case the ttl value in the received packet will be 255 minus the number of routers in the round-trip path set it to 255 this is what current bsd systems do in this case the ttl value in the received packet will be 255 minus the number of routers in the path from the remote system to the pinging host set it to some other value some machines use the same value for icmp packets that they use for tcp packets for example either 30 or 60 others may use completely wild values exit status the ping utility exits with one of the following values 0 at least one response was heard from the specified host 2 the transmission was successful but no responses were received any other value an error occurred these values are defined in sysexits h see also netstat 1 ifconfig 8 traceroute 8 ping6 8 name -k trafficclass -k netservicetype -l preload -m mask time -m ttl -p policy -p pattern -s src addr -s packetsize -t ttl -t timeout -w waittime -z tos --apple-connect description icmp packets that they use for tcp packets for example either 30 or 60 others may use completely wild values exit status macos 15 5 march 29 2013 macos 15 5",
  "keywords": [
    "ping",
    "manual",
    "page",
    "utility",
    "uses",
    "icmp",
    "protocol's",
    "mandatory",
    "echo_request",
    "datagram",
    "elicit",
    "echo_response",
    "host",
    "gateway."
  ],
  "complexity": "advanced",
  "hash": "4aa20065b5ec82b4",
  "parsedAt": "2025-06-17T19:32:08.409Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": false,
  "hasDiagrams": false
}