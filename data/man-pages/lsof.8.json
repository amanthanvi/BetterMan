{
  "name": "lsof",
  "section": 8,
  "title": "list open files",
  "description": "Lsof revision 4.",
  "synopsis": "lsof [ -?abChlnNOPRtUvVX ] [ -A A ] [ -c c ] [ +c c ] [ +|-d d ] [ +|-D D ] [ +|-e s ] [ +|-E ] [ +|-f [cfgGn] ] [ -F [f] ] [ -g [s] ] [ -i [i] ] [ -k k ] [ -K k ] [ +|-L [l] ] [ +|-m m ] [ +|-M ] [ -o [o] ] [ -p s ] [ +|-r [t[m<fmt>]] ] [ -s [p:s] ] [ -S [t] ] [ -T [t] ] [ -u s ] [ +|-w ] [ -x [fl] ] [ +|-X ] [ -z [z] ] [ -Z [Z] ] [ -- ] [names]",
  "category": "System Administration",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "       Not all the following manual pages may exist in every UNIX dialect to\n       which lsof has been ported.\n\n       access(2), awk(1), crash(1), fattach(3C), ff(1), fstat(8), fuser(1),\n       gethostname(2), isprint(3), kill(1), localtime(3), lstat(2),\n       modload(8), mount(8), netstat(1), ofiles(8L), perl(1), ps(1),\n       readlink(2), setlocale(3), stat(2), strftime(3), time(2), uname(1).\n\n\t\t\t\t Revision-4.91\t\t\t       LSOF(8)\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-i",
      "description": " files that belong to either login ``fff'' OR ``ggg'' AND have network connections to either host aaa.bbb OR ccc.ddd. Options may be grouped together following a single prefix -- e.g., the option set ``-a -b -C'' may be stated as -abC.  However, since values are optional following +|-f, -F, -g, -i, +|-L, -o, +|-r, -s, -S, -T, -x and -z.\twhen you have no values for them be careful that the following character isn't ambiguous.  For example, -Fn might represent the -F and selects the listing of files any of whose Internet address matches the address specified in i.  If no address is specified, this option selects the listing of all Internet and x.25 (HP-UX) network files. If -i4 or -i6 is specified with no following address, only files of the indicated IP version, IPv4 or IPv6, are displayed.  (An IPv6 specification may be used only if the dialects supports IPv6, as indicated by ``[46]'' and ``IPv[46]'' in lsof's -h or -? output.)  Sequentially specifying -i4, followed by -i6 is the same as specifying -i, and vice-versa.  Specifying -i4, or -i6 after -i is the same as specifying -i4 or -i6 by itself. Multiple addresses (up to a limit of 100) may be specified with multiple -i options.  (A port number or service name range is counted as one address.)  They are joined in a single ORed set before participating in AND option selection. An Internet address is specified in the form (Items in square brackets are optional.): [46][protocol][@hostname|hostaddr][:service|port] where: 46 specifies the IP version, IPv4 or IPv6 that applies to the following address. '6' may be be specified only if the UNIX dialect supports IPv6.  If neither '4' nor '6' is specified, the following address applies to all IP versions. protocol is a protocol name - TCP, UDP hostname is an Internet host name.  Unless a specific IP version is specified, open network files associated with host names of all versions will be selected. hostaddr is a numeric Internet IPv4 address in dot form; or an IPv6 numeric address in colon form, enclosed in brackets, if the UNIX dialect supports IPv6.  When an IP version is selected, only its numeric addresses may be specified. service is an /etc/services name - e.g., smtp - or a list of them. port is a port number, or a list of them. IPv6 options may be used only if the UNIX dialect supports IPv6. To see if the dialect supports IPv6, run lsof and specify the -h or -?  (help) option.  If the displayed description of the -i option contains ``[46]'' and ``IPv[46]'', IPv6 is supported. IPv4 host names and addresses may not be specified if network file selection is limited to IPv6 with -i 6.  IPv6 host names and addresses may not be specified if network file selection is limited to IPv4 with -i 4.\tWhen an open IPv4 network file's address is mapped in an IPv6 address, the open file's type will be IPv6, not IPv4, and its display will be selected by '6', not '4'. At least one address component - 4, 6, protocol, hostname, hostaddr, or service - must be supplied.  The `@' character, leading the host specification, is always required; as is the `:', leading the port specification.  Specify either hostname or hostaddr.  Specify either service name list or port number list. If a service name list is specified, the protocol may also need to be specified if the TCP, UDP and UDPLITE port numbers for the service name are different.  Use any case - lower or upper - for protocol. Service names and port numbers may be combined in a list whose entries are separated by commas and whose numeric range entries are separated by minus signs.  There may be no embedded spaces, and all service names must belong to the specified protocol. Since service names may contain embedded minus signs, the starting entry of a range can't be a service name; it can be a port number, however. Here are some sample addresses:",
      "argument": "i",
      "optional": false
    },
    {
      "flag": "-n",
      "description": "options, or it might represent the n field identifier character following the -F option.  When ambiguity is possible, start a new option with a `-' character - e.g., ``-F -n''.  If the next option is a file name, follow the possibly ambiguous option with ``--'' - e.g., ``-F -- name''. Either the `+' or the `-' prefix may be applied to a group of options. Options that don't take on separate meanings for each prefix - e.g., -i - may be grouped under either prefix.  Thus, for example, ``+M -i'' may be stated as ``+Mi'' and the group means the same as the separate options.  Be careful of prefix grouping when one or more options in the group does take on separate meanings under different prefixes - e.g., +|-M; ``-iM'' is not the same request as ``-i +M''.  When in doubt, use separate options with appropriate prefixes. -? -h These two equivalent options select a usage (help) output list. Lsof displays a shortened form of this output when it detects an error in the options supplied to it, after it has displayed messages explaining each error.  (Escape the `?' character as your shell requires.)"
    },
    {
      "flag": "-a",
      "description": "causes list selection options to be ANDed, as described above."
    },
    {
      "flag": "-A",
      "description": " is implemented via dynamic modules.  It allows the lsof user to specify A as an alternate name list file where the kernel addresses of the dynamic modules might be found.  See the lsof FAQ (The FAQ section gives its location.)  for more information about dynamic modules, their symbols, and how they affect lsof.",
      "optional": false
    },
    {
      "flag": "-b",
      "description": "causes lsof to avoid kernel functions that might block - lstat(2), readlink(2), and stat(2). See the BLOCKS AND TIMEOUTS and AVOIDING KERNEL BLOCKS sections for information on using this option."
    },
    {
      "flag": "-c",
      "description": " that begins with the characters of c.  Multiple commands may be specified, using multiple -c options.  They are joined in a single ORed set before participating in AND option selection. If c begins with a `^', then the following characters specify a command name whose processes are to be ignored (excluded.) If c begins and ends with a slash ('/'), the characters between the slashes are interpreted as a regular expression.  Shell meta-characters in the regular expression must be quoted to prevent their interpretation by the shell.\tThe closing slash may be followed by these modifiers: b    the regular expression is a basic one. i    ignore the case of letters. x    the regular expression is an extended one (default). See the lsof FAQ (The FAQ section gives its location.)  for more information on basic and extended regular expressions. The simple command specification is tested first.  If that test fails, the command regular expression is applied.  If the simple command test succeeds, the command regular expression test isn't made.  This may result in ``no command found for regex:'' messages when lsof's -V option is specified. +c w defines the maximum number of initial characters of the name, supplied by the UNIX dialect, of the UNIX command associated with a process to be printed in the COMMAND column.  (The lsof default is nine.) Note that many UNIX dialects do not supply all command name characters to lsof in the files and structures from which lsof obtains command name.  Often dialects limit the number of characters supplied in those sources.  For example, Linux 2.4.27 and Solaris 9 both limit command name length to 16 characters. If w is zero ('0'), all command characters supplied to lsof by the UNIX dialect will be printed. If w is less than the length of the column title, ``COMMAND'', it will be raised to that length.",
      "optional": false
    },
    {
      "flag": "-C",
      "description": "disables the reporting of any path name components from the kernel's name cache.  See the KERNEL NAME CACHE section for more information. +d s causes lsof to search for all open instances of directory s and the files and directories it contains at its top level.  +d does NOT descend the directory tree, rooted at s.  The +D D option may be used to request a full-descent directory tree search, rooted at directory D. Processing of the +d option does not follow symbolic links within s unless the -x or -x  l option is also specified.\tNor does it search for open files on file system mount points on subdirectories of s unless the -x or -x  f option is also specified. Note: the authority of the user of this option limits it to searching for files that the user has permission to examine with the system stat(2) function."
    },
    {
      "flag": "-d",
      "description": " include in the output listing.  The file descriptors are specified in the comma-separated set s - e.g., ``cwd,1,3'', ``^6,^2''. (There should be no spaces in the set.) The list is an exclusion list if all entries of the set begin with `^'.  It is an inclusion list if no entry begins with `^'.\tMixed lists are not permitted. A file descriptor number range may be in the set as long as neither member is empty, both members are numbers, and the ending member is larger than the starting one - e.g., ``0-7'' or ``3-10''.  Ranges may be specified for exclusion if they have the `^' prefix - e.g., ``^0-7'' excludes all file descriptors 0 through 7. Multiple file descriptor numbers are joined in a single ORed set before participating in AND option selection. When there are exclusion and inclusion members in the set, lsof reports them as errors and exits with a non-zero return code. See the description of File Descriptor (FD) output values in the OUTPUT section for more information on file descriptor names. +D D causes lsof to search for all open instances of directory D and all the files and directories it contains to its complete depth. Processing of the +D option does not follow symbolic links within D unless the -x or -x  l option is also specified.\tNor does it search for open files on file system mount points on subdirectories of D unless the -x or -x  f option is also specified. Note: the authority of the user of this option limits it to searching for files that the user has permission to examine with the system stat(2) function. Further note: lsof may process this option slowly and require a large amount of dynamic memory to do it.  This is because it must descend the entire directory tree, rooted at D, calling stat(2) for each file and directory, building a list of all the files it finds, and searching that list for a match with every open file. When directory D is large, these steps can take a long time, so use this option prudently.",
      "optional": false
    },
    {
      "flag": "-D",
      "description": " option is sometimes restricted.  See the DEVICE CACHE FILE section and the sections that follow it for more information on this option. optionally be followed by a path name.  Lsof recognizes these function letters: ? - report device cache file paths b - build the device cache file i - ignore the device cache file r - read the device cache file u - read and update the device cache file The b, r, and u functions, accompanied by a path name, are sometimes restricted.  When these functions are restricted, they will not appear in the description of the -D option that accompanies -h or -?  option output.  See the DEVICE CACHE FILE section and the sections that follow it for more information on these functions and when they're restricted. The ?  function reports the read-only and write paths that lsof can use for the device cache file, the names of any environment variables whose values lsof will examine when forming the device cache file path, and the format for the personal device cache file path.  (Escape the `?' character as your shell requires.) When available, the b, r, and u functions may be followed by the device cache file's path.  The standard default is .lsof_hostname in the home directory of the real user ID that executes lsof, but this could have been changed when lsof was configured and compiled.  (The output of the -h and -?  options show the current default prefix - e.g., ``.lsof''.)\tThe suffix, hostname, is the first component of the host's name returned by gethostname(2). When available, the b function directs lsof to build a new device cache file at the default or specified path. The i function directs lsof to ignore the default device cache file and obtain its information about devices via direct calls to the kernel. The r function directs lsof to read the device cache at the default or specified path, but prevents it from creating a new device cache file when none exists or the existing one is improperly structured.  The r function, when specified without a path name, prevents lsof from updating an incorrect or outdated device cache file, or creating a new one in its place.  The r function is always available when it is specified without a path name argument; it may be restricted by the permissions of the lsof process. When available, the u function directs lsof to read the device cache file at the default or specified path, if possible, and to rebuild it, if necessary.  This is the default device cache file function when no -D option has been specified. +|-e s exempts the file system whose path name is s from being subjected to kernel function calls that might block.\tThe +e option exempts stat(2), lstat(2) and most readlink(2) kernel function calls.  The",
      "optional": false
    },
    {
      "flag": "-D",
      "description": " option is sometimes restricted.  See the DEVICE CACHE FILE section and the sections that follow it for more information on this option. optionally be followed by a path name.  Lsof recognizes these function letters: ? - report device cache file paths b - build the device cache file i - ignore the device cache file r - read the device cache file u - read and update the device cache file The b, r, and u functions, accompanied by a path name, are sometimes restricted.  When these functions are restricted, they will not appear in the description of the -D option that accompanies -h or -?  option output.  See the DEVICE CACHE FILE section and the sections that follow it for more information on these functions and when they're restricted. The ?  function reports the read-only and write paths that lsof can use for the device cache file, the names of any environment variables whose values lsof will examine when forming the device cache file path, and the format for the personal device cache file path.  (Escape the `?' character as your shell requires.) When available, the b, r, and u functions may be followed by the device cache file's path.  The standard default is .lsof_hostname in the home directory of the real user ID that executes lsof, but this could have been changed when lsof was configured and compiled.  (The output of the -h and -?  options show the current default prefix - e.g., ``.lsof''.)\tThe suffix, hostname, is the first component of the host's name returned by gethostname(2). When available, the b function directs lsof to build a new device cache file at the default or specified path. The i function directs lsof to ignore the default device cache file and obtain its information about devices via direct calls to the kernel. The r function directs lsof to read the device cache at the default or specified path, but prevents it from creating a new device cache file when none exists or the existing one is improperly structured.  The r function, when specified without a path name, prevents lsof from updating an incorrect or outdated device cache file, or creating a new one in its place.  The r function is always available when it is specified without a path name argument; it may be restricted by the permissions of the lsof process. When available, the u function directs lsof to read the device cache file at the default or specified path, if possible, and to rebuild it, if necessary.  This is the default device cache file function when no -D option has been specified. +|-e s exempts the file system whose path name is s from being subjected to kernel function calls that might block.\tThe +e option exempts stat(2), lstat(2) and most readlink(2) kernel function calls.  The",
      "optional": false
    },
    {
      "flag": "-e",
      "description": " Multiple file systems may be specified with separate +|-e specifications and each may have readlink(2) calls exempted or not. This option is currently implemented only for Linux. CAUTION: this option can easily be mis-applied to other than the file system of interest, because it uses path name rather than the more reliable device and inode numbers.  (Device and inode numbers are acquired via the potentially blocking stat(2) kernel call and are thus not available, but see the +|-m m option as a possible alternative way to supply device numbers.)\tUse this option with great care and fully specify the path name of the file system to be exempted. When open files on exempted file systems are reported, it may not be possible to obtain all their information.  Therefore, some information columns will be blank, the characters ``UNKN'' preface the values in the TYPE column, and the applicable exemption option is added in parentheses to the end of the NAME column.  (Some device number information might be made available via the +|-m m option.) +|-E +E specifies that Linux pipe, Linux UNIX socket and Linux pseudoterminal files should be displayed with endpoint information and the files of the endpoints should also be displayed.  Note: UNIX socket file endpoint information is only available when the compile flags line of -v output contains HASUXSOCKEPT, and psudoterminal endpoint information is only available when the compile flags line contains HASPTYEPT. Pipe endpoint information is displayed in the NAME column in the form ``PID,cmd,FDmode'', where PID is the endpoint process ID; cmd is the endpoint process command; FD is the endpoint file's descriptor; and mode is the endpoint file's access mode. Pseudoterminal endpoint information is displayed in the NAME column as ``->/dev/ptsmin PID,cmd,FDmode'' or ``PID,cmd,FDmode''. The first form is for a primary device; the second, for a replica device.  min is a replica device's minor device number; and PID, cmd, FD and mode are the same as with pipe endpoint information. Note: psudoterminal endpoint information is only available when the compile flags line of -V output contains HASPTYEPT. UNIX socket file endpoint information is displayed in the NAME column in the form ``type=TYPE ->INO=INODE PID,cmd,FDmode'', where TYPE is the socket type; INODE is the i-node number of the connected socket; and PID, cmd, FD and mode are the same as with pipe endpoint information. Note: UNIX socket file endpoint information is available only when the compile flags line of -v output contains HASUXSOCKEPT. Multiple occurrences of this information can appear in a file's NAME column.",
      "optional": false
    },
    {
      "flag": "-E",
      "description": " displayed with endpoint information, but not the files of the endpoints. +|-f [cfgGn] f by itself clarifies how path name arguments are to be interpreted.  When followed by c, f, g, G, or n in any combination it specifies that the listing of kernel file structure information is to be enabled (`+') or inhibited (`-'). Normally a path name argument is taken to be a file system name if it matches a mounted-on directory name reported by mount(8), or if it represents a block device, named in the mount output and associated with a mounted directory name.  When +f is specified, all path name arguments will be taken to be file system names, and lsof will complain if any are not.\tThis can be useful, for example, when the file system name (mounted-on device) isn't a block device.  This happens for some CD-ROM file systems. When -f is specified by itself, all path name arguments will be taken to be simple files.  Thus, for example, the ``-f -- /'' arguments direct lsof to search for open files with a `/' path name, not all open files in the `/' (root) file system. Be careful to make sure +f and -f are properly terminated and aren't followed by a character (e.g., of the file or file system name) that might be taken as a parameter.  For example, use ``--'' after +f and -f as in these examples. $ lsof +f -- /file/system/name $ lsof -f -- /file/name The listing of information from kernel file structures, requested with the +f [cfgGn] option form, is normally inhibited, and is not available in whole or part for some dialects - e.g., /proc-based Linux kernels below 2.6.22.  When the prefix to f is a plus sign (`+'), these characters request file structure information: c    file structure use count (not Linux) f    file structure address (not Linux) g    file flag abbreviations (Linux 2.6.22 and up) G    file flags in hexadecimal (Linux 2.6.22 and up) n    file structure node address (not Linux) When the prefix is minus (`-') the same characters disable the listing of the indicated values. File structure addresses, use counts, flags, and node addresses may be used to detect more readily identical files inherited by child processes and identical files in use by different processes. Lsof column output can be sorted by output columns holding the values and listed to identify identical file use, or lsof field output can be parsed by an AWK or Perl post-filter script, or by a C program.",
      "optional": false
    },
    {
      "flag": "-F",
      "description": " output for processing by another program, and the character that terminates each output field.  Each field to be output is specified with a single character in f.  The field terminator defaults to NL, but may be changed to NUL (000).  See the OUTPUT FOR OTHER PROGRAMS section for a description of the field identification characters and the field output process. When the field selection character list is empty, all standard fields are selected (except the raw device field, security context and zone field for compatibility reasons) and the NL field terminator is used. When the field selection character list contains only a zero (`0'), all fields are selected (except the raw device field for compatibility reasons) and the NUL terminator character is used. Other combinations of fields and their associated field terminator character must be set with explicit entries in f, as described in the OUTPUT FOR OTHER PROGRAMS section. When a field selection character identifies an item lsof does not normally list - e.g., PPID, selected with -R - specification of the field character - e.g., ``-FR'' - also selects the listing of the item. When the field selection character list contains the single character `?', lsof will display a help list of the field identification characters.\t(Escape the `?' character as your shell requires.)",
      "argument": "f",
      "optional": false
    },
    {
      "flag": "-g",
      "description": " excludes or selects the listing of files for the processes whose optional process group IDentification (PGID) numbers are in the comma-separated set s - e.g., ``123'' or ``123,^456''.  (There should be no spaces in the set.) PGID numbers that begin with `^' (negation) represent exclusions. Multiple PGID numbers are joined in a single ORed set before participating in AND option selection.  However, PGID exclusions are applied without ORing or ANDing and take effect before other selection criteria are applied. The -g option also enables the output display of PGID numbers. When specified without a PGID set that's all it does.",
      "argument": "s",
      "optional": false
    },
    {
      "flag": "-i",
      "description": " files that belong to either login ``fff'' OR ``ggg'' AND have network connections to either host aaa.bbb OR ccc.ddd. Options may be grouped together following a single prefix -- e.g., the option set ``-a -b -C'' may be stated as -abC.  However, since values are optional following +|-f, -F, -g, -i, +|-L, -o, +|-r, -s, -S, -T, -x and -z.\twhen you have no values for them be careful that the following character isn't ambiguous.  For example, -Fn might represent the -F and selects the listing of files any of whose Internet address matches the address specified in i.  If no address is specified, this option selects the listing of all Internet and x.25 (HP-UX) network files. If -i4 or -i6 is specified with no following address, only files of the indicated IP version, IPv4 or IPv6, are displayed.  (An IPv6 specification may be used only if the dialects supports IPv6, as indicated by ``[46]'' and ``IPv[46]'' in lsof's -h or -? output.)  Sequentially specifying -i4, followed by -i6 is the same as specifying -i, and vice-versa.  Specifying -i4, or -i6 after -i is the same as specifying -i4 or -i6 by itself. Multiple addresses (up to a limit of 100) may be specified with multiple -i options.  (A port number or service name range is counted as one address.)  They are joined in a single ORed set before participating in AND option selection. An Internet address is specified in the form (Items in square brackets are optional.): [46][protocol][@hostname|hostaddr][:service|port] where: 46 specifies the IP version, IPv4 or IPv6 that applies to the following address. '6' may be be specified only if the UNIX dialect supports IPv6.  If neither '4' nor '6' is specified, the following address applies to all IP versions. protocol is a protocol name - TCP, UDP hostname is an Internet host name.  Unless a specific IP version is specified, open network files associated with host names of all versions will be selected. hostaddr is a numeric Internet IPv4 address in dot form; or an IPv6 numeric address in colon form, enclosed in brackets, if the UNIX dialect supports IPv6.  When an IP version is selected, only its numeric addresses may be specified. service is an /etc/services name - e.g., smtp - or a list of them. port is a port number, or a list of them. IPv6 options may be used only if the UNIX dialect supports IPv6. To see if the dialect supports IPv6, run lsof and specify the -h or -?  (help) option.  If the displayed description of the -i option contains ``[46]'' and ``IPv[46]'', IPv6 is supported. IPv4 host names and addresses may not be specified if network file selection is limited to IPv6 with -i 6.  IPv6 host names and addresses may not be specified if network file selection is limited to IPv4 with -i 4.\tWhen an open IPv4 network file's address is mapped in an IPv6 address, the open file's type will be IPv6, not IPv4, and its display will be selected by '6', not '4'. At least one address component - 4, 6, protocol, hostname, hostaddr, or service - must be supplied.  The `@' character, leading the host specification, is always required; as is the `:', leading the port specification.  Specify either hostname or hostaddr.  Specify either service name list or port number list. If a service name list is specified, the protocol may also need to be specified if the TCP, UDP and UDPLITE port numbers for the service name are different.  Use any case - lower or upper - for protocol. Service names and port numbers may be combined in a list whose entries are separated by commas and whose numeric range entries are separated by minus signs.  There may be no embedded spaces, and all service names must belong to the specified protocol. Since service names may contain embedded minus signs, the starting entry of a range can't be a service name; it can be a port number, however. Here are some sample addresses:",
      "argument": "i",
      "optional": false
    },
    {
      "flag": "-i6",
      "description": "- IPv6 only TCP:25 - TCP and port 25 @1.2.3.4 - Internet IPv4 host address 1.2.3.4 @[3ffe:1ebc::1]:1234 - Internet IPv6 host address 3ffe:1ebc::1, port 1234 UDP:who - UDP who service port TCP@lsof.itap:513 - TCP, port 513 and host name lsof.itap tcp@foo:1-10,smtp,99 - TCP, ports 1 through 10, service name smtp, port 99, host name foo tcp@bar:1-smtp - TCP, ports 1 through smtp, host bar :time - either TCP, UDP or UDPLITE time service port"
    },
    {
      "flag": "-K",
      "description": " where task (thread) reporting is supported.  (If help output - i.e., the output of the -h or -?  options - shows this option, then task (thread) reporting is supported by the dialect.) If -K is followed by a value, k, it must be ``i''.\tThat causes lsof to ignore tasks, particularly in the default, list-everything case when no other options are specified. When -K and -a are both specified on Linux, and the tasks of a main process are selected by other options, the main process will also be listed as though it were a task, but without a task ID. (See the description of the TID column in the OUTPUT section.) Where the FreeBSD version supports threads, all threads will be listed with their IDs. In general threads and tasks inherit the files of the caller, but may close some and open others, so lsof always reports all the open files of threads and tasks.",
      "optional": false
    },
    {
      "flag": "-k",
      "description": " etc.  -k is not available under AIX on the IBM RISC/System 6000.",
      "optional": false
    },
    {
      "flag": "-l",
      "description": "inhibits the conversion of user ID numbers to login names.\tIt is also useful when login name lookup is working improperly or slowly. +|-L [l] enables (`+') or disables (`-') the listing of file link counts, where they are available - e.g., they aren't available for sockets, or most FIFOs and pipes. When +L is specified without a following number, all link counts will be listed.  When -L is specified (the default), no link counts will be listed. When +L is followed by a number, only files having a link count less than that number will be listed.  (No number may follow -L.) A specification of the form ``+L1'' will select open files that have been unlinked.  A specification of the form ``+aL1 <file_system>'' will select unlinked open files on the specified file system. For other link count comparisons, use field output (-F) and a post-processing script or program. +|-m m specifies an alternate kernel memory file or activates mount table supplement processing. The option form -m m specifies a kernel memory file, m, in place of /dev/kmem or /dev/mem - e.g., a crash dump file. The option form +m requests that a mount supplement file be written to the standard output file.  All other options are silently ignored. There will be a line in the mount supplement file for each mounted file system, containing the mounted file system directory, followed by a single space, followed by the device number in hexadecimal \"0x\" format - e.g., / 0x801 Lsof can use the mount supplement file to get device numbers for file systems when it can't get them via stat(2) or lstat(2). The option form +m m identifies m as a mount supplement file. Note: the +m and +m m options are not available for all supported dialects.  Check the output of lsof's -h or -?  options to see if the +m and +m m options are available. +|-M Enables (+) or disables (-) the reporting of portmapper registrations for local TCP, UDP and UDPLITE ports, where port mapping is supported.  (See the last paragraph of this option description for information about where portmapper registration reporting is supported.) The default reporting mode is set by the lsof builder with the HASPMAPENABLED #define in the dialect's machine.h header file; lsof is distributed with the HASPMAPENABLED #define deactivated, so portmapper reporting is disabled by default and must be requested with +M.\tSpecifying lsof's -h or -?  option will report the default mode.  Disabling portmapper registration when it is already disabled or enabling it when already enabled is acceptable.  When portmapper registration reporting is enabled, lsof displays the portmapper registration (if any) for local TCP, UDP or UDPLITE ports in square brackets immediately following the port numbers or service names - e.g., ``:1234[name]'' or ``:name[100083]''.\tThe registration information may be a name or number, depending on what the registering program supplied to the portmapper when it registered the port. When portmapper registration reporting is enabled, lsof may run a little more slowly or even become blocked when access to the portmapper becomes congested or stopped.  Reverse the reporting mode to determine if portmapper registration reporting is slowing or blocking lsof. For purposes of portmapper registration reporting lsof considers a TCP, UDP or UDPLITE port local if: it is found in the local part of its containing kernel structure; or if it is located in the foreign part of its containing kernel structure and the local and foreign Internet addresses are the same; or if it is located in the foreign part of its containing kernel structure and the foreign Internet address is INADDR_LOOPBACK (127.0.0.1).  This rule may make lsof ignore some foreign ports on machines with multiple interfaces when the foreign Internet address is on a different interface from the local one. See the lsof FAQ (The FAQ section gives its location.)  for further discussion of portmapper registration reporting issues. Portmapper registration reporting is supported only on dialects that have RPC header files.  (Some Linux distributions with GlibC 2.14 do not have them.)  When portmapper registration reporting is supported, the -h or -?  help output will show the +|-M option."
    },
    {
      "flag": "-n",
      "description": "inhibits the conversion of network numbers to host names for network files.  Inhibiting conversion may make lsof run faster. It is also useful when host name lookup is not working properly."
    },
    {
      "flag": "-N",
      "description": "selects the listing of NFS files."
    },
    {
      "flag": "-o",
      "description": " SIZE/OFF output column title to be changed to OFFSET.  Note: on some UNIX dialects lsof can't obtain accurate or consistent file offset information from its kernel data sources, sometimes just for particular kinds of files (e.g., socket files.)  Consult the lsof FAQ (The FAQ section gives its location.)  for more information. The -o and -s options are mutually exclusive; they can't both be specified.\tWhen neither is specified, lsof displays whatever value - size or offset - is appropriate and available for the type of the file. ``0t'' for a file offset before the form is switched to ``0x...''. An o value of zero (unlimited) directs lsof to use the ``0t'' form for all offset output. This option does NOT direct lsof to display offset at all times; specify -o (without a trailing number) to do that.\t-o o only specifies the number of digits after ``0t'' in either mixed size and offset or offset-only output.  Thus, for example, to direct lsof to display offset at all times with a decimal digit count of 10, use: or",
      "argument": "o",
      "optional": false
    },
    {
      "flag": "-o",
      "description": " SIZE/OFF output column title to be changed to OFFSET.  Note: on some UNIX dialects lsof can't obtain accurate or consistent file offset information from its kernel data sources, sometimes just for particular kinds of files (e.g., socket files.)  Consult the lsof FAQ (The FAQ section gives its location.)  for more information. The -o and -s options are mutually exclusive; they can't both be specified.\tWhen neither is specified, lsof displays whatever value - size or offset - is appropriate and available for the type of the file. ``0t'' for a file offset before the form is switched to ``0x...''. An o value of zero (unlimited) directs lsof to use the ``0t'' form for all offset output. This option does NOT direct lsof to display offset at all times; specify -o (without a trailing number) to do that.\t-o o only specifies the number of digits after ``0t'' in either mixed size and offset or offset-only output.  Thus, for example, to direct lsof to display offset at all times with a decimal digit count of 10, use: or",
      "argument": "o",
      "optional": false
    },
    {
      "flag": "-o",
      "description": " SIZE/OFF output column title to be changed to OFFSET.  Note: on some UNIX dialects lsof can't obtain accurate or consistent file offset information from its kernel data sources, sometimes just for particular kinds of files (e.g., socket files.)  Consult the lsof FAQ (The FAQ section gives its location.)  for more information. The -o and -s options are mutually exclusive; they can't both be specified.\tWhen neither is specified, lsof displays whatever value - size or offset - is appropriate and available for the type of the file. ``0t'' for a file offset before the form is switched to ``0x...''. An o value of zero (unlimited) directs lsof to use the ``0t'' form for all offset output. This option does NOT direct lsof to display offset at all times; specify -o (without a trailing number) to do that.\t-o o only specifies the number of digits after ``0t'' in either mixed size and offset or offset-only output.  Thus, for example, to direct lsof to display offset at all times with a decimal digit count of 10, use: or",
      "argument": "o",
      "optional": false
    },
    {
      "flag": "-oo10",
      "description": " The default number of digits allowed after ``0t'' is normally 8, but may have been changed by the lsof builder.  Consult the description of the -o o option in the output of the -h or -? option to determine the default that is in effect."
    },
    {
      "flag": "-O",
      "description": "directs lsof to bypass the strategy it uses to avoid being blocked by some kernel operations - i.e., doing them in forked child processes.\tSee the BLOCKS AND TIMEOUTS and AVOIDING KERNEL BLOCKS sections for more information on kernel operations that may block lsof. While use of this option will reduce lsof startup overhead, it may also cause lsof to hang when the kernel doesn't respond to a function.  Use this option cautiously."
    },
    {
      "flag": "-p",
      "description": " optional process IDentification (PID) numbers are in the comma-separated set s - e.g., ``123'' or ``123,^456''.  (There should be no spaces in the set.) PID numbers that begin with `^' (negation) represent exclusions. Multiple process ID numbers are joined in a single ORed set before participating in AND option selection.  However, PID exclusions are applied without ORing or ANDing and take effect before other selection criteria are applied.",
      "optional": false
    },
    {
      "flag": "-P",
      "description": "inhibits the conversion of port numbers to port names for network files.  Inhibiting the conversion may make lsof run a little faster.  It is also useful when port name lookup is not working properly. +|-r [t[m<fmt>]] puts lsof in repeat mode.  There lsof lists open files as selected by other options, delays t seconds (default fifteen), then repeats the listing, delaying and listing repetitively until stopped by a condition defined by the prefix to the option. If the prefix is a `-', repeat mode is endless.  Lsof must be terminated with an interrupt or quit signal. If the prefix is `+', repeat mode will end the first cycle no open files are listed - and of course when lsof is stopped with an interrupt or quit signal.  When repeat mode ends because no files are listed, the process exit code will be zero if any open files were ever listed; one, if none were ever listed. Lsof marks the end of each listing: if field output is in progress (the -F, option has been specified), the default marker is `m'; otherwise the default marker is ``========''.  The marker is followed by a NL character. The optional \"m<fmt>\" argument specifies a format for the marker line.  The <fmt> characters following `m' are interpreted as a format specification to the strftime(3) function, when both it and the localtime(3) function are available in the dialect's C library.  Consult the strftime(3) documentation for what may appear in its format specification.  Note that when field output is requested with the -F option, <fmt> cannot contain the NL format, ``%n''.  Note also that when <fmt> contains spaces or other characters that affect the shell's interpretation of arguments, <fmt> must be quoted appropriately. Repeat mode reduces lsof startup overhead, so it is more efficient to use this mode than to call lsof repetitively from a shell script, for example. To use repeat mode most efficiently, accompany +|-r with specification of other lsof selection options, so the amount of kernel memory access lsof does will be kept to a minimum.  Options that filter at the process level - e.g., -c, -g, -p, -u - are the most efficient selectors. Repeat mode is useful when coupled with field output (see the -F, option description) and a supervising awk or Perl script, or a C program."
    },
    {
      "flag": "-R",
      "description": "directs lsof to list the Parent Process IDentification number in the PPID column."
    },
    {
      "flag": "-s",
      "description": " s alone directs lsof to display file size at all times.  It causes the SIZE/OFF output column title to be changed to SIZE.  If the file does not have a size, nothing is displayed. The optional -s p:s form is available only for selected dialects, and only when the -h or -?\thelp output lists it. When the optional form is available, the s may be followed by a protocol name (p), either TCP or UDP, a colon (`:') and a comma-separated protocol state name list, the option causes open TCP and UDP files to be excluded if their state name(s) are in the list (s) preceded by a `^'; or included if their name(s) are not preceded by a `^'. Dialects that support this option may support only one protocol. When an unsupported protocol is specified, a message will be displayed indicating state names for the protocol are unavailable. When an inclusion list is defined, only network files with state names in the list will be present in the lsof output.  Thus, specifying one state name means that only network files with that lone state name will be listed. Case is unimportant in the protocol or state names, but there may be no spaces and the colon (`:') separating the protocol name (p) and the state name list (s) is required. If only TCP and UDP files are to be listed, as controlled by the specified exclusions and inclusions, the -i option must be specified, too.  If only a single protocol's files are to be listed, add its name as an argument to the -i option. For example, to list only network files with TCP state LISTEN, use:",
      "argument": "p:s",
      "optional": false
    },
    {
      "flag": "-iTCP",
      "description": "-sTCP:LISTEN Or, for example, to list network files with all UDP states except Idle, use:"
    },
    {
      "flag": "-iUDP",
      "description": "-sUDP:Idle State names vary with UNIX dialects, so it's not possible to provide a complete list.  Some common TCP state names are: CLOSED, IDLE, BOUND, LISTEN, ESTABLISHED, SYN_SENT, SYN_RCDV, ESTABLISHED, CLOSE_WAIT, FIN_WAIT1, CLOSING, LAST_ACK, FIN_WAIT_2, and TIME_WAIT.\tTwo common UDP state names are Unbound and Idle. See the lsof FAQ (The FAQ section gives its location.)  for more information on how to use protocol state exclusion and inclusion, including examples. The -o (without a following decimal digit count) and -s option (without a following protocol and state name list) are mutually exclusive; they can't both be specified.  When neither is specified, lsof displays whatever value - size or offset - is appropriate and available for the type of file. Since some types of files don't have true sizes - sockets, FIFOs, pipes, etc. - lsof displays for their sizes the content amounts in their associated kernel buffers, if possible."
    },
    {
      "flag": "-S",
      "description": " specifies an optional time-out seconds value for kernel functions - lstat(2), readlink(2), and stat(2) - that might otherwise deadlock.  The minimum for t is two; the default, fifteen; when no value is specified, the default is used. See the BLOCKS AND TIMEOUTS section for more information.",
      "argument": "t",
      "optional": false
    },
    {
      "flag": "-T",
      "description": " controls the reporting of some TCP/TPI information, also reported by netstat(1), following the network addresses.  In normal output the information appears in parentheses, each item except TCP or TPI state name identified by a keyword, followed by `=', separated from others by a single space: <TCP or TPI state name> QR=<read queue length> QS=<send queue length> SO=<socket options and values> SS=<socket states> TF=<TCP flags and values> WR=<window read length> WW=<window write length> Not all values are reported for all UNIX dialects.\tItems values (when available) are reported after the item name and '='. When the field output mode is in effect (See OUTPUT FOR OTHER PROGRAMS.) each item appears as a field with a `T' leading character. reporting. TCP/TPI information: f    selects reporting of socket options, states and values, and TCP flags and values. q    selects queue length reporting. s    selects connection state reporting. w    selects window size reporting. Not all selections are enabled for some UNIX dialects.  State may be selected for all dialects and is reported by default.  The -h or -?  help output for the -T option will show what selections may be used with the UNIX dialect. When -T is used to select information - i.e., it is followed by one or more selection characters - the displaying of state is disabled by default, and it must be explicitly selected again in the characters following -T.  (In effect, then, the default is equivalent to -Ts.) For example, if queue lengths and state are desired, use -Tqs. Socket options, socket states, some socket values, TCP flags and one TCP value may be reported (when available in the UNIX dialect) in the form of the names that commonly appear after SO_, so_, SS_, TCP_  and TF_ in the dialect's header files - most often <sys/socket.h>, <sys/socketvar.h> and <netinet/tcp_var.h>. Consult those header files for the meaning of the flags, options, states and values. ``SO='' precedes socket options and values; ``SS='', socket states; and ``TF='', TCP flags and values. If a flag or option has a value, the value will follow an '=' and the name -- e.g., ``SO=LINGER=5'', ``SO=QLIM=5'', ``TF=MSS=512''. The following seven values may be reported: Name Reported  Description (Common Symbol) KEEPALIVE keep alive time (SO_KEEPALIVE) LINGER    linger time (SO_LINGER) MSS\t   maximum segment size (TCP_MAXSEG) PQLEN\t\tpartial listen queue connections QLEN\t   established listen queue connections QLIM\t   established listen queue limit RCVBUF    receive buffer length (SO_RCVBUF) SNDBUF    send buffer length (SO_SNDBUF) Details on what socket options and values, socket states, and TCP flags and values may be displayed for particular UNIX dialects may be found in the answer to the ``Why doesn't lsof report socket options, socket states, and TCP flags and values for my dialect?'' and ``Why doesn't lsof report the partial listen queue connection count for my dialect?''  questions in the lsof FAQ (The FAQ section gives its location.)",
      "argument": "t",
      "optional": false
    },
    {
      "flag": "-T",
      "description": " controls the reporting of some TCP/TPI information, also reported by netstat(1), following the network addresses.  In normal output the information appears in parentheses, each item except TCP or TPI state name identified by a keyword, followed by `=', separated from others by a single space: <TCP or TPI state name> QR=<read queue length> QS=<send queue length> SO=<socket options and values> SS=<socket states> TF=<TCP flags and values> WR=<window read length> WW=<window write length> Not all values are reported for all UNIX dialects.\tItems values (when available) are reported after the item name and '='. When the field output mode is in effect (See OUTPUT FOR OTHER PROGRAMS.) each item appears as a field with a `T' leading character. reporting. TCP/TPI information: f    selects reporting of socket options, states and values, and TCP flags and values. q    selects queue length reporting. s    selects connection state reporting. w    selects window size reporting. Not all selections are enabled for some UNIX dialects.  State may be selected for all dialects and is reported by default.  The -h or -?  help output for the -T option will show what selections may be used with the UNIX dialect. When -T is used to select information - i.e., it is followed by one or more selection characters - the displaying of state is disabled by default, and it must be explicitly selected again in the characters following -T.  (In effect, then, the default is equivalent to -Ts.) For example, if queue lengths and state are desired, use -Tqs. Socket options, socket states, some socket values, TCP flags and one TCP value may be reported (when available in the UNIX dialect) in the form of the names that commonly appear after SO_, so_, SS_, TCP_  and TF_ in the dialect's header files - most often <sys/socket.h>, <sys/socketvar.h> and <netinet/tcp_var.h>. Consult those header files for the meaning of the flags, options, states and values. ``SO='' precedes socket options and values; ``SS='', socket states; and ``TF='', TCP flags and values. If a flag or option has a value, the value will follow an '=' and the name -- e.g., ``SO=LINGER=5'', ``SO=QLIM=5'', ``TF=MSS=512''. The following seven values may be reported: Name Reported  Description (Common Symbol) KEEPALIVE keep alive time (SO_KEEPALIVE) LINGER    linger time (SO_LINGER) MSS\t   maximum segment size (TCP_MAXSEG) PQLEN\t\tpartial listen queue connections QLEN\t   established listen queue connections QLIM\t   established listen queue limit RCVBUF    receive buffer length (SO_RCVBUF) SNDBUF    send buffer length (SO_SNDBUF) Details on what socket options and values, socket states, and TCP flags and values may be displayed for particular UNIX dialects may be found in the answer to the ``Why doesn't lsof report socket options, socket states, and TCP flags and values for my dialect?'' and ``Why doesn't lsof report the partial listen queue connection count for my dialect?''  questions in the lsof FAQ (The FAQ section gives its location.)",
      "argument": "t",
      "optional": false
    },
    {
      "flag": "-T",
      "description": " controls the reporting of some TCP/TPI information, also reported by netstat(1), following the network addresses.  In normal output the information appears in parentheses, each item except TCP or TPI state name identified by a keyword, followed by `=', separated from others by a single space: <TCP or TPI state name> QR=<read queue length> QS=<send queue length> SO=<socket options and values> SS=<socket states> TF=<TCP flags and values> WR=<window read length> WW=<window write length> Not all values are reported for all UNIX dialects.\tItems values (when available) are reported after the item name and '='. When the field output mode is in effect (See OUTPUT FOR OTHER PROGRAMS.) each item appears as a field with a `T' leading character. reporting. TCP/TPI information: f    selects reporting of socket options, states and values, and TCP flags and values. q    selects queue length reporting. s    selects connection state reporting. w    selects window size reporting. Not all selections are enabled for some UNIX dialects.  State may be selected for all dialects and is reported by default.  The -h or -?  help output for the -T option will show what selections may be used with the UNIX dialect. When -T is used to select information - i.e., it is followed by one or more selection characters - the displaying of state is disabled by default, and it must be explicitly selected again in the characters following -T.  (In effect, then, the default is equivalent to -Ts.) For example, if queue lengths and state are desired, use -Tqs. Socket options, socket states, some socket values, TCP flags and one TCP value may be reported (when available in the UNIX dialect) in the form of the names that commonly appear after SO_, so_, SS_, TCP_  and TF_ in the dialect's header files - most often <sys/socket.h>, <sys/socketvar.h> and <netinet/tcp_var.h>. Consult those header files for the meaning of the flags, options, states and values. ``SO='' precedes socket options and values; ``SS='', socket states; and ``TF='', TCP flags and values. If a flag or option has a value, the value will follow an '=' and the name -- e.g., ``SO=LINGER=5'', ``SO=QLIM=5'', ``TF=MSS=512''. The following seven values may be reported: Name Reported  Description (Common Symbol) KEEPALIVE keep alive time (SO_KEEPALIVE) LINGER    linger time (SO_LINGER) MSS\t   maximum segment size (TCP_MAXSEG) PQLEN\t\tpartial listen queue connections QLEN\t   established listen queue connections QLIM\t   established listen queue limit RCVBUF    receive buffer length (SO_RCVBUF) SNDBUF    send buffer length (SO_SNDBUF) Details on what socket options and values, socket states, and TCP flags and values may be displayed for particular UNIX dialects may be found in the answer to the ``Why doesn't lsof report socket options, socket states, and TCP flags and values for my dialect?'' and ``Why doesn't lsof report the partial listen queue connection count for my dialect?''  questions in the lsof FAQ (The FAQ section gives its location.)",
      "argument": "t",
      "optional": false
    },
    {
      "flag": "-t",
      "description": "specifies that lsof should produce terse output with process identifiers only and no header - e.g., so that the output may be piped to kill(1).  -t selects the -w option."
    },
    {
      "flag": "-u",
      "description": " user ID numbers are in the comma-separated set s - e.g., ``abe'', or ``548,root''.  (There should be no spaces in the set.) Multiple login names or user ID numbers are joined in a single ORed set before participating in AND option selection. If a login name or user ID is preceded by a `^', it becomes a negation - i.e., files of processes owned by the login name or user ID will never be listed.  A negated login name or user ID selection is neither ANDed nor ORed with other selections; it is applied before all other selections and absolutely excludes the listing of the files of the process.  For example, to direct lsof to exclude the listing of files belonging to root processes, specify ``-u^root'' or ``-u^0''.",
      "optional": false
    },
    {
      "flag": "-U",
      "description": "selects the listing of UNIX domain socket files."
    },
    {
      "flag": "-v",
      "description": "selects the listing of lsof version information, including: revision number; when the lsof binary was constructed; who constructed the binary and where; the name of the compiler used to construct the lsof binary; the version number of the compiler when readily available; the compiler and loader flags used to construct the lsof binary; and system information, typically the output of uname's -a option."
    },
    {
      "flag": "-V",
      "description": "directs lsof to indicate the items it was asked to list and failed to find - command names, file names, Internet addresses or files, login names, NFS files, PIDs, PGIDs, and UIDs. When other options are ANDed to search options, or compile-time options restrict the listing of some files, lsof may not report that it failed to find a search item when an ANDed option or compile-time option prevents the listing of the open file containing the located search item. For example, ``lsof -V -iTCP@foobar -a -d 999'' may not report a failure to locate open files at ``TCP@foobar'' and may not list any, if none have a file descriptor number of 999.\tA similar situation arises when HASSECURITY and HASNOSOCKSECURITY are defined at compile time and they prevent the listing of open files. +|-w Enables (+) or disables (-) the suppression of warning messages. The lsof builder may choose to have warning messages disabled or enabled by default.  The default warning message state is indicated in the output of the -h or -?  option.  Disabling warning messages when they are already disabled or enabling them when already enabled is acceptable. The -t option selects the -w option."
    },
    {
      "flag": "-x",
      "description": " may accompany the +d and +D options to direct their processing to cross over symbolic links and|or file system mount points encountered when scanning the directory (+d) or directory tree (+D). If -x is specified by itself without a following parameter, cross-over processing of both symbolic links and file system mount points is enabled.\tNote that when -x is specified without a parameter, the next argument must begin with '-' or '+'. The optional 'f' parameter enables file system mount point cross-over processing; 'l', symbolic link cross-over processing. The -x option may not be supplied without also supplying a +d or +D option.",
      "argument": "fl",
      "optional": false
    },
    {
      "flag": "-X",
      "description": " AIX: This IBM AIX RISC/System 6000 option requests the reporting of executed text file and shared library references. WARNING: because this option uses the kernel readx() function, its use on a busy AIX system might cause an application process to hang so completely that it can neither be killed nor stopped.  I have never seen this happen or had a report of its happening, but I think there is a remote possibility it could happen. By default use of readx() is disabled.  On AIX 5L and above lsof may need setuid-root permission to perform the actions this option requests. The lsof builder may specify that the -X option be restricted to processes whose real UID is root.  If that has been done, the -X option will not appear in the -h or -?  help output unless the real UID of the lsof process is root.  The default lsof distribution allows any UID to specify -X, so by default it will appear in the help output. When AIX readx() use is disabled, lsof may not be able to report information for all text and loader file references, but it may also avoid exacerbating an AIX kernel directory search kernel error, known as the Stale Segment ID bug. The readx() function, used by lsof or any other program to access some sections of kernel virtual memory, can trigger the Stale Segment ID bug.  It can cause the kernel's dir_search() function to believe erroneously that part of an in-memory copy of a file system directory has been zeroed.  Another application process, distinct from lsof, asking the kernel to search the directory - e.g., by using open(2) - can cause dir_search() to loop forever, thus hanging the application process. Consult the lsof FAQ (The FAQ section gives its location.)\tand the 00README file of the lsof distribution for a more complete description of the Stale Segment ID bug, its APAR, and methods for defining readx() use when compiling lsof. Darwin: This Darwin option requests that lsof reports exclusively information about files from the process file descriptor table and process file ports. Linux: This Linux option requests that lsof skip the reporting of information on all open TCP, UDP and UDPLITE IPv4 and IPv6 files. This Linux option is most useful when the system has an extremely large number of open TCP, UDP and UDPLITE files, the processing of whose information in the /proc/net/tcp* and /proc/net/udp* files would take lsof a long time, and whose reporting is not of interest. Use this option with care and only when you are sure that the information you want lsof to display isn't associated with open TCP, UDP or UDPLITE socket files. Solaris 10 and above: This Solaris 10 and above option requests the reporting of cached paths for files that have been deleted - i.e., removed with rm(1) or unlink(2). The cached path is followed by the string `` (deleted)'' to indicate that the path by which the file was opened has been deleted. Because intervening changes made to the path - i.e., renames with mv(1) or rename(2) - are not recorded in the cached path, what lsof reports is only the path by which the file was opened, not its possibly different final path.",
      "optional": false
    },
    {
      "flag": "-z",
      "description": " specifies how Solaris 10 and higher zone information is to be handled. Without a following argument - e.g., NO z - the option specifies that zone names are to be listed in the ZONE output column. The -z option may be followed by a zone name, z.  That causes lsof to list only open files for processes in that zone.  Multiple -z z option and argument pairs may be specified to form a list of named zones.  Any open file of any process in any of the zones will be listed, subject to other conditions specified by other options and arguments.",
      "argument": "z",
      "optional": false
    },
    {
      "flag": "-Z",
      "description": " specifies how SELinux security contexts are to be handled.\tIt and 'Z' field output character support are inhibited when SELinux is disabled in the running Linux kernel.  See OUTPUT FOR OTHER PROGRAMS for more information on the 'Z' field output character. Without a following argument - e.g., NO Z - the option specifies that security contexts are to be listed in the SECURITY-CONTEXT output column. The -Z option may be followed by a wildcard security context name, Z.\tThat causes lsof to list only open files for processes in that security context.  Multiple -Z Z option and argument pairs may be specified to form a list of security contexts.  Any open file of any process in any of the security contexts will be listed, subject to other conditions specified by other options and arguments.\tNote that Z can be A:B:C or *:B:C or A:B:* or *:*:C to match against the A:B:C context. --   The double minus sign option is a marker that signals the end of the keyed options.\tIt may be used, for example, when the first file name begins with a minus sign.  It may also be used when the absence of a value for the last keyed option must be signified by the presence of a minus sign in the following option and before the start of the file names. names These are path names of specific files to list.  Symbolic links are resolved before use.  The first name may be separated from the preceding options with the ``--'' option. If a name is the mounted-on directory of a file system or the device of the file system, lsof will list all the files open on the file system.  To be considered a file system, the name must match a mounted-on directory name in mount(8) output, or match the name of a block device associated with a mounted-on directory name.  The +|-f option may be used to force lsof to consider a name a file system identifier (+f) or a simple file (-f). If name is a path to a directory that is not the mounted-on directory name of a file system, it is treated just as a regular file is treated - i.e., its listing is restricted to processes that have it open as a file or as a process-specific directory, such as the root or current working directory.  To request that lsof look for open files inside a directory name, use the +d s and +D D options. If a name is the base name of a family of multiplexed files - e.g, AIX's /dev/pt[cs] - lsof will list all the associated multiplexed files on the device that are open - e.g., /dev/pt[cs]/1, /dev/pt[cs]/2, etc. If a name is a UNIX domain socket name, lsof will usually search for it by the characters of the name alone - exactly as it is specified and is recorded in the kernel socket structure.  (See the next paragraph for an exception to that rule for Linux.) Specifying a relative path - e.g., ./file - in place of the file's absolute path - e.g., /tmp/file - won't work because lsof must match the characters you specify with what it finds in the kernel UNIX domain socket structures. If a name is a Linux UNIX domain socket name, in one case lsof is able to search for it by its device and inode number, allowing name to be a relative path.  The case requires that the absolute path -- i.e., one beginning with a slash ('/') be used by the process that created the socket, and hence be stored in the /proc/net/unix file; and it requires that lsof be able to obtain the device and node numbers of both the absolute path in /proc/net/unix and name via successful stat(2) system calls.  When those conditions are met, lsof will be able to search for the UNIX domain socket when some path to it is is specified in name.  Thus, for example, if the path is /dev/log, and an lsof search is initiated when the working directory is /dev, then name could be ./log. If a name is none of the above, lsof will list any open files whose device and inode match that of the specified path name. If you have also specified the -b option, the only names you may safely specify are file systems for which your mount table supplies alternate device numbers.\tSee the AVOIDING KERNEL BLOCKS and ALTERNATE DEVICE NUMBERS sections for more information. Multiple file names are joined in a single ORed set before participating in AND option selection.",
      "argument": "Z",
      "optional": false
    }
  ],
  "examples": [],
  "relatedCommands": [
    "access",
    "awk",
    "crash",
    "ff",
    "fstat",
    "fuser",
    "gethostname",
    "isprint",
    "kill",
    "localtime",
    "lstat",
    "modload",
    "mount",
    "netstat",
    "perl"
  ],
  "seeAlso": [
    {
      "name": "access",
      "section": 2
    },
    {
      "name": "awk",
      "section": 1
    },
    {
      "name": "crash",
      "section": 1
    },
    {
      "name": "ff",
      "section": 1
    },
    {
      "name": "fstat",
      "section": 8
    },
    {
      "name": "fuser",
      "section": 1
    },
    {
      "name": "gethostname",
      "section": 2
    },
    {
      "name": "isprint",
      "section": 3
    },
    {
      "name": "kill",
      "section": 1
    },
    {
      "name": "localtime",
      "section": 3
    },
    {
      "name": "lstat",
      "section": 2
    },
    {
      "name": "modload",
      "section": 8
    },
    {
      "name": "mount",
      "section": 8
    },
    {
      "name": "netstat",
      "section": 1
    },
    {
      "name": "perl",
      "section": 1
    },
    {
      "name": "ps",
      "section": 1
    },
    {
      "name": "readlink",
      "section": 2
    },
    {
      "name": "setlocale",
      "section": 3
    },
    {
      "name": "stat",
      "section": 2
    },
    {
      "name": "strftime",
      "section": 3
    },
    {
      "name": "time",
      "section": 2
    },
    {
      "name": "uname",
      "section": 1
    },
    {
      "name": "LSOF",
      "section": 8
    }
  ],
  "metadata": {
    "author": "ity of the user of this option limits it to"
  },
  "searchContent": "lsof list open files lsof revision 4 lsof - abchlnnoprtuvvx -a a -c c c c -d d -d d -e s -e -f cfggn -f f -g s -i i -k k -k k -l l -m m -m -o o -p s -r t m fmt -s p s -s t -t t -u s -w -x fl -x -z z -z z -- names lsof list open revision -i files that belong to either login fff or ggg and have network connections to either host aaa bbb or ccc ddd options may be grouped together following a single prefix -- e g the option set -a -b -c may be stated as -abc however since values are optional following -f -f -g -i -l -o -r -s -s -t -x and -z when you have no values for them be careful that the following character isn t ambiguous for example -fn might represent the -f and selects the listing of files any of whose internet address matches the address specified in i if no address is specified this option selects the listing of all internet and x 25 hp-ux network files if -i4 or -i6 is specified with no following address only files of the indicated ip version ipv4 or ipv6 are displayed an ipv6 specification may be used only if the dialects supports ipv6 as indicated by 46 and ipv 46 in lsof s -h or - output sequentially specifying -i4 followed by -i6 is the same as specifying -i and vice-versa specifying -i4 or -i6 after -i is the same as specifying -i4 or -i6 by itself multiple addresses up to a limit of 100 may be specified with multiple -i options a port number or service name range is counted as one address they are joined in a single ored set before participating in and option selection an internet address is specified in the form items in square brackets are optional 46 protocol hostname hostaddr service port where 46 specifies the ip version ipv4 or ipv6 that applies to the following address 6 may be be specified only if the unix dialect supports ipv6 if neither 4 nor 6 is specified the following address applies to all ip versions protocol is a protocol name - tcp udp hostname is an internet host name unless a specific ip version is specified open network files associated with host names of all versions will be selected hostaddr is a numeric internet ipv4 address in dot form or an ipv6 numeric address in colon form enclosed in brackets if the unix dialect supports ipv6 when an ip version is selected only its numeric addresses may be specified service is an etc services name - e g smtp - or a list of them port is a port number or a list of them ipv6 options may be used only if the unix dialect supports ipv6 to see if the dialect supports ipv6 run lsof and specify the -h or - help option if the displayed description of the -i option contains 46 and ipv 46 ipv6 is supported ipv4 host names and addresses may not be specified if network file selection is limited to ipv6 with -i 6 ipv6 host names and addresses may not be specified if network file selection is limited to ipv4 with -i 4 when an open ipv4 network file s address is mapped in an ipv6 address the open file s type will be ipv6 not ipv4 and its display will be selected by 6 not 4 at least one address component - 4 6 protocol hostname hostaddr or service - must be supplied the character leading the host specification is always required as is the leading the port specification specify either hostname or hostaddr specify either service name list or port number list if a service name list is specified the protocol may also need to be specified if the tcp udp and udplite port numbers for the service name are different use any case - lower or upper - for protocol service names and port numbers may be combined in a list whose entries are separated by commas and whose numeric range entries are separated by minus signs there may be no embedded spaces and all service names must belong to the specified protocol since service names may contain embedded minus signs the starting entry of a range can t be a service name it can be a port number however here are some sample addresses -n options or it might represent the n field identifier character following the -f option when ambiguity is possible start a new option with a - character - e g -f -n if the next option is a file name follow the possibly ambiguous option with -- - e g -f -- name either the or the - prefix may be applied to a group of options options that don t take on separate meanings for each prefix - e g -i - may be grouped under either prefix thus for example m -i may be stated as mi and the group means the same as the separate options be careful of prefix grouping when one or more options in the group does take on separate meanings under different prefixes - e g -m -im is not the same request as -i m when in doubt use separate options with appropriate prefixes - -h these two equivalent options select a usage help output list lsof displays a shortened form of this output when it detects an error in the options supplied to it after it has displayed messages explaining each error escape the character as your shell requires -a causes list selection options to be anded as described above -a is implemented via dynamic modules it allows the lsof user to specify a as an alternate name list file where the kernel addresses of the dynamic modules might be found see the lsof faq the faq section gives its location for more information about dynamic modules their symbols and how they affect lsof -b causes lsof to avoid kernel functions that might block - lstat 2 readlink 2 and stat 2 see the blocks and timeouts and avoiding kernel blocks sections for information on using this option -c that begins with the characters of c multiple commands may be specified using multiple -c options they are joined in a single ored set before participating in and option selection if c begins with a then the following characters specify a command name whose processes are to be ignored excluded if c begins and ends with a slash the characters between the slashes are interpreted as a regular expression shell meta-characters in the regular expression must be quoted to prevent their interpretation by the shell the closing slash may be followed by these modifiers b the regular expression is a basic one i ignore the case of letters x the regular expression is an extended one default see the lsof faq the faq section gives its location for more information on basic and extended regular expressions the simple command specification is tested first if that test fails the command regular expression is applied if the simple command test succeeds the command regular expression test isn t made this may result in no command found for regex messages when lsof s -v option is specified c w defines the maximum number of initial characters of the name supplied by the unix dialect of the unix command associated with a process to be printed in the command column the lsof default is nine note that many unix dialects do not supply all command name characters to lsof in the files and structures from which lsof obtains command name often dialects limit the number of characters supplied in those sources for example linux 2 4 27 and solaris 9 both limit command name length to 16 characters if w is zero 0 all command characters supplied to lsof by the unix dialect will be printed if w is less than the length of the column title command it will be raised to that length -c disables the reporting of any path name components from the kernel s name cache see the kernel name cache section for more information d s causes lsof to search for all open instances of directory s and the files and directories it contains at its top level d does not descend the directory tree rooted at s the d d option may be used to request a full-descent directory tree search rooted at directory d processing of the d option does not follow symbolic links within s unless the -x or -x l option is also specified nor does it search for open files on file system mount points on subdirectories of s unless the -x or -x f option is also specified note the authority of the user of this option limits it to searching for files that the user has permission to examine with the system stat 2 function -d include in the output listing the file descriptors are specified in the comma-separated set s - e g cwd 1 3 6 2 there should be no spaces in the set the list is an exclusion list if all entries of the set begin with it is an inclusion list if no entry begins with mixed lists are not permitted a file descriptor number range may be in the set as long as neither member is empty both members are numbers and the ending member is larger than the starting one - e g 0-7 or 3-10 ranges may be specified for exclusion if they have the prefix - e g 0-7 excludes all file descriptors 0 through 7 multiple file descriptor numbers are joined in a single ored set before participating in and option selection when there are exclusion and inclusion members in the set lsof reports them as errors and exits with a non-zero return code see the description of file descriptor fd output values in the output section for more information on file descriptor names d d causes lsof to search for all open instances of directory d and all the files and directories it contains to its complete depth processing of the d option does not follow symbolic links within d unless the -x or -x l option is also specified nor does it search for open files on file system mount points on subdirectories of d unless the -x or -x f option is also specified note the authority of the user of this option limits it to searching for files that the user has permission to examine with the system stat 2 function further note lsof may process this option slowly and require a large amount of dynamic memory to do it this is because it must descend the entire directory tree rooted at d calling stat 2 for each file and directory building a list of all the files it finds and searching that list for a match with every open file when directory d is large these steps can take a long time so use this option prudently -d option is sometimes restricted see the device cache file section and the sections that follow it for more information on this option optionally be followed by a path name lsof recognizes these function letters - report device cache file paths b - build the device cache file i - ignore the device cache file r - read the device cache file u - read and update the device cache file the b r and u functions accompanied by a path name are sometimes restricted when these functions are restricted they will not appear in the description of the -d option that accompanies -h or - option output see the device cache file section and the sections that follow it for more information on these functions and when they re restricted the function reports the read-only and write paths that lsof can use for the device cache file the names of any environment variables whose values lsof will examine when forming the device cache file path and the format for the personal device cache file path escape the character as your shell requires when available the b r and u functions may be followed by the device cache file s path the standard default is lsof hostname in the home directory of the real user id that executes lsof but this could have been changed when lsof was configured and compiled the output of the -h and - options show the current default prefix - e g lsof the suffix hostname is the first component of the host s name returned by gethostname 2 when available the b function directs lsof to build a new device cache file at the default or specified path the i function directs lsof to ignore the default device cache file and obtain its information about devices via direct calls to the kernel the r function directs lsof to read the device cache at the default or specified path but prevents it from creating a new device cache file when none exists or the existing one is improperly structured the r function when specified without a path name prevents lsof from updating an incorrect or outdated device cache file or creating a new one in its place the r function is always available when it is specified without a path name argument it may be restricted by the permissions of the lsof process when available the u function directs lsof to read the device cache file at the default or specified path if possible and to rebuild it if necessary this is the default device cache file function when no -d option has been specified -e s exempts the file system whose path name is s from being subjected to kernel function calls that might block the e option exempts stat 2 lstat 2 and most readlink 2 kernel function calls the -d option is sometimes restricted see the device cache file section and the sections that follow it for more information on this option optionally be followed by a path name lsof recognizes these function letters - report device cache file paths b - build the device cache file i - ignore the device cache file r - read the device cache file u - read and update the device cache file the b r and u functions accompanied by a path name are sometimes restricted when these functions are restricted they will not appear in the description of the -d option that accompanies -h or - option output see the device cache file section and the sections that follow it for more information on these functions and when they re restricted the function reports the read-only and write paths that lsof can use for the device cache file the names of any environment variables whose values lsof will examine when forming the device cache file path and the format for the personal device cache file path escape the character as your shell requires when available the b r and u functions may be followed by the device cache file s path the standard default is lsof hostname in the home directory of the real user id that executes lsof but this could have been changed when lsof was configured and compiled the output of the -h and - options show the current default prefix - e g lsof the suffix hostname is the first component of the host s name returned by gethostname 2 when available the b function directs lsof to build a new device cache file at the default or specified path the i function directs lsof to ignore the default device cache file and obtain its information about devices via direct calls to the kernel the r function directs lsof to read the device cache at the default or specified path but prevents it from creating a new device cache file when none exists or the existing one is improperly structured the r function when specified without a path name prevents lsof from updating an incorrect or outdated device cache file or creating a new one in its place the r function is always available when it is specified without a path name argument it may be restricted by the permissions of the lsof process when available the u function directs lsof to read the device cache file at the default or specified path if possible and to rebuild it if necessary this is the default device cache file function when no -d option has been specified -e s exempts the file system whose path name is s from being subjected to kernel function calls that might block the e option exempts stat 2 lstat 2 and most readlink 2 kernel function calls the -e multiple file systems may be specified with separate -e specifications and each may have readlink 2 calls exempted or not this option is currently implemented only for linux caution this option can easily be mis-applied to other than the file system of interest because it uses path name rather than the more reliable device and inode numbers device and inode numbers are acquired via the potentially blocking stat 2 kernel call and are thus not available but see the -m m option as a possible alternative way to supply device numbers use this option with great care and fully specify the path name of the file system to be exempted when open files on exempted file systems are reported it may not be possible to obtain all their information therefore some information columns will be blank the characters unkn preface the values in the type column and the applicable exemption option is added in parentheses to the end of the name column some device number information might be made available via the -m m option -e e specifies that linux pipe linux unix socket and linux pseudoterminal files should be displayed with endpoint information and the files of the endpoints should also be displayed note unix socket file endpoint information is only available when the compile flags line of -v output contains hasuxsockept and psudoterminal endpoint information is only available when the compile flags line contains hasptyept pipe endpoint information is displayed in the name column in the form pid cmd fdmode where pid is the endpoint process id cmd is the endpoint process command fd is the endpoint file s descriptor and mode is the endpoint file s access mode pseudoterminal endpoint information is displayed in the name column as - dev ptsmin pid cmd fdmode or pid cmd fdmode the first form is for a primary device the second for a replica device min is a replica device s minor device number and pid cmd fd and mode are the same as with pipe endpoint information note psudoterminal endpoint information is only available when the compile flags line of -v output contains hasptyept unix socket file endpoint information is displayed in the name column in the form type type - ino inode pid cmd fdmode where type is the socket type inode is the i-node number of the connected socket and pid cmd fd and mode are the same as with pipe endpoint information note unix socket file endpoint information is available only when the compile flags line of -v output contains hasuxsockept multiple occurrences of this information can appear in a file s name column -e displayed with endpoint information but not the files of the endpoints -f cfggn f by itself clarifies how path name arguments are to be interpreted when followed by c f g g or n in any combination it specifies that the listing of kernel file structure information is to be enabled or inhibited - normally a path name argument is taken to be a file system name if it matches a mounted-on directory name reported by mount 8 or if it represents a block device named in the mount output and associated with a mounted directory name when f is specified all path name arguments will be taken to be file system names and lsof will complain if any are not this can be useful for example when the file system name mounted-on device isn t a block device this happens for some cd-rom file systems when -f is specified by itself all path name arguments will be taken to be simple files thus for example the -f -- arguments direct lsof to search for open files with a path name not all open files in the root file system be careful to make sure f and -f are properly terminated and aren t followed by a character e g of the file or file system name that might be taken as a parameter for example use -- after f and -f as in these examples lsof f -- file system name lsof -f -- file name the listing of information from kernel file structures requested with the f cfggn option form is normally inhibited and is not available in whole or part for some dialects - e g proc-based linux kernels below 2 6 22 when the prefix to f is a plus sign these characters request file structure information c file structure use count not linux f file structure address not linux g file flag abbreviations linux 2 6 22 and up g file flags in hexadecimal linux 2 6 22 and up n file structure node address not linux when the prefix is minus - the same characters disable the listing of the indicated values file structure addresses use counts flags and node addresses may be used to detect more readily identical files inherited by child processes and identical files in use by different processes lsof column output can be sorted by output columns holding the values and listed to identify identical file use or lsof field output can be parsed by an awk or perl post-filter script or by a c program -f output for processing by another program and the character that terminates each output field each field to be output is specified with a single character in f the field terminator defaults to nl but may be changed to nul 000 see the output for other programs section for a description of the field identification characters and the field output process when the field selection character list is empty all standard fields are selected except the raw device field security context and zone field for compatibility reasons and the nl field terminator is used when the field selection character list contains only a zero 0 all fields are selected except the raw device field for compatibility reasons and the nul terminator character is used other combinations of fields and their associated field terminator character must be set with explicit entries in f as described in the output for other programs section when a field selection character identifies an item lsof does not normally list - e g ppid selected with -r - specification of the field character - e g -fr - also selects the listing of the item when the field selection character list contains the single character lsof will display a help list of the field identification characters escape the character as your shell requires -g excludes or selects the listing of files for the processes whose optional process group identification pgid numbers are in the comma-separated set s - e g 123 or 123 456 there should be no spaces in the set pgid numbers that begin with negation represent exclusions multiple pgid numbers are joined in a single ored set before participating in and option selection however pgid exclusions are applied without oring or anding and take effect before other selection criteria are applied the -g option also enables the output display of pgid numbers when specified without a pgid set that s all it does -i files that belong to either login fff or ggg and have network connections to either host aaa bbb or ccc ddd options may be grouped together following a single prefix -- e g the option set -a -b -c may be stated as -abc however since values are optional following -f -f -g -i -l -o -r -s -s -t -x and -z when you have no values for them be careful that the following character isn t ambiguous for example -fn might represent the -f and selects the listing of files any of whose internet address matches the address specified in i if no address is specified this option selects the listing of all internet and x 25 hp-ux network files if -i4 or -i6 is specified with no following address only files of the indicated ip version ipv4 or ipv6 are displayed an ipv6 specification may be used only if the dialects supports ipv6 as indicated by 46 and ipv 46 in lsof s -h or - output sequentially specifying -i4 followed by -i6 is the same as specifying -i and vice-versa specifying -i4 or -i6 after -i is the same as specifying -i4 or -i6 by itself multiple addresses up to a limit of 100 may be specified with multiple -i options a port number or service name range is counted as one address they are joined in a single ored set before participating in and option selection an internet address is specified in the form items in square brackets are optional 46 protocol hostname hostaddr service port where 46 specifies the ip version ipv4 or ipv6 that applies to the following address 6 may be be specified only if the unix dialect supports ipv6 if neither 4 nor 6 is specified the following address applies to all ip versions protocol is a protocol name - tcp udp hostname is an internet host name unless a specific ip version is specified open network files associated with host names of all versions will be selected hostaddr is a numeric internet ipv4 address in dot form or an ipv6 numeric address in colon form enclosed in brackets if the unix dialect supports ipv6 when an ip version is selected only its numeric addresses may be specified service is an etc services name - e g smtp - or a list of them port is a port number or a list of them ipv6 options may be used only if the unix dialect supports ipv6 to see if the dialect supports ipv6 run lsof and specify the -h or - help option if the displayed description of the -i option contains 46 and ipv 46 ipv6 is supported ipv4 host names and addresses may not be specified if network file selection is limited to ipv6 with -i 6 ipv6 host names and addresses may not be specified if network file selection is limited to ipv4 with -i 4 when an open ipv4 network file s address is mapped in an ipv6 address the open file s type will be ipv6 not ipv4 and its display will be selected by 6 not 4 at least one address component - 4 6 protocol hostname hostaddr or service - must be supplied the character leading the host specification is always required as is the leading the port specification specify either hostname or hostaddr specify either service name list or port number list if a service name list is specified the protocol may also need to be specified if the tcp udp and udplite port numbers for the service name are different use any case - lower or upper - for protocol service names and port numbers may be combined in a list whose entries are separated by commas and whose numeric range entries are separated by minus signs there may be no embedded spaces and all service names must belong to the specified protocol since service names may contain embedded minus signs the starting entry of a range can t be a service name it can be a port number however here are some sample addresses -i6 - ipv6 only tcp 25 - tcp and port 25 1 2 3 4 - internet ipv4 host address 1 2 3 4 3ffe 1ebc 1 1234 - internet ipv6 host address 3ffe 1ebc 1 port 1234 udp who - udp who service port tcp lsof itap 513 - tcp port 513 and host name lsof itap tcp foo 1-10 smtp 99 - tcp ports 1 through 10 service name smtp port 99 host name foo tcp bar 1-smtp - tcp ports 1 through smtp host bar time - either tcp udp or udplite time service port -k where task thread reporting is supported if help output - i e the output of the -h or - options - shows this option then task thread reporting is supported by the dialect if -k is followed by a value k it must be i that causes lsof to ignore tasks particularly in the default list-everything case when no other options are specified when -k and -a are both specified on linux and the tasks of a main process are selected by other options the main process will also be listed as though it were a task but without a task id see the description of the tid column in the output section where the freebsd version supports threads all threads will be listed with their ids in general threads and tasks inherit the files of the caller but may close some and open others so lsof always reports all the open files of threads and tasks -k etc -k is not available under aix on the ibm risc system 6000 -l inhibits the conversion of user id numbers to login names it is also useful when login name lookup is working improperly or slowly -l l enables or disables - the listing of file link counts where they are available - e g they aren t available for sockets or most fifos and pipes when l is specified without a following number all link counts will be listed when -l is specified the default no link counts will be listed when l is followed by a number only files having a link count less than that number will be listed no number may follow -l a specification of the form l1 will select open files that have been unlinked a specification of the form al1 file system will select unlinked open files on the specified file system for other link count comparisons use field output -f and a post-processing script or program -m m specifies an alternate kernel memory file or activates mount table supplement processing the option form -m m specifies a kernel memory file m in place of dev kmem or dev mem - e g a crash dump file the option form m requests that a mount supplement file be written to the standard output file all other options are silently ignored there will be a line in the mount supplement file for each mounted file system containing the mounted file system directory followed by a single space followed by the device number in hexadecimal 0x format - e g 0x801 lsof can use the mount supplement file to get device numbers for file systems when it can t get them via stat 2 or lstat 2 the option form m m identifies m as a mount supplement file note the m and m m options are not available for all supported dialects check the output of lsof s -h or - options to see if the m and m m options are available -m enables or disables - the reporting of portmapper registrations for local tcp udp and udplite ports where port mapping is supported see the last paragraph of this option description for information about where portmapper registration reporting is supported the default reporting mode is set by the lsof builder with the haspmapenabled define in the dialect s machine h header file lsof is distributed with the haspmapenabled define deactivated so portmapper reporting is disabled by default and must be requested with m specifying lsof s -h or - option will report the default mode disabling portmapper registration when it is already disabled or enabling it when already enabled is acceptable when portmapper registration reporting is enabled lsof displays the portmapper registration if any for local tcp udp or udplite ports in square brackets immediately following the port numbers or service names - e g 1234 name or name 100083 the registration information may be a name or number depending on what the registering program supplied to the portmapper when it registered the port when portmapper registration reporting is enabled lsof may run a little more slowly or even become blocked when access to the portmapper becomes congested or stopped reverse the reporting mode to determine if portmapper registration reporting is slowing or blocking lsof for purposes of portmapper registration reporting lsof considers a tcp udp or udplite port local if it is found in the local part of its containing kernel structure or if it is located in the foreign part of its containing kernel structure and the local and foreign internet addresses are the same or if it is located in the foreign part of its containing kernel structure and the foreign internet address is inaddr loopback 127 0 0 1 this rule may make lsof ignore some foreign ports on machines with multiple interfaces when the foreign internet address is on a different interface from the local one see the lsof faq the faq section gives its location for further discussion of portmapper registration reporting issues portmapper registration reporting is supported only on dialects that have rpc header files some linux distributions with glibc 2 14 do not have them when portmapper registration reporting is supported the -h or - help output will show the -m option -n inhibits the conversion of network numbers to host names for network files inhibiting conversion may make lsof run faster it is also useful when host name lookup is not working properly -n selects the listing of nfs files -o size off output column title to be changed to offset note on some unix dialects lsof can t obtain accurate or consistent file offset information from its kernel data sources sometimes just for particular kinds of files e g socket files consult the lsof faq the faq section gives its location for more information the -o and -s options are mutually exclusive they can t both be specified when neither is specified lsof displays whatever value - size or offset - is appropriate and available for the type of the file 0t for a file offset before the form is switched to 0x an o value of zero unlimited directs lsof to use the 0t form for all offset output this option does not direct lsof to display offset at all times specify -o without a trailing number to do that -o o only specifies the number of digits after 0t in either mixed size and offset or offset-only output thus for example to direct lsof to display offset at all times with a decimal digit count of 10 use or -o size off output column title to be changed to offset note on some unix dialects lsof can t obtain accurate or consistent file offset information from its kernel data sources sometimes just for particular kinds of files e g socket files consult the lsof faq the faq section gives its location for more information the -o and -s options are mutually exclusive they can t both be specified when neither is specified lsof displays whatever value - size or offset - is appropriate and available for the type of the file 0t for a file offset before the form is switched to 0x an o value of zero unlimited directs lsof to use the 0t form for all offset output this option does not direct lsof to display offset at all times specify -o without a trailing number to do that -o o only specifies the number of digits after 0t in either mixed size and offset or offset-only output thus for example to direct lsof to display offset at all times with a decimal digit count of 10 use or -o size off output column title to be changed to offset note on some unix dialects lsof can t obtain accurate or consistent file offset information from its kernel data sources sometimes just for particular kinds of files e g socket files consult the lsof faq the faq section gives its location for more information the -o and -s options are mutually exclusive they can t both be specified when neither is specified lsof displays whatever value - size or offset - is appropriate and available for the type of the file 0t for a file offset before the form is switched to 0x an o value of zero unlimited directs lsof to use the 0t form for all offset output this option does not direct lsof to display offset at all times specify -o without a trailing number to do that -o o only specifies the number of digits after 0t in either mixed size and offset or offset-only output thus for example to direct lsof to display offset at all times with a decimal digit count of 10 use or -oo10 the default number of digits allowed after 0t is normally 8 but may have been changed by the lsof builder consult the description of the -o o option in the output of the -h or - option to determine the default that is in effect -o directs lsof to bypass the strategy it uses to avoid being blocked by some kernel operations - i e doing them in forked child processes see the blocks and timeouts and avoiding kernel blocks sections for more information on kernel operations that may block lsof while use of this option will reduce lsof startup overhead it may also cause lsof to hang when the kernel doesn t respond to a function use this option cautiously -p optional process identification pid numbers are in the comma-separated set s - e g 123 or 123 456 there should be no spaces in the set pid numbers that begin with negation represent exclusions multiple process id numbers are joined in a single ored set before participating in and option selection however pid exclusions are applied without oring or anding and take effect before other selection criteria are applied -p inhibits the conversion of port numbers to port names for network files inhibiting the conversion may make lsof run a little faster it is also useful when port name lookup is not working properly -r t m fmt puts lsof in repeat mode there lsof lists open files as selected by other options delays t seconds default fifteen then repeats the listing delaying and listing repetitively until stopped by a condition defined by the prefix to the option if the prefix is a - repeat mode is endless lsof must be terminated with an interrupt or quit signal if the prefix is repeat mode will end the first cycle no open files are listed - and of course when lsof is stopped with an interrupt or quit signal when repeat mode ends because no files are listed the process exit code will be zero if any open files were ever listed one if none were ever listed lsof marks the end of each listing if field output is in progress the -f option has been specified the default marker is m otherwise the default marker is the marker is followed by a nl character the optional m fmt argument specifies a format for the marker line the fmt characters following m are interpreted as a format specification to the strftime 3 function when both it and the localtime 3 function are available in the dialect s c library consult the strftime 3 documentation for what may appear in its format specification note that when field output is requested with the -f option fmt cannot contain the nl format n note also that when fmt contains spaces or other characters that affect the shell s interpretation of arguments fmt must be quoted appropriately repeat mode reduces lsof startup overhead so it is more efficient to use this mode than to call lsof repetitively from a shell script for example to use repeat mode most efficiently accompany -r with specification of other lsof selection options so the amount of kernel memory access lsof does will be kept to a minimum options that filter at the process level - e g -c -g -p -u - are the most efficient selectors repeat mode is useful when coupled with field output see the -f option description and a supervising awk or perl script or a c program -r directs lsof to list the parent process identification number in the ppid column -s s alone directs lsof to display file size at all times it causes the size off output column title to be changed to size if the file does not have a size nothing is displayed the optional -s p s form is available only for selected dialects and only when the -h or - help output lists it when the optional form is available the s may be followed by a protocol name p either tcp or udp a colon and a comma-separated protocol state name list the option causes open tcp and udp files to be excluded if their state name s are in the list s preceded by a or included if their name s are not preceded by a dialects that support this option may support only one protocol when an unsupported protocol is specified a message will be displayed indicating state names for the protocol are unavailable when an inclusion list is defined only network files with state names in the list will be present in the lsof output thus specifying one state name means that only network files with that lone state name will be listed case is unimportant in the protocol or state names but there may be no spaces and the colon separating the protocol name p and the state name list s is required if only tcp and udp files are to be listed as controlled by the specified exclusions and inclusions the -i option must be specified too if only a single protocol s files are to be listed add its name as an argument to the -i option for example to list only network files with tcp state listen use -itcp -stcp listen or for example to list network files with all udp states except idle use -iudp -sudp idle state names vary with unix dialects so it s not possible to provide a complete list some common tcp state names are closed idle bound listen established syn sent syn rcdv established close wait fin wait1 closing last ack fin wait 2 and time wait two common udp state names are unbound and idle see the lsof faq the faq section gives its location for more information on how to use protocol state exclusion and inclusion including examples the -o without a following decimal digit count and -s option without a following protocol and state name list are mutually exclusive they can t both be specified when neither is specified lsof displays whatever value - size or offset - is appropriate and available for the type of file since some types of files don t have true sizes - sockets fifos pipes etc - lsof displays for their sizes the content amounts in their associated kernel buffers if possible -s specifies an optional time-out seconds value for kernel functions - lstat 2 readlink 2 and stat 2 - that might otherwise deadlock the minimum for t is two the default fifteen when no value is specified the default is used see the blocks and timeouts section for more information -t controls the reporting of some tcp tpi information also reported by netstat 1 following the network addresses in normal output the information appears in parentheses each item except tcp or tpi state name identified by a keyword followed by separated from others by a single space tcp or tpi state name qr read queue length qs send queue length so socket options and values ss socket states tf tcp flags and values wr window read length ww window write length not all values are reported for all unix dialects items values when available are reported after the item name and when the field output mode is in effect see output for other programs each item appears as a field with a t leading character reporting tcp tpi information f selects reporting of socket options states and values and tcp flags and values q selects queue length reporting s selects connection state reporting w selects window size reporting not all selections are enabled for some unix dialects state may be selected for all dialects and is reported by default the -h or - help output for the -t option will show what selections may be used with the unix dialect when -t is used to select information - i e it is followed by one or more selection characters - the displaying of state is disabled by default and it must be explicitly selected again in the characters following -t in effect then the default is equivalent to -ts for example if queue lengths and state are desired use -tqs socket options socket states some socket values tcp flags and one tcp value may be reported when available in the unix dialect in the form of the names that commonly appear after so so ss tcp and tf in the dialect s header files - most often sys socket h sys socketvar h and netinet tcp var h consult those header files for the meaning of the flags options states and values so precedes socket options and values ss socket states and tf tcp flags and values if a flag or option has a value the value will follow an and the name -- e g so linger 5 so qlim 5 tf mss 512 the following seven values may be reported name reported description common symbol keepalive keep alive time so keepalive linger linger time so linger mss maximum segment size tcp maxseg pqlen partial listen queue connections qlen established listen queue connections qlim established listen queue limit rcvbuf receive buffer length so rcvbuf sndbuf send buffer length so sndbuf details on what socket options and values socket states and tcp flags and values may be displayed for particular unix dialects may be found in the answer to the why doesn t lsof report socket options socket states and tcp flags and values for my dialect and why doesn t lsof report the partial listen queue connection count for my dialect questions in the lsof faq the faq section gives its location -t controls the reporting of some tcp tpi information also reported by netstat 1 following the network addresses in normal output the information appears in parentheses each item except tcp or tpi state name identified by a keyword followed by separated from others by a single space tcp or tpi state name qr read queue length qs send queue length so socket options and values ss socket states tf tcp flags and values wr window read length ww window write length not all values are reported for all unix dialects items values when available are reported after the item name and when the field output mode is in effect see output for other programs each item appears as a field with a t leading character reporting tcp tpi information f selects reporting of socket options states and values and tcp flags and values q selects queue length reporting s selects connection state reporting w selects window size reporting not all selections are enabled for some unix dialects state may be selected for all dialects and is reported by default the -h or - help output for the -t option will show what selections may be used with the unix dialect when -t is used to select information - i e it is followed by one or more selection characters - the displaying of state is disabled by default and it must be explicitly selected again in the characters following -t in effect then the default is equivalent to -ts for example if queue lengths and state are desired use -tqs socket options socket states some socket values tcp flags and one tcp value may be reported when available in the unix dialect in the form of the names that commonly appear after so so ss tcp and tf in the dialect s header files - most often sys socket h sys socketvar h and netinet tcp var h consult those header files for the meaning of the flags options states and values so precedes socket options and values ss socket states and tf tcp flags and values if a flag or option has a value the value will follow an and the name -- e g so linger 5 so qlim 5 tf mss 512 the following seven values may be reported name reported description common symbol keepalive keep alive time so keepalive linger linger time so linger mss maximum segment size tcp maxseg pqlen partial listen queue connections qlen established listen queue connections qlim established listen queue limit rcvbuf receive buffer length so rcvbuf sndbuf send buffer length so sndbuf details on what socket options and values socket states and tcp flags and values may be displayed for particular unix dialects may be found in the answer to the why doesn t lsof report socket options socket states and tcp flags and values for my dialect and why doesn t lsof report the partial listen queue connection count for my dialect questions in the lsof faq the faq section gives its location -t controls the reporting of some tcp tpi information also reported by netstat 1 following the network addresses in normal output the information appears in parentheses each item except tcp or tpi state name identified by a keyword followed by separated from others by a single space tcp or tpi state name qr read queue length qs send queue length so socket options and values ss socket states tf tcp flags and values wr window read length ww window write length not all values are reported for all unix dialects items values when available are reported after the item name and when the field output mode is in effect see output for other programs each item appears as a field with a t leading character reporting tcp tpi information f selects reporting of socket options states and values and tcp flags and values q selects queue length reporting s selects connection state reporting w selects window size reporting not all selections are enabled for some unix dialects state may be selected for all dialects and is reported by default the -h or - help output for the -t option will show what selections may be used with the unix dialect when -t is used to select information - i e it is followed by one or more selection characters - the displaying of state is disabled by default and it must be explicitly selected again in the characters following -t in effect then the default is equivalent to -ts for example if queue lengths and state are desired use -tqs socket options socket states some socket values tcp flags and one tcp value may be reported when available in the unix dialect in the form of the names that commonly appear after so so ss tcp and tf in the dialect s header files - most often sys socket h sys socketvar h and netinet tcp var h consult those header files for the meaning of the flags options states and values so precedes socket options and values ss socket states and tf tcp flags and values if a flag or option has a value the value will follow an and the name -- e g so linger 5 so qlim 5 tf mss 512 the following seven values may be reported name reported description common symbol keepalive keep alive time so keepalive linger linger time so linger mss maximum segment size tcp maxseg pqlen partial listen queue connections qlen established listen queue connections qlim established listen queue limit rcvbuf receive buffer length so rcvbuf sndbuf send buffer length so sndbuf details on what socket options and values socket states and tcp flags and values may be displayed for particular unix dialects may be found in the answer to the why doesn t lsof report socket options socket states and tcp flags and values for my dialect and why doesn t lsof report the partial listen queue connection count for my dialect questions in the lsof faq the faq section gives its location -t specifies that lsof should produce terse output with process identifiers only and no header - e g so that the output may be piped to kill 1 -t selects the -w option -u user id numbers are in the comma-separated set s - e g abe or 548 root there should be no spaces in the set multiple login names or user id numbers are joined in a single ored set before participating in and option selection if a login name or user id is preceded by a it becomes a negation - i e files of processes owned by the login name or user id will never be listed a negated login name or user id selection is neither anded nor ored with other selections it is applied before all other selections and absolutely excludes the listing of the files of the process for example to direct lsof to exclude the listing of files belonging to root processes specify -u root or -u 0 -u selects the listing of unix domain socket files -v selects the listing of lsof version information including revision number when the lsof binary was constructed who constructed the binary and where the name of the compiler used to construct the lsof binary the version number of the compiler when readily available the compiler and loader flags used to construct the lsof binary and system information typically the output of uname s -a option -v directs lsof to indicate the items it was asked to list and failed to find - command names file names internet addresses or files login names nfs files pids pgids and uids when other options are anded to search options or compile-time options restrict the listing of some files lsof may not report that it failed to find a search item when an anded option or compile-time option prevents the listing of the open file containing the located search item for example lsof -v -itcp foobar -a -d 999 may not report a failure to locate open files at tcp foobar and may not list any if none have a file descriptor number of 999 a similar situation arises when hassecurity and hasnosocksecurity are defined at compile time and they prevent the listing of open files -w enables or disables - the suppression of warning messages the lsof builder may choose to have warning messages disabled or enabled by default the default warning message state is indicated in the output of the -h or - option disabling warning messages when they are already disabled or enabling them when already enabled is acceptable the -t option selects the -w option -x may accompany the d and d options to direct their processing to cross over symbolic links and or file system mount points encountered when scanning the directory d or directory tree d if -x is specified by itself without a following parameter cross-over processing of both symbolic links and file system mount points is enabled note that when -x is specified without a parameter the next argument must begin with - or the optional f parameter enables file system mount point cross-over processing l symbolic link cross-over processing the -x option may not be supplied without also supplying a d or d option -x aix this ibm aix risc system 6000 option requests the reporting of executed text file and shared library references warning because this option uses the kernel readx function its use on a busy aix system might cause an application process to hang so completely that it can neither be killed nor stopped i have never seen this happen or had a report of its happening but i think there is a remote possibility it could happen by default use of readx is disabled on aix 5l and above lsof may need setuid-root permission to perform the actions this option requests the lsof builder may specify that the -x option be restricted to processes whose real uid is root if that has been done the -x option will not appear in the -h or - help output unless the real uid of the lsof process is root the default lsof distribution allows any uid to specify -x so by default it will appear in the help output when aix readx use is disabled lsof may not be able to report information for all text and loader file references but it may also avoid exacerbating an aix kernel directory search kernel error known as the stale segment id bug the readx function used by lsof or any other program to access some sections of kernel virtual memory can trigger the stale segment id bug it can cause the kernel s dir search function to believe erroneously that part of an in-memory copy of a file system directory has been zeroed another application process distinct from lsof asking the kernel to search the directory - e g by using open 2 - can cause dir search to loop forever thus hanging the application process consult the lsof faq the faq section gives its location and the 00readme file of the lsof distribution for a more complete description of the stale segment id bug its apar and methods for defining readx use when compiling lsof darwin this darwin option requests that lsof reports exclusively information about files from the process file descriptor table and process file ports linux this linux option requests that lsof skip the reporting of information on all open tcp udp and udplite ipv4 and ipv6 files this linux option is most useful when the system has an extremely large number of open tcp udp and udplite files the processing of whose information in the proc net tcp and proc net udp files would take lsof a long time and whose reporting is not of interest use this option with care and only when you are sure that the information you want lsof to display isn t associated with open tcp udp or udplite socket files solaris 10 and above this solaris 10 and above option requests the reporting of cached paths for files that have been deleted - i e removed with rm 1 or unlink 2 the cached path is followed by the string deleted to indicate that the path by which the file was opened has been deleted because intervening changes made to the path - i e renames with mv 1 or rename 2 - are not recorded in the cached path what lsof reports is only the path by which the file was opened not its possibly different final path -z specifies how solaris 10 and higher zone information is to be handled without a following argument - e g no z - the option specifies that zone names are to be listed in the zone output column the -z option may be followed by a zone name z that causes lsof to list only open files for processes in that zone multiple -z z option and argument pairs may be specified to form a list of named zones any open file of any process in any of the zones will be listed subject to other conditions specified by other options and arguments -z specifies how selinux security contexts are to be handled it and z field output character support are inhibited when selinux is disabled in the running linux kernel see output for other programs for more information on the z field output character without a following argument - e g no z - the option specifies that security contexts are to be listed in the security-context output column the -z option may be followed by a wildcard security context name z that causes lsof to list only open files for processes in that security context multiple -z z option and argument pairs may be specified to form a list of security contexts any open file of any process in any of the security contexts will be listed subject to other conditions specified by other options and arguments note that z can be a b c or b c or a b or c to match against the a b c context -- the double minus sign option is a marker that signals the end of the keyed options it may be used for example when the first file name begins with a minus sign it may also be used when the absence of a value for the last keyed option must be signified by the presence of a minus sign in the following option and before the start of the file names names these are path names of specific files to list symbolic links are resolved before use the first name may be separated from the preceding options with the -- option if a name is the mounted-on directory of a file system or the device of the file system lsof will list all the files open on the file system to be considered a file system the name must match a mounted-on directory name in mount 8 output or match the name of a block device associated with a mounted-on directory name the -f option may be used to force lsof to consider a name a file system identifier f or a simple file -f if name is a path to a directory that is not the mounted-on directory name of a file system it is treated just as a regular file is treated - i e its listing is restricted to processes that have it open as a file or as a process-specific directory such as the root or current working directory to request that lsof look for open files inside a directory name use the d s and d d options if a name is the base name of a family of multiplexed files - e g aix s dev pt cs - lsof will list all the associated multiplexed files on the device that are open - e g dev pt cs 1 dev pt cs 2 etc if a name is a unix domain socket name lsof will usually search for it by the characters of the name alone - exactly as it is specified and is recorded in the kernel socket structure see the next paragraph for an exception to that rule for linux specifying a relative path - e g file - in place of the file s absolute path - e g tmp file - won t work because lsof must match the characters you specify with what it finds in the kernel unix domain socket structures if a name is a linux unix domain socket name in one case lsof is able to search for it by its device and inode number allowing name to be a relative path the case requires that the absolute path -- i e one beginning with a slash be used by the process that created the socket and hence be stored in the proc net unix file and it requires that lsof be able to obtain the device and node numbers of both the absolute path in proc net unix and name via successful stat 2 system calls when those conditions are met lsof will be able to search for the unix domain socket when some path to it is is specified in name thus for example if the path is dev log and an lsof search is initiated when the working directory is dev then name could be log if a name is none of the above lsof will list any open files whose device and inode match that of the specified path name if you have also specified the -b option the only names you may safely specify are file systems for which your mount table supplies alternate device numbers see the avoiding kernel blocks and alternate device numbers sections for more information multiple file names are joined in a single ored set before participating in and option selection name",
  "keywords": [
    "lsof",
    "list",
    "open",
    "revision"
  ],
  "complexity": "advanced",
  "hash": "9947bef504d9302d",
  "parsedAt": "2025-06-17T19:32:04.907Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": false,
  "hasDiagrams": false
}