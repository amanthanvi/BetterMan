{
  "name": "grep",
  "section": 1,
  "title": "grep manual page",
  "description": "The grep utility searches any given input files, selecting lines that match one or more patterns.",
  "synopsis": "grep [-abcdDEFGHhIiJLlMmnOopqRSsUVvwXxZz] [-A num] [-B num] [-C num] [-e pattern] [-f file] [--binary-files=value] [--color[=when]] [--colour[=when]] [--context=num] [--label] [--line-buffered] [--null] [pattern] [file ...]",
  "category": "User Commands",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "[-e pattern] [-f file] [--binary-files=value] [--color[=when]]\n\t  [--colour[=when]] [--context=num] [--label] [--line-buffered]\n\t  [--null] [pattern] [file ...]",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     grep, egrep, fgrep, rgrep, bzgrep, bzegrep, bzfgrep, zgrep, zegrep,\n     zfgrep – file pattern searcher\n",
        "     grep [-abcdDEFGHhIiJLlMmnOopqRSsUVvwXxZz] [-A num] [-B num] [-C num]"
      ]
    },
    {
      "id": "description",
      "title": "DESCRIPTION",
      "content": "macOS 15.5\t\t       November 10, 2021\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     The grep utility searches any given input files, selecting lines that\n     match one or more patterns.  By default, a pattern matches an input line\n     if the regular expression (RE) in the pattern matches the input line\n     without its trailing newline.  An empty expression matches every line.\n     Each input line that matches at least one of the patterns is written to\n     the standard output.\n\n     grep is used for simple patterns and basic regular expressions (BREs);\n     egrep can handle extended regular expressions (EREs).  See re_format(7)\n     for more information on regular expressions.  fgrep is quicker than both\n     grep and egrep, but can only handle fixed patterns (i.e., it does not\n     interpret regular expressions).  Patterns may consist of one or more\n     lines, allowing any of the pattern lines to match a portion of the input.\n\n     zgrep, zegrep, and zfgrep act like grep, egrep, and fgrep, respectively,\n     but accept input files compressed with the compress(1) or gzip(1)\n     compression utilities.  bzgrep, bzegrep, and bzfgrep act like grep,\n     egrep, and fgrep, respectively, but accept input files compressed with\n     the bzip2(1) compression utility.\n\n     The following options are available:\n\n     -A num, --after-context=num\n\t     Print num lines of trailing context after each match.  See also\n\t     the -B and -C options.\n\n     -a, --text\n\t     Treat all files as ASCII text.  Normally grep will simply print\n\t     “Binary file ... matches” if files contain binary characters.\n\t     Use of this option forces grep to output lines matching the\n\t     specified pattern.\n\n     -B num, --before-context=num\n\t     Print num lines of leading context before each match.  See also\n\t     the -A and -C options.\n\n     -b, --byte-offset\n\t     The offset in bytes of a matched pattern is displayed in front of\n\t     the respective matched line.\n\n     -C num, --context=num\n\t     Print num lines of leading and trailing context surrounding each\n\t     match.  See also the -A and -B options.\n\n     -c, --count\n\t     Only a count of selected lines is written to standard output.\n\n     --colour=[when], --color=[when]\n\t     Mark up the matching text with the expression stored in the\n\t     GREP_COLOR environment variable.  The possible values of when are\n\t     “never”, “always” and “auto”.\n\n     -D action, --devices=action\n\t     Specify the demanded action for devices, FIFOs and sockets.  The\n\t     default action is “read”, which means, that they are read as if\n\t     they were normal files.  If the action is set to “skip”, devices\n\t     are silently skipped.\n\n     -d action, --directories=action\n\t     Specify the demanded action for directories.  It is “read” by\n\t     default, which means that the directories are read in the same\n\t     manner as normal files.  Other possible values are “skip” to\n\t     silently ignore the directories, and “recurse” to read them\n\t     recursively, which has the same effect as the -R and -r option.\n\n     -E, --extended-regexp\n\t     Interpret pattern as an extended regular expression (i.e., force\n\t     grep to behave as egrep).\n\n     -e pattern, --regexp=pattern\n\t     Specify a pattern used during the search of the input: an input\n\t     line is selected if it matches any of the specified patterns.\n\t     This option is most useful when multiple -e options are used to\n\t     specify multiple patterns, or when a pattern begins with a dash\n\t     (‘-’).\n\n     --exclude pattern\n\t     If specified, it excludes files matching the given filename\n\t     pattern from the search.  Note that --exclude and --include\n\t     patterns are processed in the order given.  If a name matches\n\t     multiple patterns, the latest matching rule wins.\tIf no\n\t     --include pattern is specified, all files are searched that are\n\t     not excluded.  Patterns are matched to the full path specified,\n\t     not only to the filename component.\n\n     --exclude-dir pattern\n\t     If -R is specified, it excludes directories matching the given\n\t     filename pattern from the search.\tNote that --exclude-dir and\n\t     --include-dir patterns are processed in the order given.  If a\n\t     name matches multiple patterns, the latest matching rule wins.\n\t     If no --include-dir pattern is specified, all directories are\n\t     searched that are not excluded.\n\n     -F, --fixed-strings\n\t     Interpret pattern as a set of fixed strings (i.e., force grep to\n\t     behave as fgrep).\n\n     -f file, --file=file\n\t     Read one or more newline separated patterns from file.  Empty\n\t     pattern lines match every input line.  Newlines are not\n\t     considered part of a pattern.  If file is empty, nothing is\n\t     matched.\n\n     -G, --basic-regexp\n\t     Interpret pattern as a basic regular expression (i.e., force grep\n\t     to behave as traditional grep).\n\n     -H      Always print filename headers with output lines.\n\n     -h, --no-filename\n\t     Never print filename headers (i.e., filenames) with output lines.\n\n     --help  Print a brief help message.\n\n     -I      Ignore binary files.  This option is equivalent to the\n\t     “--binary-files=without-match” option.\n\n     -i, --ignore-case\n\t     Perform case insensitive matching.  By default, grep is case\n\t     sensitive.\n\n     --include pattern\n\t     If specified, only files matching the given filename pattern are\n\t     searched.\tNote that --include and --exclude patterns are\n\t     processed in the order given.  If a name matches multiple\n\t     patterns, the latest matching rule wins.  Patterns are matched to\n\t     the full path specified, not only to the filename component.\n\n     --include-dir pattern\n\t     If -R is specified, only directories matching the given filename\n\t     pattern are searched.  Note that --include-dir and --exclude-dir\n\t     patterns are processed in the order given.  If a name matches\n\t     multiple patterns, the latest matching rule wins.\n\n     -J, --bz2decompress\n\t     Decompress the bzip2(1) compressed file before looking for the\n\t     text.\n\n     -L, --files-without-match\n\t     Only the names of files not containing selected lines are written\n\t     to standard output.  Pathnames are listed once per file searched.\n\t     If the standard input is searched, the string “(standard input)”\n\t     is written unless a --label is specified.\n\n     -l, --files-with-matches\n\t     Only the names of files containing selected lines are written to\n\t     standard output.  grep will only search a file until a match has\n\t     been found, making searches potentially less expensive.\n\t     Pathnames are listed once per file searched.  If the standard\n\t     input is searched, the string “(standard input)” is written\n\t     unless a --label is specified.\n\n     --label\n\t     Label to use in place of “(standard input)” for a file name where\n\t     a file name would normally be printed.  This option applies to\n\t     -H, -L, and -l.\n\n     --mmap  Use mmap(2) instead of read(2) to read input, which can result in\n\t     better performance under some circumstances but can cause\n\t     undefined behaviour.\n\n     -M, --lzma\n\t     Decompress the LZMA compressed file before looking for the text.\n\n     -m num, --max-count=num\n\t     Stop reading the file after num matches.\n\n     -n, --line-number\n\t     Each output line is preceded by its relative line number in the\n\t     file, starting at line 1.\tThe line number counter is reset for\n\t     each file processed.  This option is ignored if -c, -L, -l, or -q\n\t     is specified.\n\n     --null  Prints a zero-byte after the file name.\n\n     -O      If -R is specified, follow symbolic links only if they were\n\t     explicitly listed on the command line.  The default is not to\n\t     follow symbolic links.\n\n     -o, --only-matching\n\t     Prints only the matching part of the lines.\n\n     -p      If -R is specified, no symbolic links are followed.  This is the\n\t     default.\n\n     -q, --quiet, --silent\n\t     Quiet mode: suppress normal output.  grep will only search a file\n\t     until a match has been found, making searches potentially less\n\t     expensive.\n\n     -R, -r, --recursive\n\t     Recursively search subdirectories listed.\t(i.e., force grep to\n\t     behave as rgrep).\n\n     -S      If -R is specified, all symbolic links are followed.  The default\n\t     is not to follow symbolic links.\n\n     -s, --no-messages\n\t     Silent mode.  Nonexistent and unreadable files are ignored (i.e.,\n\t     their error messages are suppressed).\n\n     -U, --binary\n\t     Search binary files, but do not attempt to print them.\n\n     -u      This option has no effect and is provided only for compatibility\n\t     with GNU grep.\n\n     -V, --version\n\t     Display version information and exit.\n\n     -v, --invert-match\n\t     Selected lines are those not matching any of the specified\n\t     patterns.\n\n     -w, --word-regexp\n\t     The expression is searched for as a word (as if surrounded by\n\t     ‘[[:<:]]’ and ‘[[:>:]]’; see re_format(7)).  This option has no\n\t     effect if -x is also specified.\n\n     -x, --line-regexp\n\t     Only input lines selected against an entire fixed string or\n\t     regular expression are considered to be matching lines.\n\n     -y      Equivalent to -i.\tObsoleted.\n\n     -z, --null-data\n\t     Treat input and output data as sequences of lines terminated by a\n\t     zero-byte instead of a newline.\n\n     -X, --xz\n\t     Decompress the xz(1) compressed file before looking for the text.\n\n     -Z, --decompress\n\t     Force grep to behave as zgrep.\n\n     --binary-files=value\n\t     Controls searching and printing of binary files.  Options are:\n\t     binary (default)  Search binary files but do not print them.\n\t     without-match     Do not search binary files.\n\t     text\t       Treat all files as text.\n\n     --line-buffered\n\t     Force output to be line buffered.\tBy default, output is line\n\t     buffered when standard output is a terminal and block buffered\n\t     otherwise.\n\n     If no file arguments are specified, the standard input is used.\n     Additionally, “-” may be used in place of a file name, anywhere that a\n     file name is accepted, to read from standard input.  This includes both\n     -f and file arguments.\n",
        "     GREP_OPTIONS  May be used to specify default options that will be placed\n\t\t   at the beginning of the argument list.  Backslash-escaping\n\t\t   is not supported, unlike the behavior in GNU grep.\n",
        "     The grep utility exits with one of the following values:\n\n     0\t   One or more lines were selected.\n     1\t   No lines were selected.\n     >1    An error occurred.\n",
        "     -\t Find all occurrences of the pattern ‘patricia’ in a file:\n\n\t       $ grep 'patricia' myfile\n\n     -\t Same as above but looking only for complete words:\n\n\t       $ grep -w 'patricia' myfile\n\n     -\t Count occurrences of the exact pattern ‘FOO’ :\n\n\t       $ grep -c FOO myfile\n\n     -\t Same as above but ignoring case:\n\n\t       $ grep -c -i FOO myfile\n\n     -\t Find all occurrences of the pattern ‘.Pp’ at the beginning of a line:\n\n\t       $ grep '^\\.Pp' myfile\n",
        "     -\t Find all lines in a file which do not contain the words ‘foo’ or",
        "\t       $ grep -v -e 'foo' -e 'bar' myfile\n\n     -\t Peruse the file ‘calendar’ looking for either 19, 20, or 25 using",
        "\t       $ egrep '19|20|25' calendar\n\n     -\t Show matching lines and the name of the ‘*.h’ files which contain the",
        "\t       $ grep -H -R FIXME --include=\"*.h\" /usr/src/sys/arm/\n\n     -\t Same as above but show only the name of the matching file:\n\n\t       $ grep -l -R FIXME --include=\"*.h\" /usr/src/sys/arm/\n\n     -\t Show lines containing the text ‘foo’.\tThe matching part of the",
        "\t       $ grep -b --colour -n foo myfile\n\n     -\t Show lines that match the extended regular expression patterns read",
        "\t       $ echo -e 'Free\\nBSD\\nAll.*reserved' | grep -E -f - myfile\n\n     -\t Show lines from the output of the pciconf(8) command matching the",
        "\t       $ pciconf -lv | grep -B3 -A1 -E 'class.*=.*storage'\n\n     -\t Suppress any output and use the exit status to show an appropriate",
        "\t       $ grep -q foo myfile && echo File matches\n",
        "     bzip2(1), compress(1), ed(1), ex(1), gzip(1), sed(1), xz(1), zgrep(1),\n     re_format(7)\n",
        "     The grep utility is compliant with the IEEE Std 1003.1-2008 (“POSIX.1”)\n     specification.\n\n     The flags [-AaBbCDdGHhILmopRSUVw] are extensions to that specification,\n     and the behaviour of the -f flag when used with an empty pattern file is\n     left undefined.\n\n     All long options are provided for compatibility with GNU versions of this\n     utility.\n\n     Historic versions of the grep utility also supported the flags [-ruy].\n     This implementation supports those options; however, their use is\n     strongly discouraged.\n",
        "     The grep command first appeared in Version 6 AT&T UNIX.\n",
        "     The grep utility does not normalize Unicode input, so a pattern\n     containing composed characters will not match decomposed input, and vice\n     versa.\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-A",
      "description": " Print num lines of trailing context after each match.  See also the -B and -C options.",
      "optional": true
    },
    {
      "flag": "-a",
      "description": ", --text Treat all files as ASCII text.  Normally grep will simply print “Binary file ... matches” if files contain binary characters. Use of this option forces grep to output lines matching the specified pattern."
    },
    {
      "flag": "-B",
      "description": " Print num lines of leading context before each match.  See also the -A and -C options.",
      "optional": true
    },
    {
      "flag": "-b",
      "description": ", --byte-offset The offset in bytes of a matched pattern is displayed in front of the respective matched line."
    },
    {
      "flag": "-C",
      "description": " Print num lines of leading and trailing context surrounding each match.  See also the -A and -B options.",
      "optional": true
    },
    {
      "flag": "--colour",
      "description": " Mark up the matching text with the expression stored in the GREP_COLOR environment variable.  The possible values of when are “never”, “always” and “auto”.",
      "argument": "=when",
      "optional": true,
      "shortFlag": "-c"
    },
    {
      "flag": "-D",
      "description": "action, --devices=action Specify the demanded action for devices, FIFOs and sockets.  The default action is “read”, which means, that they are read as if they were normal files.  If the action is set to “skip”, devices are silently skipped."
    },
    {
      "flag": "-d",
      "description": "action, --directories=action Specify the demanded action for directories.  It is “read” by default, which means that the directories are read in the same manner as normal files.  Other possible values are “skip” to silently ignore the directories, and “recurse” to read them recursively, which has the same effect as the -R and -r option."
    },
    {
      "flag": "-E",
      "description": ", --extended-regexp Interpret pattern as an extended regular expression (i.e., force grep to behave as egrep)."
    },
    {
      "flag": "--exclude",
      "description": "pattern If specified, it excludes files matching the given filename pattern from the search.  Note that --exclude and --include patterns are processed in the order given.  If a name matches multiple patterns, the latest matching rule wins.\tIf no",
      "shortFlag": "-e"
    },
    {
      "flag": "--include",
      "description": "pattern is specified, all files are searched that are not excluded.  Patterns are matched to the full path specified, not only to the filename component."
    },
    {
      "flag": "--exclude-dir",
      "description": "pattern If -R is specified, it excludes directories matching the given filename pattern from the search.\tNote that --exclude-dir and"
    },
    {
      "flag": "--include-dir",
      "description": "patterns are processed in the order given.  If a name matches multiple patterns, the latest matching rule wins. If no --include-dir pattern is specified, all directories are searched that are not excluded."
    },
    {
      "flag": "-F",
      "description": ", --fixed-strings Interpret pattern as a set of fixed strings (i.e., force grep to behave as fgrep)."
    },
    {
      "flag": "-f",
      "description": " Read one or more newline separated patterns from file.  Empty pattern lines match every input line.  Newlines are not considered part of a pattern.  If file is empty, nothing is matched.",
      "optional": true
    },
    {
      "flag": "-G",
      "description": ", --basic-regexp Interpret pattern as a basic regular expression (i.e., force grep to behave as traditional grep)."
    },
    {
      "flag": "-H",
      "description": "Always print filename headers with output lines."
    },
    {
      "flag": "--help",
      "description": "Print a brief help message.",
      "shortFlag": "-h"
    },
    {
      "flag": "-I",
      "description": "Ignore binary files.  This option is equivalent to the “--binary-files=without-match” option."
    },
    {
      "flag": "--include",
      "description": "pattern If specified, only files matching the given filename pattern are searched.\tNote that --include and --exclude patterns are processed in the order given.  If a name matches multiple patterns, the latest matching rule wins.  Patterns are matched to the full path specified, not only to the filename component.",
      "shortFlag": "-i"
    },
    {
      "flag": "--include-dir",
      "description": "pattern If -R is specified, only directories matching the given filename pattern are searched.  Note that --include-dir and --exclude-dir patterns are processed in the order given.  If a name matches multiple patterns, the latest matching rule wins."
    },
    {
      "flag": "-J",
      "description": ", --bz2decompress Decompress the bzip2(1) compressed file before looking for the text."
    },
    {
      "flag": "-L",
      "description": ", --files-without-match Only the names of files not containing selected lines are written to standard output.  Pathnames are listed once per file searched. If the standard input is searched, the string “(standard input)” is written unless a --label is specified."
    },
    {
      "flag": "--label",
      "description": " Label to use in place of “(standard input)” for a file name where a file name would normally be printed.  This option applies to",
      "optional": true,
      "shortFlag": "-l"
    },
    {
      "flag": "--mmap",
      "description": "Use mmap(2) instead of read(2) to read input, which can result in better performance under some circumstances but can cause undefined behaviour.",
      "shortFlag": "-H"
    },
    {
      "flag": "-M",
      "description": ", --lzma Decompress the LZMA compressed file before looking for the text."
    },
    {
      "flag": "-m",
      "description": "num, --max-count=num Stop reading the file after num matches."
    },
    {
      "flag": "--null",
      "description": "",
      "optional": true,
      "shortFlag": "-n"
    },
    {
      "flag": "-O",
      "description": "If -R is specified, follow symbolic links only if they were explicitly listed on the command line.  The default is not to follow symbolic links."
    },
    {
      "flag": "-o",
      "description": ", --only-matching Prints only the matching part of the lines."
    },
    {
      "flag": "-p",
      "description": "If -R is specified, no symbolic links are followed.  This is the default."
    },
    {
      "flag": "-q",
      "description": ", --quiet, --silent Quiet mode: suppress normal output.  grep will only search a file until a match has been found, making searches potentially less expensive."
    },
    {
      "flag": "-R",
      "description": ", -r, --recursive Recursively search subdirectories listed.\t(i.e., force grep to behave as rgrep)."
    },
    {
      "flag": "-S",
      "description": "If -R is specified, all symbolic links are followed.  The default is not to follow symbolic links."
    },
    {
      "flag": "-s",
      "description": ", --no-messages Silent mode.  Nonexistent and unreadable files are ignored (i.e., their error messages are suppressed)."
    },
    {
      "flag": "-U",
      "description": ", --binary Search binary files, but do not attempt to print them."
    },
    {
      "flag": "-u",
      "description": "This option has no effect and is provided only for compatibility with GNU grep."
    },
    {
      "flag": "-V",
      "description": ", --version Display version information and exit."
    },
    {
      "flag": "-v",
      "description": ", --invert-match Selected lines are those not matching any of the specified patterns."
    },
    {
      "flag": "-w",
      "description": ", --word-regexp The expression is searched for as a word (as if surrounded by ‘[[:<:]]’ and ‘[[:>:]]’; see re_format(7)).  This option has no effect if -x is also specified."
    },
    {
      "flag": "-x",
      "description": ", --line-regexp Only input lines selected against an entire fixed string or regular expression are considered to be matching lines."
    },
    {
      "flag": "-y",
      "description": "Equivalent to -i.\tObsoleted."
    },
    {
      "flag": "-z",
      "description": ", --null-data Treat input and output data as sequences of lines terminated by a zero-byte instead of a newline."
    },
    {
      "flag": "-X",
      "description": ", --xz Decompress the xz(1) compressed file before looking for the text."
    },
    {
      "flag": "--binary-files",
      "description": " Controls searching and printing of binary files.  Options are: binary (default)  Search binary files but do not print them. without-match     Do not search binary files. text\t       Treat all files as text.",
      "optional": true,
      "shortFlag": "-Z"
    },
    {
      "flag": "--line-buffered",
      "description": " Force output to be line buffered.\tBy default, output is line buffered when standard output is a terminal and block buffered otherwise. If no file arguments are specified, the standard input is used. Additionally, “-” may be used in place of a file name, anywhere that a file name is accepted, to read from standard input.  This includes both",
      "optional": true
    },
    {
      "flag": "-f",
      "description": " Read one or more newline separated patterns from file.  Empty pattern lines match every input line.  Newlines are not considered part of a pattern.  If file is empty, nothing is matched.",
      "optional": true
    }
  ],
  "examples": [
    {
      "command": "grep 'patricia' myfile",
      "description": "",
      "tags": [],
      "output": "     -\t Same as above but looking only for complete words:\n"
    },
    {
      "command": "grep -w 'patricia' myfile",
      "description": "",
      "tags": [],
      "output": "     -\t Count occurrences of the exact pattern ‘FOO’ :\n"
    },
    {
      "command": "grep -c FOO myfile",
      "description": "",
      "tags": [],
      "output": "     -\t Same as above but ignoring case:\n"
    },
    {
      "command": "grep -c -i FOO myfile",
      "description": "",
      "tags": [],
      "output": "     -\t Find all occurrences of the pattern ‘.Pp’ at the beginning of a line:\n"
    },
    {
      "command": "grep '^\\.Pp' myfile",
      "description": "",
      "tags": [],
      "output": "\t The apostrophes ensure the entire expression is evaluated by grep\n\t instead of by the user's shell.  The caret ‘^’ matches the null\n\t string at the beginning of a line, and the ‘\\’ escapes the ‘.’, which\n\t would otherwise match any character.\n     -\t Find all lines in a file which do not contain the words ‘foo’ or\n\t ‘bar’:\n"
    },
    {
      "command": "grep -v -e 'foo' -e 'bar' myfile",
      "description": "",
      "tags": [],
      "output": "     -\t Peruse the file ‘calendar’ looking for either 19, 20, or 25 using\n\t extended regular expressions:\n"
    },
    {
      "command": "egrep '19|20|25' calendar",
      "description": "",
      "tags": [
        "pipe"
      ],
      "output": "     -\t Show matching lines and the name of the ‘*.h’ files which contain the\n\t pattern ‘FIXME’.  Do the search recursively from the /usr/src/sys/arm\n\t directory\n"
    },
    {
      "command": "grep -H -R FIXME --include=\"*.h\" /usr/src/sys/arm/",
      "description": "",
      "tags": [
        "glob"
      ],
      "output": "     -\t Same as above but show only the name of the matching file:\n"
    },
    {
      "command": "grep -l -R FIXME --include=\"*.h\" /usr/src/sys/arm/",
      "description": "",
      "tags": [
        "glob"
      ],
      "output": "     -\t Show lines containing the text ‘foo’.\tThe matching part of the\n\t output is colored and every line is prefixed with the line number and\n\t the offset in the file for those lines that matched.\n"
    },
    {
      "command": "grep -b --colour -n foo myfile",
      "description": "",
      "tags": [],
      "output": "     -\t Show lines that match the extended regular expression patterns read\n\t from the standard input:\n"
    },
    {
      "command": "echo -e 'Free\\nBSD\\nAll.*reserved' | grep -E -f - myfile",
      "description": "",
      "tags": [
        "pipe",
        "glob"
      ],
      "output": "     -\t Show lines from the output of the pciconf(8) command matching the\n\t specified extended regular expression along with three lines of\n\t leading context and one line of trailing context:\n"
    },
    {
      "command": "pciconf -lv | grep -B3 -A1 -E 'class.*=.*storage'",
      "description": "",
      "tags": [
        "pipe",
        "glob"
      ],
      "output": "     -\t Suppress any output and use the exit status to show an appropriate\n\t message:\n"
    },
    {
      "command": "grep -q foo myfile && echo File matches",
      "description": "",
      "tags": [],
      "output": "     bzip2(1), compress(1), ed(1), ex(1), gzip(1), sed(1), xz(1), zgrep(1),\n     re_format(7)\n"
    }
  ],
  "relatedCommands": [
    "bzip2",
    "mmap",
    "read",
    "re_format",
    "xz",
    "grep",
    "egrep",
    "fgrep",
    "rgrep",
    "bzgrep",
    "bzegrep",
    "bzfgrep",
    "zgrep",
    "zegrep",
    "zfgrep"
  ],
  "seeAlso": [
    {
      "name": "bzip2",
      "section": 1
    },
    {
      "name": "mmap",
      "section": 2
    },
    {
      "name": "read",
      "section": 2
    },
    {
      "name": "re_format",
      "section": 7
    },
    {
      "name": "xz",
      "section": 1
    }
  ],
  "metadata": {},
  "searchContent": "grep grep manual page the grep utility searches any given input files selecting lines that match one or more patterns grep -abcddefghhiijllmmnoopqrssuvvwxxzz -a num -b num -c num -e pattern -f file --binary-files value --color when --colour when --context num --label --line-buffered --null pattern file grep manual page utility searches given input files selecting lines match more patterns -a print num lines of trailing context after each match see also the -b and -c options -a --text treat all files as ascii text normally grep will simply print binary file matches if files contain binary characters use of this option forces grep to output lines matching the specified pattern -b print num lines of leading context before each match see also the -a and -c options -b --byte-offset the offset in bytes of a matched pattern is displayed in front of the respective matched line -c print num lines of leading and trailing context surrounding each match see also the -a and -b options --colour mark up the matching text with the expression stored in the grep color environment variable the possible values of when are never always and auto -d action --devices action specify the demanded action for devices fifos and sockets the default action is read which means that they are read as if they were normal files if the action is set to skip devices are silently skipped -d action --directories action specify the demanded action for directories it is read by default which means that the directories are read in the same manner as normal files other possible values are skip to silently ignore the directories and recurse to read them recursively which has the same effect as the -r and -r option -e --extended-regexp interpret pattern as an extended regular expression i e force grep to behave as egrep --exclude pattern if specified it excludes files matching the given filename pattern from the search note that --exclude and --include patterns are processed in the order given if a name matches multiple patterns the latest matching rule wins if no --include pattern is specified all files are searched that are not excluded patterns are matched to the full path specified not only to the filename component --exclude-dir pattern if -r is specified it excludes directories matching the given filename pattern from the search note that --exclude-dir and --include-dir patterns are processed in the order given if a name matches multiple patterns the latest matching rule wins if no --include-dir pattern is specified all directories are searched that are not excluded -f --fixed-strings interpret pattern as a set of fixed strings i e force grep to behave as fgrep -f read one or more newline separated patterns from file empty pattern lines match every input line newlines are not considered part of a pattern if file is empty nothing is matched -g --basic-regexp interpret pattern as a basic regular expression i e force grep to behave as traditional grep -h always print filename headers with output lines --help print a brief help message -i ignore binary files this option is equivalent to the --binary-files without-match option --include pattern if specified only files matching the given filename pattern are searched note that --include and --exclude patterns are processed in the order given if a name matches multiple patterns the latest matching rule wins patterns are matched to the full path specified not only to the filename component --include-dir pattern if -r is specified only directories matching the given filename pattern are searched note that --include-dir and --exclude-dir patterns are processed in the order given if a name matches multiple patterns the latest matching rule wins -j --bz2decompress decompress the bzip2 1 compressed file before looking for the text -l --files-without-match only the names of files not containing selected lines are written to standard output pathnames are listed once per file searched if the standard input is searched the string standard input is written unless a --label is specified --label label to use in place of standard input for a file name where a file name would normally be printed this option applies to --mmap use mmap 2 instead of read 2 to read input which can result in better performance under some circumstances but can cause undefined behaviour -m --lzma decompress the lzma compressed file before looking for the text -m num --max-count num stop reading the file after num matches --null -o if -r is specified follow symbolic links only if they were explicitly listed on the command line the default is not to follow symbolic links -o --only-matching prints only the matching part of the lines -p if -r is specified no symbolic links are followed this is the default -q --quiet --silent quiet mode suppress normal output grep will only search a file until a match has been found making searches potentially less expensive -r -r --recursive recursively search subdirectories listed i e force grep to behave as rgrep -s if -r is specified all symbolic links are followed the default is not to follow symbolic links -s --no-messages silent mode nonexistent and unreadable files are ignored i e their error messages are suppressed -u --binary search binary files but do not attempt to print them -u this option has no effect and is provided only for compatibility with gnu grep -v --version display version information and exit -v --invert-match selected lines are those not matching any of the specified patterns -w --word-regexp the expression is searched for as a word as if surrounded by and see re format 7 this option has no effect if -x is also specified -x --line-regexp only input lines selected against an entire fixed string or regular expression are considered to be matching lines -y equivalent to -i obsoleted -z --null-data treat input and output data as sequences of lines terminated by a zero-byte instead of a newline -x --xz decompress the xz 1 compressed file before looking for the text --binary-files controls searching and printing of binary files options are binary default search binary files but do not print them without-match do not search binary files text treat all files as text --line-buffered force output to be line buffered by default output is line buffered when standard output is a terminal and block buffered otherwise if no file arguments are specified the standard input is used additionally - may be used in place of a file name anywhere that a file name is accepted to read from standard input this includes both -f read one or more newline separated patterns from file empty pattern lines match every input line newlines are not considered part of a pattern if file is empty nothing is matched grep patricia myfile grep -w patricia myfile grep -c foo myfile grep -c -i foo myfile grep pp myfile grep -v -e foo -e bar myfile egrep 19 20 25 calendar grep -h -r fixme --include h usr src sys arm grep -l -r fixme --include h usr src sys arm grep -b --colour -n foo myfile echo -e free nbsd nall reserved grep -e -f - myfile pciconf -lv grep -b3 -a1 -e class storage grep -q foo myfile echo file matches name -e pattern -f file --binary-files value --color when --colour when --context num --label --line-buffered --null pattern file description macos 15 5 november 10 2021 macos 15 5",
  "keywords": [
    "grep",
    "manual",
    "page",
    "utility",
    "searches",
    "given",
    "input",
    "files,",
    "selecting",
    "lines",
    "match",
    "more",
    "patterns."
  ],
  "complexity": "intermediate",
  "hash": "d76227a29d9437a5",
  "parsedAt": "2025-06-17T19:31:52.970Z",
  "parseVersion": "2.0.0",
  "isCommon": true,
  "hasInteractiveExamples": true,
  "hasDiagrams": false
}