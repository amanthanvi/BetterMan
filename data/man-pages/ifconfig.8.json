{
  "name": "ifconfig",
  "section": 8,
  "title": "ifconfig manual page",
  "description": "The ifconfig utility is used to assign an address to a network interface and/or configure network interface parameters.",
  "synopsis": "ifconfig [-L] [-m] [-r] [-f type:format] interface [create] [address_family] [address [dest_address]] [parameters] ifconfig interface destroy ifconfig -a [-L] [-d] [-m] [-r] [-u] [-v] [-f type:format] [address_family] ifconfig -l [-d] [-u] [address_family] ifconfig [-L] [-d] [-m] [-r] [-u] [-v] [-C] [-f type:format] ifconfig interface vlan vlan-tag vlandev iface ifconfig interface -vlandev iface ifconfig interface bonddev iface ifconfig interface -bonddev iface ifconfig interface bondmode lacp | static ifconfig -X pattern [parameters]",
  "category": "System Administration",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "macOS 15.5\t\t\t June 20, 2008\t\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     ifconfig – configure network interface parameters\n",
        "     ifconfig [-L] [-m] [-r] [-f type:format] interface [create]\n\t      [address_family] [address [dest_address]] [parameters]\n     ifconfig interface destroy\n     ifconfig -a [-L] [-d] [-m] [-r] [-u] [-v] [-f type:format]\n\t      [address_family]\n     ifconfig -l [-d] [-u] [address_family]\n     ifconfig [-L] [-d] [-m] [-r] [-u] [-v] [-C] [-f type:format]\n     ifconfig interface vlan vlan-tag vlandev iface\n     ifconfig interface -vlandev iface\n     ifconfig interface bonddev iface\n     ifconfig interface -bonddev iface\n     ifconfig interface bondmode lacp | static\n     ifconfig -X pattern [parameters]\n",
        "     The ifconfig utility is used to assign an address to a network interface\n     and/or configure network interface parameters.\n\n     The following options are available:\n\n     address\n\t     For the DARPA-Internet family, the address is either a host name\n\t     present in the host name data base, hosts(5), or a DARPA Internet\n\t     address expressed in the Internet standard “dot notation”.\n\n\t     It is also possible to use the CIDR notation (also known as the\n\t     slash notation) to include the netmask.  That is, one can specify\n\t     an address like 192.168.0.1/16.\n\n\t     For the “inet6” family, it is also possible to specify the prefix\n\t     length using the slash notation, like ::1/128.  See the prefixlen\n\t     parameter below for more information.\n\n\t     The link-level (“link”) address is specified as a series of\n\t     colon-separated hex digits.  This can be used to e.g. set a new\n\t     MAC address on an ethernet interface, though the mechanism used\n\t     is not ethernet-specific.\tIf the interface is already up when\n\t     this option is used, it will be briefly brought down and then\n\t     brought back up again in order to ensure that the receive filter\n\t     in the underlying ethernet hardware is properly reprogrammed.\n\n     address_family\n\t     Specify the address family which affects interpretation of the\n\t     remaining parameters.  Since an interface can receive\n\t     transmissions in differing protocols with different naming\n\t     schemes, specifying the address family is recommended.  The\n\t     address or protocol families currently supported are “inet”,\n\t     “inet6”, and “link”.  The default is “inet”.  “ether” and\n\t     “lladdr” are synonyms for “link”.\n\n     dest_address\n\t     Specify the address of the correspondent on the other end of a\n\t     point to point link.\n\n     interface\n\t     This parameter is a string of the form “name unit”, for example,\n\t     “en0”.\n\n     The following parameters may be set with ifconfig:\n\n     add     Another name for the alias parameter.  Introduced for\n\t     compatibility with BSD/OS.\n\n     alias   Establish an additional network address for this interface.  This\n\t     is sometimes useful when changing network numbers, and one wishes\n\t     to accept packets addressed to the old interface.\tIf the address\n\t     is on the same subnet as the first network address for this\n\t     interface, a non-conflicting netmask must be given.  Usually\n\t     0xffffffff is most appropriate.\n\n     -alias  Remove the network address specified.  This would be used if you\n\t     incorrectly specified an alias, or it was no longer needed.  If\n\t     you have incorrectly set an NS address having the side effect of\n\t     specifying the host portion, removing all NS addresses will allow\n\t     you to respecify the host portion.\n\n     anycast\n\t     (Inet6 only.)  Specify that the address configured is an anycast\n\t     address.  Based on the current specification, only routers may\n\t     configure anycast addresses.  Anycast address will not be used as\n\t     source address of any of outgoing IPv6 packets.\n\n     arp     Enable the use of the Address Resolution Protocol (arp(4)) in\n\t     mapping between network level addresses and link level addresses\n\t     (default).  This is currently implemented for mapping between\n\t     DARPA Internet addresses and IEEE 802 48-bit MAC addresses\n\t     (Ethernet, FDDI, and Token Ring addresses).\n\n     -arp    Disable the use of the Address Resolution Protocol (arp(4)).\n\n     broadcast\n\t     (Inet only.)  Specify the address to use to represent broadcasts\n\t     to the network.  The default broadcast address is the address\n\t     with a host part of all 1's.\n\n     debug   Enable driver dependent debugging code; usually, this turns on\n\t     extra console error logging.\n\n     -debug  Disable driver dependent debugging code.\n\n     delete  Another name for the -alias parameter.\n\n     down    Mark an interface “down”.\tWhen an interface is marked “down”,\n\t     the system will not attempt to transmit messages through that\n\t     interface.  If possible, the interface will be reset to disable\n\t     reception as well.\n\n     ether   Another name for the lladdr parameter.\n\n     lladdr addr\n\t     Set the link-level address on an interface.  This can be used to\n\t     e.g. set a new MAC address on an ethernet interface, though the\n\t     mechanism used is not ethernet-specific.  The address addr is\n\t     specified as a series of colon-separated hex digits.  If the\n\t     interface is already up when this option is used, it will be\n\t     briefly brought down and then brought back up again in order to\n\t     ensure that the receive filter in the underlying ethernet\n\t     hardware is properly reprogrammed.\n\n     media type\n\t     If the driver supports the media selection system, set the media\n\t     type of the interface to type.  Some interfaces support the\n\t     mutually exclusive use of one of several different physical media\n\t     connectors.  For example, a 10Mbit/s Ethernet interface might\n\t     support the use of either AUI or twisted pair connectors.\n\t     Setting the media type to 10base5/AUI would change the currently\n\t     active connector to the AUI port.\tSetting it to 10baseT/UTP\n\t     would activate twisted pair.  Refer to the interfaces' driver\n\t     specific documentation or man page for a complete list of the\n\t     available types.\n\n     mediaopt opts\n\t     If the driver supports the media selection system, set the\n\t     specified media options on the interface.\tThe opts argument is a\n\t     comma delimited list of options to apply to the interface.  Refer\n\t     to the interfaces' driver specific man page for a complete list\n\t     of available options.\n\n     -mediaopt opts\n\t     If the driver supports the media selection system, disable the\n\t     specified media options on the interface.\n\n     rxcsum, txcsum\n\t     If the driver supports user-configurable checksum offloading,\n\t     enable receive (or transmit) checksum offloading on the\n\t     interface.  Some drivers may not be able to enable these flags\n\t     independently of each other, so setting one may also set the\n\t     other.  The driver will offload as much checksum work as it can\n\t     reliably support, the exact level of offloading varies between\n\t     drivers.\n\n     -rxcsum, -txcsum\n\t     If the driver supports user-configurable checksum offloading,\n\t     disable receive (or transmit) checksum offloading on the\n\t     interface.  These settings may not always be independent of each\n\t     other.\n\n     tso     If the driver supports tcp(4) segmentation offloading, enable TSO\n\t     on the interface.\tSome drivers may not be able to support TSO\n\t     for ip(4) and ip6(4) packets, so they may enable only one of\n\t     them.\n\n     -tso    If the driver supports tcp(4) segmentation offloading, disable\n\t     TSO on the interface.  It will always disable TSO for ip(4) and\n\t     ip6(4).\n\n     lro     If the driver supports tcp(4) large receive offloading, enable\n\t     LRO on the interface.\n\n     -lro    If the driver supports tcp(4) large receive offloading, disable\n\t     LRO on the interface.\n\n     av      If supported by the driver, enable 802.1 AVB on the interface.\n\n     -av     If supported by the driver, disable 802.1 AVB on the interface.\n\n     vlanmtu, vlanhwtag\n\t     If the driver offers user-configurable VLAN support, enable\n\t     reception of extended frames or tag processing in hardware,\n\t     respectively.  Note that this must be issued on a physical\n\t     interface associated with vlan(4), not on a vlan(4) interface\n\t     itself.\n\n     -vlanmtu, -vlanhwtag\n\t     If the driver offers user-configurable VLAN support, disable\n\t     reception of extended frames or tag processing in hardware,\n\t     respectively.\n\n     create  Create the specified network pseudo-device.  If the interface is\n\t     given without a unit number, try to create a new device with an\n\t     arbitrary unit number.  If creation of an arbitrary device is\n\t     successful, the new device name is printed to standard output\n\t     unless the interface is renamed or destroyed in the same ifconfig\n\t     invocation.\n\n     destroy\n\t     Destroy the specified network pseudo-device.\n\n     plumb   Another name for the create parameter.  Included for Solaris\n\t     compatibility.\n\n     unplumb\n\t     Another name for the destroy parameter.  Included for Solaris\n\t     compatibility.\n\n     metric n\n\t     Set the routing metric of the interface to n, default 0.  The\n\t     routing metric may be used by routing protocols.  Higher metrics\n\t     have the effect of making a route less favorable; metrics are\n\t     counted as additional hops to the destination network or host.\n\n     mtu n   Set the maximum transmission unit of the interface to n, default\n\t     is interface specific.  The MTU is used to limit the size of\n\t     packets that are transmitted on an interface.  Not all interfaces\n\t     support setting the MTU, and some interfaces have range\n\t     restrictions.\n\n     netmask mask\n\t     (Inet only.)  Specify how much of the address to reserve for\n\t     subdividing networks into sub-networks.  The mask includes the\n\t     network part of the local address and the subnet part, which is\n\t     taken from the host field of the address.\tThe mask can be\n\t     specified as a single hexadecimal number with a leading ‘0x’,\n\t     with a dot-notation Internet address, or with a pseudo-network\n\t     name listed in the network table networks(5).  The mask contains\n\t     1's for the bit positions in the 32-bit address which are to be\n\t     used for the network and subnet parts, and 0's for the host part.\n\t     The mask should contain at least the standard network portion,\n\t     and the subnet field should be contiguous with the network\n\t     portion.\n\n\t     The netmask can also be specified in CIDR notation after the\n\t     address.  See the address option above for more information.\n\n     prefixlen len\n\t     (Inet6 only.)  Specify that len bits are reserved for subdividing\n\t     networks into sub-networks.  The len must be integer, and for\n\t     syntactical reason it must be between 0 to 128.  It is almost\n\t     always 64 under the current IPv6 assignment rule.\tIf the\n\t     parameter is omitted, 64 is used.\n\n\t     The prefix can also be specified using the slash notation after\n\t     the address.  See the address option above for more information.\n\n     remove  Another name for the -alias parameter.  Introduced for\n\t     compatibility with BSD/OS.\n\n     link[0-2]\n\t     Enable special processing of the link level of the interface.\n\t     These three options are interface specific in actual effect,\n\t     however, they are in general used to select special modes of\n\t     operation.  An example of this is to enable SLIP compression, or\n\t     to select the connector type for some Ethernet cards.  Refer to\n\t     the man page for the specific driver for more information.\n\n     -link[0-2]\n\t     Disable special processing at the link level with the specified\n\t     interface.\n\n     up      Mark an interface “up”.  This may be used to enable an interface\n\t     after an “ifconfig down”.\tIt happens automatically when setting\n\t     the first address on an interface.  If the interface was reset\n\t     when previously marked down, the hardware will be re-initialized.\n\n     The following parameters are for ICMPv6 Neighbor Discovery Protocol.\n     Note that the address family keyword “inet6” is needed for them:\n\n     nud     Perform network unreachability detection (NUD).\n\n     -nud    Do not perform network unreachability detection (NUD).\n\n     ifdisabled\n\t     Disable all IPv6 communication on the interface.\n\n     -ifdisabled\n\t     Do not disable all IPv6 communication on the interface.\n\n     insecure\n\t     Disable the processing of Secure Neighbor Discovery (SEND).\n\n     -insecure\n\t     Do not disabled the processing of Secure Neighbor Discovery\n\t     (SEND).\n\n     dad     Perform duplicate address detection (DAD).\n\n     -dad    Do not perform duplicate address detection (DAD).\n\n     replicated\n\t     Modify duplicate address detection (DAD) protocol to expect that\n\t     interface configuration is replicated at a network sleep proxy.\n\t     Ignores certain NA messages and disables optimistic DAD.\n\n     -replicated\n\t     Do not use modified duplicated address detection (DAD) protocol.\n\n     The following parameters are specific to link aggregate interfaces:\n\n     bonddev iface\n\t     If the interface is a bond pseudo device, associate physical\n\t     interface iface with it.  By default, the bond pseudo device is\n\t     in LACP (Link Aggregation Control Protocol) mode (see bondmode\n\t     below).  In this mode, the device conforms to the IEEE 802.3ad\n\t     Link Aggregation specification.\n\n\t     If this is the first physical interface to be associated with the\n\t     bond interface, the bond interface inherits the ethernet address\n\t     from the physical interface.  Physical interfaces that are added\n\t     to the bond have their ethernet address re-programmed so that all\n\t     members of the bond have the same ethernet address.  If the\n\t     physical interface is subsequently removed from the bond using\n\t     -bonddev, a new ethernet address is chosen from the remaining\n\t     interfaces, and all interfaces are re-programmed again with the\n\t     new ethernet address.  If no remaining interfaces exist, the bond\n\t     interface's ethernet address is cleared.\n\n\t     If the specified physical interface iface is not capable of\n\t     having its ethernet address re-programmed, the bonddev command\n\t     will fail.\n\n\t     Once the physical interface iface is successfully associated with\n\t     the bond interface, all received packets are diverted to the bond\n\t     interface.  The physical interface is no longer useable on its\n\t     own, and remains that way until it is removed from the bond using\n\t     -bonddev.\n\n\t     It is possible that the specified interface iface is not capable\n\t     of aggregating, and may remain unused until the operating\n\t     conditions change.\n\n\t     The link status of the bond interface depends on the state of\n\t     link aggregation.\tIf no active partner is detected, the link\n\t     status will remain inactive.\n\n\t     To monitor the 802.3ad Link Aggregation state, use the -b option.\n\n\t     A physical interface that is associated with a vlan pseudo device\n\t     cannot at the same time be associated with a bond pseudo device.\n\t     A physical interface cannot be associated with more than one bond\n\t     pseudo device at the same time.\n\n\t     It is not possible to associate a bond with pseudo interfaces\n\t     such as vlan.  Only physical ethernet interfaces may be\n\t     associated with a bond.\n\n     -bonddev iface\n\t     If the interface is a bond pseudo device, disassociate the\n\t     physical interface iface from it.\tBefore the interface is\n\t     removed from the bond, the bond device announces to the link\n\t     partner that the interface is now individual and no longer\n\t     aggregatable.  If the physical iface is the last interface in the\n\t     bond, the bond interface clears its link address.\n\n     bondmode lacp | static\n\t     If the interface is a bond pseudo device, this option will set\n\t     the mode on the bond interface.  The two currently supported\n\t     modes are lacp and static.  The default mode is lacp.\n\n\t     To enable static mode (and turn off LACP), specify static.  In\n\t     static mode, a member interface is made an active part of the\n\t     link aggregate as long as the link status is active.\n\n\t     To re-enable LACP mode, specify lacp.\n\n     The following parameters are specific to IP tunnel interfaces, gif(4):\n\n     tunnel src_addr dest_addr\n\t     Configure the physical source and destination address for IP\n\t     tunnel interfaces.  The arguments src_addr and dest_addr are\n\t     interpreted as the outer source/destination for the encapsulating\n\t     IPv4/IPv6 header.\n\n     -tunnel\n\t     Unconfigure the physical source and destination address for IP\n\t     tunnel interfaces previously configured with tunnel.\n\n     deletetunnel\n\t     Another name for the -tunnel parameter.\n\n     The following parameters are specific to bridge interfaces:\n\n     addm interface\n\t     Add the interface named by interface as a member of the bridge.\n\t     The interface is put into promiscuous mode so that it can receive\n\t     every packet sent on the network.\n\n     deletem interface\n\t     Remove the interface named by interface from the bridge.\n\t     Promiscuous mode is disabled on the interface when it is removed\n\t     from the bridge.\n\n     maxaddr size\n\t     Set the size of the bridge address cache to size.\tThe default is\n\t     100 entries.\n\n     timeout seconds\n\t     Set the timeout of address cache entries to seconds seconds.  If\n\t     seconds is zero, then address cache entries will not be expired.\n\t     The default is 240 seconds.\n\n     addr    Display the addresses that have been learned by the bridge.\n\n     static interface-name address\n\t     Add a static entry into the address cache pointing to\n\t     interface-name.  Static entries are never aged out of the cache\n\t     or re-placed, even if the address is seen on a different\n\t     interface.\n\n     deladdr address\n\t     Delete address from the address cache.\n\n     flush   Delete all dynamically-learned addresses from the address cache.\n\n     flushall\n\t     Delete all addresses, including static addresses, from the\n\t     address cache.\n\n     discover interface\n\t     Mark an interface as a “discovering” interface.  When the bridge\n\t     has no address cache entry (either dynamic or static) for the\n\t     destination address of a packet, the bridge will forward the\n\t     packet to all member interfaces marked as “discovering”.  This is\n\t     the default for all interfaces added to a bridge.\n\n     -discover interface\n\t     Clear the “discovering” attribute on a member interface.  For\n\t     packets without the “discovering” attribute, the only packets\n\t     forwarded on the interface are broadcast or multicast packets and\n\t     packets for which the destination address is known to be on the\n\t     interface's segment.\n\n     learn interface\n\t     Mark an interface as a “learning” interface.  When a packet\n\t     arrives on such an interface, the source address of the packet is\n\t     entered into the address cache as being a destination address on\n\t     the interface's segment.  This is the default for all interfaces\n\t     added to a bridge.\n\n     -learn interface\n\t     Clear the “learning” attribute on a member interface.\n\n     stp interface\n\t     Enable Spanning Tree protocol on interface.  The if_bridge(4)\n\t     driver has support for the IEEE 802.1D Spanning Tree protocol\n\t     (STP).  Spanning Tree is used to detect and remove loops in a\n\t     network topology.\n\n     -stp interface\n\t     Disable Spanning Tree protocol on interface.  This is the default\n\t     for all interfaces added to a bridge.\n\n     maxage seconds\n\t     Set the time that a Spanning Tree protocol configuration is\n\t     valid.  The default is 20 seconds.  The minimum is 6 seconds and\n\t     the maximum is 40 seconds.\n\n     fwddelay seconds\n\t     Set the time that must pass before an interface begins forwarding\n\t     packets when Spanning Tree is enabled.  The default is 15\n\t     seconds.  The minimum is 4 seconds and the maximum is 30 seconds.\n\n     hellotime seconds\n\t     Set the time between broadcasting of Spanning Tree protocol\n\t     configuration messages.  The hello time may only be changed when\n\t     operating in legacy stp mode.  The default is 2 seconds.  The\n\t     minimum is 1 second and the maximum is 2 seconds.\n\n     priority value\n\t     Set the bridge priority for Spanning Tree.  The default is 32768.\n\t     The minimum is 0 and the maximum is 61440.\n\n     ifpriority interface value\n\t     Set the Spanning Tree priority of interface to value.  The\n\t     default is 128.  The minimum is 0 and the maximum is 240.\n\n     ifpathcost interface value\n\t     Set the Spanning Tree path cost of interface to value.  The\n\t     default is calculated from the link speed.  To change a\n\t     previously selected path cost back to automatic, set the cost to\n\t     0.  The minimum is 1 and the maximum is 200000000.\n\n     ifmaxaddr interface size\n\t     Set the maximum number of hosts allowed from an interface,\n\t     packets with unknown source addresses are dropped until an\n\t     existing host cache entry expires or is removed.  Set to 0 to\n\t     disable.\n\n     hostfilter interface address\n\t     Configure the bridge to accept incoming packet on the interface\n\t     only if they match the given MAC address and IP address -- use\n\t     the command twice to set both type of addresses.  Other filtering\n\t     restrictions apply.\n\n     -hostfilter interface\n\t     Allow traffic from any host on that interface.\n\n     The following parameters are specific to vlan interfaces:\n\n     vlan vlan_tag\n\t     Set the VLAN tag value to vlan_tag.  This value is a 16-bit\n\t     number which is used to create an 802.1Q VLAN header for packets\n\t     sent from the vlan(4) interface.  Note that vlan and vlandev must\n\t     both be set at the same time.\n\n     vlandev iface\n\t     Associate the physical interface iface with a vlan(4) interface.\n\t     Packets transmitted through the vlan(4) interface will be\n\t     diverted to the specified physical interface iface with 802.1Q\n\t     VLAN encapsulation.  Packets with 802.1Q encapsulation received\n\t     by the parent interface with the correct VLAN tag will be\n\t     diverted to the associated vlan(4) pseudo-interface.  The vlan(4)\n\t     interface is assigned a copy of the parent interface's flags and\n\t     the parent's ethernet address.  The vlandev and vlan must both be\n\t     set at the same time.  If the vlan(4) interface already has a\n\t     physical interface associated with it, this command will fail.\n\t     To change the association to another physical interface, the\n\t     existing association must be cleared first.\n\n\t     Note: if the hardware tagging capability is set on the parent\n\t     interface, the vlan(4) pseudo interface's behavior changes: the\n\t     vlan(4) interface recognizes that the parent interface supports\n\t     insertion and extraction of VLAN tags on its own (usually in\n\t     firmware) and that it should pass packets to and from the parent\n\t     unaltered.\n\n     -vlandev [iface]\n\t     If the driver is a vlan(4) pseudo device, disassociate the parent\n\t     interface from it.  This breaks the link between the vlan(4)\n\t     interface and its parent, clears its VLAN tag, flags and its link\n\t     address and shuts the interface down.  The iface argument is\n\t     useless and hence deprecated.\n\n     tbr rate\n\t     Set a token bucket regulator that limits the egress bandwidth to\n\t     rate, measured in bps, Kbps, Mbps or Gbps.  If the specified rate\n\t     is zero, the token bucket regulator is disabled.\n\n     The ifconfig utility displays the current configuration for a network\n     interface when no optional parameters are supplied.  If a protocol family\n     is specified, ifconfig will report only the details specific to that\n     protocol family.\n\n     If the -m flag is passed before an interface name, ifconfig will display\n     the capability list and all of the supported media for the specified\n     interface.\n\n     If -L flag is supplied, address lifetime is displayed for IPv6 addresses,\n     as time offset string.\n\n     Optionally, the -a flag may be used instead of an interface name.\tThis\n     flag instructs ifconfig to display information about all interfaces in\n     the system.  The -d flag limits this to interfaces that are down, and -u\n     limits this to interfaces that are up.  When no arguments are given, -a\n     is implied.\n\n     The -l flag may be used to list all available interfaces on the system,\n     with no other additional information.  Use of this flag is mutually\n     exclusive with all other flags and commands, except for -d (only list\n     interfaces that are down) and -u (only list interfaces that are up).\n\n     The -v flag may be used to get more verbose status for an interface.\n\n     The -C flag may be used to list all of the interface cloners available on\n     the system, with no additional information.  Use of this flag is mutually\n     exclusive with all other flags and commands.\n\n     The -r flag may be used to show additional information related to the\n     count of route references on the network interface.\n\n     For bridge interfaces, the list of addresses learned by the bridge is not\n     shown when displaying information about all interfaces except when the -v\n     flag is used.\n\n     The -X flag may be used to list interfaces whose names match the regular\n     expression in the pattern.  See re_format(7) for more information on\n     regular expressions.  This flag may be used with the -a flag and the -l\n     flag to further restrict the set of interfaces to be listed.\n\n     The -f flag may be used to control the output format of ifconfig.\tThe\n     format is specified as a comma-separated list of type:format pairs (see\n     the EXAMPLES section for more information).  The -f flag can be supplied\n     multiple times.\n\n     The types and their associated format strings are:\n\n     addr   Adjust the display of inet and inet6 addresses:\n\n\t    default  Default format, numeric\n\t    fqdn     Fully qualified domain names (FQDN)\n\t    host     Unqualified hostnames\n\t    numeric  Numeric format\n\n     ether  Adjust the display of link-level ethernet (MAC) addresses:\n\n\t    colon    Separate address segments with a colon\n\t    dash     Separate address segments with a dash\n\t    default  Default format, colon\n\n     inet   Adjust the display of inet address subnet masks:\n\n\t    cidr     CIDR notation, for example: ‘203.0.113.224/26’\n\t    default  Default format, hex\n\t    dotted   Dotted quad notation, for example: ‘255.255.255.192’\n\t    hex      Hexadecimal format, for example: ‘0xffffffc0’\n\n     inet6  Adjust the display of inet6 address prefixes (subnet masks):\n\n\t    cidr     CIDR notation, for example: ‘::1/128’ or ‘fe80::1%lo0/64’\n\t    default  Default format, numeric\n\t    numeric  Integer format, for example: ‘prefixlen 64’\n\n     Only the super-user may modify the configuration of a network interface.\n",
        "     The media selection system is relatively new and only some drivers\n     support it (or have need for it).\n",
        "     Assign the IPv4 address 192.0.2.10, with a network mask of 255.255.255.0,\n     to the interface en0:\n\t   # ifconfig en0 inet 192.0.2.10 netmask 255.255.255.0\n\n     Add the IPv4 address 192.0.2.45, with the CIDR network prefix /28, to the\n     interface en0, using add as a synonym for the canonical form of the\n     option alias:\n\t   # ifconfig en0 inet 192.0.2.45/28 add\n\n     Remove the IPv4 address 192.0.2.45 from the interface en0:\n\t   # ifconfig en0 inet 192.0.2.45 -alias\n\n     Add the IPv6 address 2001:DB8:DBDB::123/48 to the interface en0:\n\t   # ifconfig en0 inet6 2001:db8:bdbd::123 prefixlen 48 alias\n     Note that lower case hexadecimal IPv6 addresses are acceptable.\n\n     Remove the IPv6 address added in the above example, using the / character\n     as shorthand for the network prefix, and using delete as a synonym for\n     the canonical form of the option -alias:\n\t   # ifconfig en0 inet6 2001:db8:bdbd::123/48 delete\n\n     Configure the interface en1, to use 100baseTX, full duplex Ethernet media\n     options:\n\t   # ifconfig en1 media 100baseTX mediaopt full-duplex\n\n     Create the software network interface gif1:\n\t   # ifconfig gif1 create\n\n     Destroy the software network interface gif1:\n\t   # ifconfig gif1 destroy\n\n     Display inet and inet6 address subnet masks in CIDR notation\n\t   # ifconfig -f inet:cidr,inet6:cidr\n",
        "     Messages indicating the specified interface does not exist, the requested\n     address is unknown, or the user is not privileged and tried to alter an\n     interface's configuration.\n",
        "     netstat(1), netintro(4), sysctl(8)\n",
        "     The ifconfig utility appeared in 4.2BSD.\n",
        "     Basic IPv6 node operation requires a link-local address on each interface\n     configured for IPv6.  Normally, such an address is automatically\n     configured by the kernel on each interface added to the system; this\n     behaviour may be disabled by setting the sysctl MIB variable\n     net.inet6.ip6.auto_linklocal to 0.\n\n     If you delete such an address using ifconfig, the kernel may act very\n     odd.  Do this at your own risk.\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-alias",
      "description": "Remove the network address specified.  This would be used if you incorrectly specified an alias, or it was no longer needed.  If you have incorrectly set an NS address having the side effect of specifying the host portion, removing all NS addresses will allow you to respecify the host portion. anycast (Inet6 only.)  Specify that the address configured is an anycast address.  Based on the current specification, only routers may configure anycast addresses.  Anycast address will not be used as source address of any of outgoing IPv6 packets. arp     Enable the use of the Address Resolution Protocol (arp(4)) in mapping between network level addresses and link level addresses (default).  This is currently implemented for mapping between DARPA Internet addresses and IEEE 802 48-bit MAC addresses (Ethernet, FDDI, and Token Ring addresses)."
    },
    {
      "flag": "-arp",
      "description": "Disable the use of the Address Resolution Protocol (arp(4)). broadcast (Inet only.)  Specify the address to use to represent broadcasts to the network.  The default broadcast address is the address with a host part of all 1's. debug   Enable driver dependent debugging code; usually, this turns on extra console error logging."
    },
    {
      "flag": "-debug",
      "description": "Disable driver dependent debugging code. delete  Another name for the -alias parameter. down    Mark an interface “down”.\tWhen an interface is marked “down”, the system will not attempt to transmit messages through that interface.  If possible, the interface will be reset to disable reception as well. ether   Another name for the lladdr parameter. lladdr addr Set the link-level address on an interface.  This can be used to e.g. set a new MAC address on an ethernet interface, though the mechanism used is not ethernet-specific.  The address addr is specified as a series of colon-separated hex digits.  If the interface is already up when this option is used, it will be briefly brought down and then brought back up again in order to ensure that the receive filter in the underlying ethernet hardware is properly reprogrammed. media type If the driver supports the media selection system, set the media type of the interface to type.  Some interfaces support the mutually exclusive use of one of several different physical media connectors.  For example, a 10Mbit/s Ethernet interface might support the use of either AUI or twisted pair connectors. Setting the media type to 10base5/AUI would change the currently active connector to the AUI port.\tSetting it to 10baseT/UTP would activate twisted pair.  Refer to the interfaces' driver specific documentation or man page for a complete list of the available types. mediaopt opts If the driver supports the media selection system, set the specified media options on the interface.\tThe opts argument is a comma delimited list of options to apply to the interface.  Refer to the interfaces' driver specific man page for a complete list of available options."
    },
    {
      "flag": "-mediaopt",
      "description": "opts If the driver supports the media selection system, disable the specified media options on the interface. rxcsum, txcsum If the driver supports user-configurable checksum offloading, enable receive (or transmit) checksum offloading on the interface.  Some drivers may not be able to enable these flags independently of each other, so setting one may also set the other.  The driver will offload as much checksum work as it can reliably support, the exact level of offloading varies between drivers."
    },
    {
      "flag": "-rxcsum",
      "description": ", -txcsum If the driver supports user-configurable checksum offloading, disable receive (or transmit) checksum offloading on the interface.  These settings may not always be independent of each other. tso     If the driver supports tcp(4) segmentation offloading, enable TSO on the interface.\tSome drivers may not be able to support TSO for ip(4) and ip6(4) packets, so they may enable only one of them."
    },
    {
      "flag": "-tso",
      "description": "If the driver supports tcp(4) segmentation offloading, disable TSO on the interface.  It will always disable TSO for ip(4) and ip6(4). lro     If the driver supports tcp(4) large receive offloading, enable LRO on the interface."
    },
    {
      "flag": "-lro",
      "description": "If the driver supports tcp(4) large receive offloading, disable LRO on the interface. av      If supported by the driver, enable 802.1 AVB on the interface."
    },
    {
      "flag": "-av",
      "description": "If supported by the driver, disable 802.1 AVB on the interface. vlanmtu, vlanhwtag If the driver offers user-configurable VLAN support, enable reception of extended frames or tag processing in hardware, respectively.  Note that this must be issued on a physical interface associated with vlan(4), not on a vlan(4) interface itself."
    },
    {
      "flag": "-vlanmtu",
      "description": ", -vlanhwtag If the driver offers user-configurable VLAN support, disable reception of extended frames or tag processing in hardware, respectively. create  Create the specified network pseudo-device.  If the interface is given without a unit number, try to create a new device with an arbitrary unit number.  If creation of an arbitrary device is successful, the new device name is printed to standard output unless the interface is renamed or destroyed in the same ifconfig invocation. destroy Destroy the specified network pseudo-device. plumb   Another name for the create parameter.  Included for Solaris compatibility. unplumb Another name for the destroy parameter.  Included for Solaris compatibility. metric n Set the routing metric of the interface to n, default 0.  The routing metric may be used by routing protocols.  Higher metrics have the effect of making a route less favorable; metrics are counted as additional hops to the destination network or host. mtu n   Set the maximum transmission unit of the interface to n, default is interface specific.  The MTU is used to limit the size of packets that are transmitted on an interface.  Not all interfaces support setting the MTU, and some interfaces have range restrictions. netmask mask (Inet only.)  Specify how much of the address to reserve for subdividing networks into sub-networks.  The mask includes the network part of the local address and the subnet part, which is taken from the host field of the address.\tThe mask can be specified as a single hexadecimal number with a leading ‘0x’, with a dot-notation Internet address, or with a pseudo-network name listed in the network table networks(5).  The mask contains 1's for the bit positions in the 32-bit address which are to be used for the network and subnet parts, and 0's for the host part. The mask should contain at least the standard network portion, and the subnet field should be contiguous with the network portion. The netmask can also be specified in CIDR notation after the address.  See the address option above for more information. prefixlen len (Inet6 only.)  Specify that len bits are reserved for subdividing networks into sub-networks.  The len must be integer, and for syntactical reason it must be between 0 to 128.  It is almost always 64 under the current IPv6 assignment rule.\tIf the parameter is omitted, 64 is used. The prefix can also be specified using the slash notation after the address.  See the address option above for more information. remove  Another name for the -alias parameter.  Introduced for compatibility with BSD/OS. link[0-2] Enable special processing of the link level of the interface. These three options are interface specific in actual effect, however, they are in general used to select special modes of operation.  An example of this is to enable SLIP compression, or to select the connector type for some Ethernet cards.  Refer to the man page for the specific driver for more information."
    },
    {
      "flag": "-link",
      "description": " Disable special processing at the link level with the specified interface. up      Mark an interface “up”.  This may be used to enable an interface after an “ifconfig down”.\tIt happens automatically when setting the first address on an interface.  If the interface was reset when previously marked down, the hardware will be re-initialized. The following parameters are for ICMPv6 Neighbor Discovery Protocol. Note that the address family keyword “inet6” is needed for them: nud     Perform network unreachability detection (NUD).",
      "argument": "0-2"
    },
    {
      "flag": "-nud",
      "description": "Do not perform network unreachability detection (NUD). ifdisabled Disable all IPv6 communication on the interface."
    },
    {
      "flag": "-ifdisabled",
      "description": " Do not disable all IPv6 communication on the interface. insecure Disable the processing of Secure Neighbor Discovery (SEND)."
    },
    {
      "flag": "-insecure",
      "description": " Do not disabled the processing of Secure Neighbor Discovery (SEND). dad     Perform duplicate address detection (DAD)."
    },
    {
      "flag": "-dad",
      "description": "Do not perform duplicate address detection (DAD). replicated Modify duplicate address detection (DAD) protocol to expect that interface configuration is replicated at a network sleep proxy. Ignores certain NA messages and disables optimistic DAD."
    },
    {
      "flag": "-replicated",
      "description": " Do not use modified duplicated address detection (DAD) protocol. The following parameters are specific to link aggregate interfaces: bonddev iface If the interface is a bond pseudo device, associate physical interface iface with it.  By default, the bond pseudo device is in LACP (Link Aggregation Control Protocol) mode (see bondmode below).  In this mode, the device conforms to the IEEE 802.3ad Link Aggregation specification. If this is the first physical interface to be associated with the bond interface, the bond interface inherits the ethernet address from the physical interface.  Physical interfaces that are added to the bond have their ethernet address re-programmed so that all members of the bond have the same ethernet address.  If the physical interface is subsequently removed from the bond using"
    },
    {
      "flag": "-bonddev",
      "description": " interfaces, and all interfaces are re-programmed again with the new ethernet address.  If no remaining interfaces exist, the bond interface's ethernet address is cleared. If the specified physical interface iface is not capable of having its ethernet address re-programmed, the bonddev command will fail. Once the physical interface iface is successfully associated with the bond interface, all received packets are diverted to the bond interface.  The physical interface is no longer useable on its own, and remains that way until it is removed from the bond using It is possible that the specified interface iface is not capable of aggregating, and may remain unused until the operating conditions change. The link status of the bond interface depends on the state of link aggregation.\tIf no active partner is detected, the link status will remain inactive. To monitor the 802.3ad Link Aggregation state, use the -b option. A physical interface that is associated with a vlan pseudo device cannot at the same time be associated with a bond pseudo device. A physical interface cannot be associated with more than one bond pseudo device at the same time. It is not possible to associate a bond with pseudo interfaces such as vlan.  Only physical ethernet interfaces may be associated with a bond. If the interface is a bond pseudo device, disassociate the physical interface iface from it.\tBefore the interface is removed from the bond, the bond device announces to the link partner that the interface is now individual and no longer aggregatable.  If the physical iface is the last interface in the bond, the bond interface clears its link address. bondmode lacp | static If the interface is a bond pseudo device, this option will set the mode on the bond interface.  The two currently supported modes are lacp and static.  The default mode is lacp. To enable static mode (and turn off LACP), specify static.  In static mode, a member interface is made an active part of the link aggregate as long as the link status is active. To re-enable LACP mode, specify lacp. The following parameters are specific to IP tunnel interfaces, gif(4): tunnel src_addr dest_addr Configure the physical source and destination address for IP tunnel interfaces.  The arguments src_addr and dest_addr are interpreted as the outer source/destination for the encapsulating IPv4/IPv6 header.",
      "optional": false
    },
    {
      "flag": "-bonddev",
      "description": " interfaces, and all interfaces are re-programmed again with the new ethernet address.  If no remaining interfaces exist, the bond interface's ethernet address is cleared. If the specified physical interface iface is not capable of having its ethernet address re-programmed, the bonddev command will fail. Once the physical interface iface is successfully associated with the bond interface, all received packets are diverted to the bond interface.  The physical interface is no longer useable on its own, and remains that way until it is removed from the bond using It is possible that the specified interface iface is not capable of aggregating, and may remain unused until the operating conditions change. The link status of the bond interface depends on the state of link aggregation.\tIf no active partner is detected, the link status will remain inactive. To monitor the 802.3ad Link Aggregation state, use the -b option. A physical interface that is associated with a vlan pseudo device cannot at the same time be associated with a bond pseudo device. A physical interface cannot be associated with more than one bond pseudo device at the same time. It is not possible to associate a bond with pseudo interfaces such as vlan.  Only physical ethernet interfaces may be associated with a bond. If the interface is a bond pseudo device, disassociate the physical interface iface from it.\tBefore the interface is removed from the bond, the bond device announces to the link partner that the interface is now individual and no longer aggregatable.  If the physical iface is the last interface in the bond, the bond interface clears its link address. bondmode lacp | static If the interface is a bond pseudo device, this option will set the mode on the bond interface.  The two currently supported modes are lacp and static.  The default mode is lacp. To enable static mode (and turn off LACP), specify static.  In static mode, a member interface is made an active part of the link aggregate as long as the link status is active. To re-enable LACP mode, specify lacp. The following parameters are specific to IP tunnel interfaces, gif(4): tunnel src_addr dest_addr Configure the physical source and destination address for IP tunnel interfaces.  The arguments src_addr and dest_addr are interpreted as the outer source/destination for the encapsulating IPv4/IPv6 header.",
      "optional": false
    },
    {
      "flag": "-bonddev",
      "description": " interfaces, and all interfaces are re-programmed again with the new ethernet address.  If no remaining interfaces exist, the bond interface's ethernet address is cleared. If the specified physical interface iface is not capable of having its ethernet address re-programmed, the bonddev command will fail. Once the physical interface iface is successfully associated with the bond interface, all received packets are diverted to the bond interface.  The physical interface is no longer useable on its own, and remains that way until it is removed from the bond using It is possible that the specified interface iface is not capable of aggregating, and may remain unused until the operating conditions change. The link status of the bond interface depends on the state of link aggregation.\tIf no active partner is detected, the link status will remain inactive. To monitor the 802.3ad Link Aggregation state, use the -b option. A physical interface that is associated with a vlan pseudo device cannot at the same time be associated with a bond pseudo device. A physical interface cannot be associated with more than one bond pseudo device at the same time. It is not possible to associate a bond with pseudo interfaces such as vlan.  Only physical ethernet interfaces may be associated with a bond. If the interface is a bond pseudo device, disassociate the physical interface iface from it.\tBefore the interface is removed from the bond, the bond device announces to the link partner that the interface is now individual and no longer aggregatable.  If the physical iface is the last interface in the bond, the bond interface clears its link address. bondmode lacp | static If the interface is a bond pseudo device, this option will set the mode on the bond interface.  The two currently supported modes are lacp and static.  The default mode is lacp. To enable static mode (and turn off LACP), specify static.  In static mode, a member interface is made an active part of the link aggregate as long as the link status is active. To re-enable LACP mode, specify lacp. The following parameters are specific to IP tunnel interfaces, gif(4): tunnel src_addr dest_addr Configure the physical source and destination address for IP tunnel interfaces.  The arguments src_addr and dest_addr are interpreted as the outer source/destination for the encapsulating IPv4/IPv6 header.",
      "optional": false
    },
    {
      "flag": "-tunnel",
      "description": " Unconfigure the physical source and destination address for IP tunnel interfaces previously configured with tunnel. deletetunnel Another name for the -tunnel parameter. The following parameters are specific to bridge interfaces: addm interface Add the interface named by interface as a member of the bridge. The interface is put into promiscuous mode so that it can receive every packet sent on the network. deletem interface Remove the interface named by interface from the bridge. Promiscuous mode is disabled on the interface when it is removed from the bridge. maxaddr size Set the size of the bridge address cache to size.\tThe default is 100 entries. timeout seconds Set the timeout of address cache entries to seconds seconds.  If seconds is zero, then address cache entries will not be expired. The default is 240 seconds. addr    Display the addresses that have been learned by the bridge. static interface-name address Add a static entry into the address cache pointing to interface-name.  Static entries are never aged out of the cache or re-placed, even if the address is seen on a different interface. deladdr address Delete address from the address cache. flush   Delete all dynamically-learned addresses from the address cache. flushall Delete all addresses, including static addresses, from the address cache. discover interface Mark an interface as a “discovering” interface.  When the bridge has no address cache entry (either dynamic or static) for the destination address of a packet, the bridge will forward the packet to all member interfaces marked as “discovering”.  This is the default for all interfaces added to a bridge."
    },
    {
      "flag": "-discover",
      "description": "interface Clear the “discovering” attribute on a member interface.  For packets without the “discovering” attribute, the only packets forwarded on the interface are broadcast or multicast packets and packets for which the destination address is known to be on the interface's segment. learn interface Mark an interface as a “learning” interface.  When a packet arrives on such an interface, the source address of the packet is entered into the address cache as being a destination address on the interface's segment.  This is the default for all interfaces added to a bridge."
    },
    {
      "flag": "-learn",
      "description": "interface Clear the “learning” attribute on a member interface. stp interface Enable Spanning Tree protocol on interface.  The if_bridge(4) driver has support for the IEEE 802.1D Spanning Tree protocol (STP).  Spanning Tree is used to detect and remove loops in a network topology."
    },
    {
      "flag": "-stp",
      "description": "interface Disable Spanning Tree protocol on interface.  This is the default for all interfaces added to a bridge. maxage seconds Set the time that a Spanning Tree protocol configuration is valid.  The default is 20 seconds.  The minimum is 6 seconds and the maximum is 40 seconds. fwddelay seconds Set the time that must pass before an interface begins forwarding packets when Spanning Tree is enabled.  The default is 15 seconds.  The minimum is 4 seconds and the maximum is 30 seconds. hellotime seconds Set the time between broadcasting of Spanning Tree protocol configuration messages.  The hello time may only be changed when operating in legacy stp mode.  The default is 2 seconds.  The minimum is 1 second and the maximum is 2 seconds. priority value Set the bridge priority for Spanning Tree.  The default is 32768. The minimum is 0 and the maximum is 61440. ifpriority interface value Set the Spanning Tree priority of interface to value.  The default is 128.  The minimum is 0 and the maximum is 240. ifpathcost interface value Set the Spanning Tree path cost of interface to value.  The default is calculated from the link speed.  To change a previously selected path cost back to automatic, set the cost to 0.  The minimum is 1 and the maximum is 200000000. ifmaxaddr interface size Set the maximum number of hosts allowed from an interface, packets with unknown source addresses are dropped until an existing host cache entry expires or is removed.  Set to 0 to disable. hostfilter interface address Configure the bridge to accept incoming packet on the interface only if they match the given MAC address and IP address -- use the command twice to set both type of addresses.  Other filtering restrictions apply."
    },
    {
      "flag": "-hostfilter",
      "description": "interface Allow traffic from any host on that interface. The following parameters are specific to vlan interfaces: vlan vlan_tag Set the VLAN tag value to vlan_tag.  This value is a 16-bit number which is used to create an 802.1Q VLAN header for packets sent from the vlan(4) interface.  Note that vlan and vlandev must both be set at the same time. vlandev iface Associate the physical interface iface with a vlan(4) interface. Packets transmitted through the vlan(4) interface will be diverted to the specified physical interface iface with 802.1Q VLAN encapsulation.  Packets with 802.1Q encapsulation received by the parent interface with the correct VLAN tag will be diverted to the associated vlan(4) pseudo-interface.  The vlan(4) interface is assigned a copy of the parent interface's flags and the parent's ethernet address.  The vlandev and vlan must both be set at the same time.  If the vlan(4) interface already has a physical interface associated with it, this command will fail. To change the association to another physical interface, the existing association must be cleared first. Note: if the hardware tagging capability is set on the parent interface, the vlan(4) pseudo interface's behavior changes: the vlan(4) interface recognizes that the parent interface supports insertion and extraction of VLAN tags on its own (usually in firmware) and that it should pass packets to and from the parent unaltered."
    },
    {
      "flag": "-vlandev",
      "description": " If the driver is a vlan(4) pseudo device, disassociate the parent interface from it.  This breaks the link between the vlan(4) interface and its parent, clears its VLAN tag, flags and its link address and shuts the interface down.  The iface argument is useless and hence deprecated. tbr rate Set a token bucket regulator that limits the egress bandwidth to rate, measured in bps, Kbps, Mbps or Gbps.  If the specified rate is zero, the token bucket regulator is disabled. The ifconfig utility displays the current configuration for a network interface when no optional parameters are supplied.  If a protocol family is specified, ifconfig will report only the details specific to that protocol family. If the -m flag is passed before an interface name, ifconfig will display the capability list and all of the supported media for the specified interface. If -L flag is supplied, address lifetime is displayed for IPv6 addresses, as time offset string. Optionally, the -a flag may be used instead of an interface name.\tThis flag instructs ifconfig to display information about all interfaces in the system.  The -d flag limits this to interfaces that are down, and -u limits this to interfaces that are up.  When no arguments are given, -a is implied. The -l flag may be used to list all available interfaces on the system, with no other additional information.  Use of this flag is mutually exclusive with all other flags and commands, except for -d (only list interfaces that are down) and -u (only list interfaces that are up). The -v flag may be used to get more verbose status for an interface. The -C flag may be used to list all of the interface cloners available on the system, with no additional information.  Use of this flag is mutually exclusive with all other flags and commands. The -r flag may be used to show additional information related to the count of route references on the network interface. For bridge interfaces, the list of addresses learned by the bridge is not shown when displaying information about all interfaces except when the -v flag is used. The -X flag may be used to list interfaces whose names match the regular expression in the pattern.  See re_format(7) for more information on regular expressions.  This flag may be used with the -a flag and the -l flag to further restrict the set of interfaces to be listed. The -f flag may be used to control the output format of ifconfig.\tThe format is specified as a comma-separated list of type:format pairs (see the EXAMPLES section for more information).  The -f flag can be supplied multiple times. The types and their associated format strings are: addr   Adjust the display of inet and inet6 addresses: default  Default format, numeric fqdn     Fully qualified domain names (FQDN) host     Unqualified hostnames numeric  Numeric format ether  Adjust the display of link-level ethernet (MAC) addresses: colon    Separate address segments with a colon dash     Separate address segments with a dash default  Default format, colon inet   Adjust the display of inet address subnet masks: cidr     CIDR notation, for example: ‘203.0.113.224/26’ default  Default format, hex dotted   Dotted quad notation, for example: ‘255.255.255.192’ hex      Hexadecimal format, for example: ‘0xffffffc0’ inet6  Adjust the display of inet6 address prefixes (subnet masks): cidr     CIDR notation, for example: ‘::1/128’ or ‘fe80::1%lo0/64’ default  Default format, numeric numeric  Integer format, for example: ‘prefixlen 64’ Only the super-user may modify the configuration of a network interface.",
      "optional": false
    }
  ],
  "examples": [],
  "relatedCommands": [
    "netstat",
    "netintro",
    "sysctl",
    "ifconfig",
    "configure",
    "network",
    "interface",
    "parameters",
    "type",
    "format",
    "create",
    "address_family",
    "address",
    "dest_address",
    "destroy"
  ],
  "seeAlso": [
    {
      "name": "netstat",
      "section": 1
    },
    {
      "name": "netintro",
      "section": 4
    },
    {
      "name": "sysctl",
      "section": 8
    }
  ],
  "metadata": {},
  "searchContent": "ifconfig ifconfig manual page the ifconfig utility is used to assign an address to a network interface and or configure network interface parameters ifconfig -l -m -r -f type format interface create address family address dest address parameters ifconfig interface destroy ifconfig -a -l -d -m -r -u -v -f type format address family ifconfig -l -d -u address family ifconfig -l -d -m -r -u -v -c -f type format ifconfig interface vlan vlan-tag vlandev iface ifconfig interface -vlandev iface ifconfig interface bonddev iface ifconfig interface -bonddev iface ifconfig interface bondmode lacp static ifconfig -x pattern parameters ifconfig manual page utility used assign address network interface and or configure parameters -alias remove the network address specified this would be used if you incorrectly specified an alias or it was no longer needed if you have incorrectly set an ns address having the side effect of specifying the host portion removing all ns addresses will allow you to respecify the host portion anycast inet6 only specify that the address configured is an anycast address based on the current specification only routers may configure anycast addresses anycast address will not be used as source address of any of outgoing ipv6 packets arp enable the use of the address resolution protocol arp 4 in mapping between network level addresses and link level addresses default this is currently implemented for mapping between darpa internet addresses and ieee 802 48-bit mac addresses ethernet fddi and token ring addresses -arp disable the use of the address resolution protocol arp 4 broadcast inet only specify the address to use to represent broadcasts to the network the default broadcast address is the address with a host part of all 1 s debug enable driver dependent debugging code usually this turns on extra console error logging -debug disable driver dependent debugging code delete another name for the -alias parameter down mark an interface down when an interface is marked down the system will not attempt to transmit messages through that interface if possible the interface will be reset to disable reception as well ether another name for the lladdr parameter lladdr addr set the link-level address on an interface this can be used to e g set a new mac address on an ethernet interface though the mechanism used is not ethernet-specific the address addr is specified as a series of colon-separated hex digits if the interface is already up when this option is used it will be briefly brought down and then brought back up again in order to ensure that the receive filter in the underlying ethernet hardware is properly reprogrammed media type if the driver supports the media selection system set the media type of the interface to type some interfaces support the mutually exclusive use of one of several different physical media connectors for example a 10mbit s ethernet interface might support the use of either aui or twisted pair connectors setting the media type to 10base5 aui would change the currently active connector to the aui port setting it to 10baset utp would activate twisted pair refer to the interfaces driver specific documentation or man page for a complete list of the available types mediaopt opts if the driver supports the media selection system set the specified media options on the interface the opts argument is a comma delimited list of options to apply to the interface refer to the interfaces driver specific man page for a complete list of available options -mediaopt opts if the driver supports the media selection system disable the specified media options on the interface rxcsum txcsum if the driver supports user-configurable checksum offloading enable receive or transmit checksum offloading on the interface some drivers may not be able to enable these flags independently of each other so setting one may also set the other the driver will offload as much checksum work as it can reliably support the exact level of offloading varies between drivers -rxcsum -txcsum if the driver supports user-configurable checksum offloading disable receive or transmit checksum offloading on the interface these settings may not always be independent of each other tso if the driver supports tcp 4 segmentation offloading enable tso on the interface some drivers may not be able to support tso for ip 4 and ip6 4 packets so they may enable only one of them -tso if the driver supports tcp 4 segmentation offloading disable tso on the interface it will always disable tso for ip 4 and ip6 4 lro if the driver supports tcp 4 large receive offloading enable lro on the interface -lro if the driver supports tcp 4 large receive offloading disable lro on the interface av if supported by the driver enable 802 1 avb on the interface -av if supported by the driver disable 802 1 avb on the interface vlanmtu vlanhwtag if the driver offers user-configurable vlan support enable reception of extended frames or tag processing in hardware respectively note that this must be issued on a physical interface associated with vlan 4 not on a vlan 4 interface itself -vlanmtu -vlanhwtag if the driver offers user-configurable vlan support disable reception of extended frames or tag processing in hardware respectively create create the specified network pseudo-device if the interface is given without a unit number try to create a new device with an arbitrary unit number if creation of an arbitrary device is successful the new device name is printed to standard output unless the interface is renamed or destroyed in the same ifconfig invocation destroy destroy the specified network pseudo-device plumb another name for the create parameter included for solaris compatibility unplumb another name for the destroy parameter included for solaris compatibility metric n set the routing metric of the interface to n default 0 the routing metric may be used by routing protocols higher metrics have the effect of making a route less favorable metrics are counted as additional hops to the destination network or host mtu n set the maximum transmission unit of the interface to n default is interface specific the mtu is used to limit the size of packets that are transmitted on an interface not all interfaces support setting the mtu and some interfaces have range restrictions netmask mask inet only specify how much of the address to reserve for subdividing networks into sub-networks the mask includes the network part of the local address and the subnet part which is taken from the host field of the address the mask can be specified as a single hexadecimal number with a leading 0x with a dot-notation internet address or with a pseudo-network name listed in the network table networks 5 the mask contains 1 s for the bit positions in the 32-bit address which are to be used for the network and subnet parts and 0 s for the host part the mask should contain at least the standard network portion and the subnet field should be contiguous with the network portion the netmask can also be specified in cidr notation after the address see the address option above for more information prefixlen len inet6 only specify that len bits are reserved for subdividing networks into sub-networks the len must be integer and for syntactical reason it must be between 0 to 128 it is almost always 64 under the current ipv6 assignment rule if the parameter is omitted 64 is used the prefix can also be specified using the slash notation after the address see the address option above for more information remove another name for the -alias parameter introduced for compatibility with bsd os link 0-2 enable special processing of the link level of the interface these three options are interface specific in actual effect however they are in general used to select special modes of operation an example of this is to enable slip compression or to select the connector type for some ethernet cards refer to the man page for the specific driver for more information -link disable special processing at the link level with the specified interface up mark an interface up this may be used to enable an interface after an ifconfig down it happens automatically when setting the first address on an interface if the interface was reset when previously marked down the hardware will be re-initialized the following parameters are for icmpv6 neighbor discovery protocol note that the address family keyword inet6 is needed for them nud perform network unreachability detection nud -nud do not perform network unreachability detection nud ifdisabled disable all ipv6 communication on the interface -ifdisabled do not disable all ipv6 communication on the interface insecure disable the processing of secure neighbor discovery send -insecure do not disabled the processing of secure neighbor discovery send dad perform duplicate address detection dad -dad do not perform duplicate address detection dad replicated modify duplicate address detection dad protocol to expect that interface configuration is replicated at a network sleep proxy ignores certain na messages and disables optimistic dad -replicated do not use modified duplicated address detection dad protocol the following parameters are specific to link aggregate interfaces bonddev iface if the interface is a bond pseudo device associate physical interface iface with it by default the bond pseudo device is in lacp link aggregation control protocol mode see bondmode below in this mode the device conforms to the ieee 802 3ad link aggregation specification if this is the first physical interface to be associated with the bond interface the bond interface inherits the ethernet address from the physical interface physical interfaces that are added to the bond have their ethernet address re-programmed so that all members of the bond have the same ethernet address if the physical interface is subsequently removed from the bond using -bonddev interfaces and all interfaces are re-programmed again with the new ethernet address if no remaining interfaces exist the bond interface s ethernet address is cleared if the specified physical interface iface is not capable of having its ethernet address re-programmed the bonddev command will fail once the physical interface iface is successfully associated with the bond interface all received packets are diverted to the bond interface the physical interface is no longer useable on its own and remains that way until it is removed from the bond using it is possible that the specified interface iface is not capable of aggregating and may remain unused until the operating conditions change the link status of the bond interface depends on the state of link aggregation if no active partner is detected the link status will remain inactive to monitor the 802 3ad link aggregation state use the -b option a physical interface that is associated with a vlan pseudo device cannot at the same time be associated with a bond pseudo device a physical interface cannot be associated with more than one bond pseudo device at the same time it is not possible to associate a bond with pseudo interfaces such as vlan only physical ethernet interfaces may be associated with a bond if the interface is a bond pseudo device disassociate the physical interface iface from it before the interface is removed from the bond the bond device announces to the link partner that the interface is now individual and no longer aggregatable if the physical iface is the last interface in the bond the bond interface clears its link address bondmode lacp static if the interface is a bond pseudo device this option will set the mode on the bond interface the two currently supported modes are lacp and static the default mode is lacp to enable static mode and turn off lacp specify static in static mode a member interface is made an active part of the link aggregate as long as the link status is active to re-enable lacp mode specify lacp the following parameters are specific to ip tunnel interfaces gif 4 tunnel src addr dest addr configure the physical source and destination address for ip tunnel interfaces the arguments src addr and dest addr are interpreted as the outer source destination for the encapsulating ipv4 ipv6 header -bonddev interfaces and all interfaces are re-programmed again with the new ethernet address if no remaining interfaces exist the bond interface s ethernet address is cleared if the specified physical interface iface is not capable of having its ethernet address re-programmed the bonddev command will fail once the physical interface iface is successfully associated with the bond interface all received packets are diverted to the bond interface the physical interface is no longer useable on its own and remains that way until it is removed from the bond using it is possible that the specified interface iface is not capable of aggregating and may remain unused until the operating conditions change the link status of the bond interface depends on the state of link aggregation if no active partner is detected the link status will remain inactive to monitor the 802 3ad link aggregation state use the -b option a physical interface that is associated with a vlan pseudo device cannot at the same time be associated with a bond pseudo device a physical interface cannot be associated with more than one bond pseudo device at the same time it is not possible to associate a bond with pseudo interfaces such as vlan only physical ethernet interfaces may be associated with a bond if the interface is a bond pseudo device disassociate the physical interface iface from it before the interface is removed from the bond the bond device announces to the link partner that the interface is now individual and no longer aggregatable if the physical iface is the last interface in the bond the bond interface clears its link address bondmode lacp static if the interface is a bond pseudo device this option will set the mode on the bond interface the two currently supported modes are lacp and static the default mode is lacp to enable static mode and turn off lacp specify static in static mode a member interface is made an active part of the link aggregate as long as the link status is active to re-enable lacp mode specify lacp the following parameters are specific to ip tunnel interfaces gif 4 tunnel src addr dest addr configure the physical source and destination address for ip tunnel interfaces the arguments src addr and dest addr are interpreted as the outer source destination for the encapsulating ipv4 ipv6 header -bonddev interfaces and all interfaces are re-programmed again with the new ethernet address if no remaining interfaces exist the bond interface s ethernet address is cleared if the specified physical interface iface is not capable of having its ethernet address re-programmed the bonddev command will fail once the physical interface iface is successfully associated with the bond interface all received packets are diverted to the bond interface the physical interface is no longer useable on its own and remains that way until it is removed from the bond using it is possible that the specified interface iface is not capable of aggregating and may remain unused until the operating conditions change the link status of the bond interface depends on the state of link aggregation if no active partner is detected the link status will remain inactive to monitor the 802 3ad link aggregation state use the -b option a physical interface that is associated with a vlan pseudo device cannot at the same time be associated with a bond pseudo device a physical interface cannot be associated with more than one bond pseudo device at the same time it is not possible to associate a bond with pseudo interfaces such as vlan only physical ethernet interfaces may be associated with a bond if the interface is a bond pseudo device disassociate the physical interface iface from it before the interface is removed from the bond the bond device announces to the link partner that the interface is now individual and no longer aggregatable if the physical iface is the last interface in the bond the bond interface clears its link address bondmode lacp static if the interface is a bond pseudo device this option will set the mode on the bond interface the two currently supported modes are lacp and static the default mode is lacp to enable static mode and turn off lacp specify static in static mode a member interface is made an active part of the link aggregate as long as the link status is active to re-enable lacp mode specify lacp the following parameters are specific to ip tunnel interfaces gif 4 tunnel src addr dest addr configure the physical source and destination address for ip tunnel interfaces the arguments src addr and dest addr are interpreted as the outer source destination for the encapsulating ipv4 ipv6 header -tunnel unconfigure the physical source and destination address for ip tunnel interfaces previously configured with tunnel deletetunnel another name for the -tunnel parameter the following parameters are specific to bridge interfaces addm interface add the interface named by interface as a member of the bridge the interface is put into promiscuous mode so that it can receive every packet sent on the network deletem interface remove the interface named by interface from the bridge promiscuous mode is disabled on the interface when it is removed from the bridge maxaddr size set the size of the bridge address cache to size the default is 100 entries timeout seconds set the timeout of address cache entries to seconds seconds if seconds is zero then address cache entries will not be expired the default is 240 seconds addr display the addresses that have been learned by the bridge static interface-name address add a static entry into the address cache pointing to interface-name static entries are never aged out of the cache or re-placed even if the address is seen on a different interface deladdr address delete address from the address cache flush delete all dynamically-learned addresses from the address cache flushall delete all addresses including static addresses from the address cache discover interface mark an interface as a discovering interface when the bridge has no address cache entry either dynamic or static for the destination address of a packet the bridge will forward the packet to all member interfaces marked as discovering this is the default for all interfaces added to a bridge -discover interface clear the discovering attribute on a member interface for packets without the discovering attribute the only packets forwarded on the interface are broadcast or multicast packets and packets for which the destination address is known to be on the interface s segment learn interface mark an interface as a learning interface when a packet arrives on such an interface the source address of the packet is entered into the address cache as being a destination address on the interface s segment this is the default for all interfaces added to a bridge -learn interface clear the learning attribute on a member interface stp interface enable spanning tree protocol on interface the if bridge 4 driver has support for the ieee 802 1d spanning tree protocol stp spanning tree is used to detect and remove loops in a network topology -stp interface disable spanning tree protocol on interface this is the default for all interfaces added to a bridge maxage seconds set the time that a spanning tree protocol configuration is valid the default is 20 seconds the minimum is 6 seconds and the maximum is 40 seconds fwddelay seconds set the time that must pass before an interface begins forwarding packets when spanning tree is enabled the default is 15 seconds the minimum is 4 seconds and the maximum is 30 seconds hellotime seconds set the time between broadcasting of spanning tree protocol configuration messages the hello time may only be changed when operating in legacy stp mode the default is 2 seconds the minimum is 1 second and the maximum is 2 seconds priority value set the bridge priority for spanning tree the default is 32768 the minimum is 0 and the maximum is 61440 ifpriority interface value set the spanning tree priority of interface to value the default is 128 the minimum is 0 and the maximum is 240 ifpathcost interface value set the spanning tree path cost of interface to value the default is calculated from the link speed to change a previously selected path cost back to automatic set the cost to 0 the minimum is 1 and the maximum is 200000000 ifmaxaddr interface size set the maximum number of hosts allowed from an interface packets with unknown source addresses are dropped until an existing host cache entry expires or is removed set to 0 to disable hostfilter interface address configure the bridge to accept incoming packet on the interface only if they match the given mac address and ip address -- use the command twice to set both type of addresses other filtering restrictions apply -hostfilter interface allow traffic from any host on that interface the following parameters are specific to vlan interfaces vlan vlan tag set the vlan tag value to vlan tag this value is a 16-bit number which is used to create an 802 1q vlan header for packets sent from the vlan 4 interface note that vlan and vlandev must both be set at the same time vlandev iface associate the physical interface iface with a vlan 4 interface packets transmitted through the vlan 4 interface will be diverted to the specified physical interface iface with 802 1q vlan encapsulation packets with 802 1q encapsulation received by the parent interface with the correct vlan tag will be diverted to the associated vlan 4 pseudo-interface the vlan 4 interface is assigned a copy of the parent interface s flags and the parent s ethernet address the vlandev and vlan must both be set at the same time if the vlan 4 interface already has a physical interface associated with it this command will fail to change the association to another physical interface the existing association must be cleared first note if the hardware tagging capability is set on the parent interface the vlan 4 pseudo interface s behavior changes the vlan 4 interface recognizes that the parent interface supports insertion and extraction of vlan tags on its own usually in firmware and that it should pass packets to and from the parent unaltered -vlandev if the driver is a vlan 4 pseudo device disassociate the parent interface from it this breaks the link between the vlan 4 interface and its parent clears its vlan tag flags and its link address and shuts the interface down the iface argument is useless and hence deprecated tbr rate set a token bucket regulator that limits the egress bandwidth to rate measured in bps kbps mbps or gbps if the specified rate is zero the token bucket regulator is disabled the ifconfig utility displays the current configuration for a network interface when no optional parameters are supplied if a protocol family is specified ifconfig will report only the details specific to that protocol family if the -m flag is passed before an interface name ifconfig will display the capability list and all of the supported media for the specified interface if -l flag is supplied address lifetime is displayed for ipv6 addresses as time offset string optionally the -a flag may be used instead of an interface name this flag instructs ifconfig to display information about all interfaces in the system the -d flag limits this to interfaces that are down and -u limits this to interfaces that are up when no arguments are given -a is implied the -l flag may be used to list all available interfaces on the system with no other additional information use of this flag is mutually exclusive with all other flags and commands except for -d only list interfaces that are down and -u only list interfaces that are up the -v flag may be used to get more verbose status for an interface the -c flag may be used to list all of the interface cloners available on the system with no additional information use of this flag is mutually exclusive with all other flags and commands the -r flag may be used to show additional information related to the count of route references on the network interface for bridge interfaces the list of addresses learned by the bridge is not shown when displaying information about all interfaces except when the -v flag is used the -x flag may be used to list interfaces whose names match the regular expression in the pattern see re format 7 for more information on regular expressions this flag may be used with the -a flag and the -l flag to further restrict the set of interfaces to be listed the -f flag may be used to control the output format of ifconfig the format is specified as a comma-separated list of type format pairs see the examples section for more information the -f flag can be supplied multiple times the types and their associated format strings are addr adjust the display of inet and inet6 addresses default default format numeric fqdn fully qualified domain names fqdn host unqualified hostnames numeric numeric format ether adjust the display of link-level ethernet mac addresses colon separate address segments with a colon dash separate address segments with a dash default default format colon inet adjust the display of inet address subnet masks cidr cidr notation for example 203 0 113 224 26 default default format hex dotted dotted quad notation for example 255 255 255 192 hex hexadecimal format for example 0xffffffc0 inet6 adjust the display of inet6 address prefixes subnet masks cidr cidr notation for example 1 128 or fe80 1 lo0 64 default default format numeric numeric integer format for example prefixlen 64 only the super-user may modify the configuration of a network interface name macos 15 5 june 20 2008 macos 15 5",
  "keywords": [
    "ifconfig",
    "manual",
    "page",
    "utility",
    "used",
    "assign",
    "address",
    "network",
    "interface",
    "and/or",
    "configure",
    "parameters."
  ],
  "complexity": "advanced",
  "hash": "71647507efab6d8e",
  "parsedAt": "2025-06-17T19:32:10.574Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": false,
  "hasDiagrams": false
}