{
  "name": "fmt",
  "section": 1,
  "title": "fmt manual page",
  "description": " manual page",
  "synopsis": "fmt [-cmnps] [-d chars] [-l num] [-t num] [goal [maximum] | -width | -w width] [file ...]",
  "category": "User Commands",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "[goal [maximum] | -width | -w width] [file ...]",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     fmt – simple text formatter\n",
        "     fmt [-cmnps] [-d chars] [-l num] [-t num]"
      ]
    },
    {
      "id": "description",
      "title": "DESCRIPTION",
      "content": "macOS 15.5\t\t       October 29, 2020 \t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     The fmt utility is a simple text formatter which reads the concatenation\n     of input files (or standard input if none are given) and produces on\n     standard output a version of its input with lines as close to the goal\n     length as possible without exceeding the maximum.\tThe goal length\n     defaults to 65 and the maximum to 10 more than the goal length.\n     Alternatively, a single width parameter can be specified either by\n     prepending a hyphen to it or by using -w.\tFor example, “fmt -w 72”, “fmt\n     -72”, and “fmt 72 72” all produce identical output.  The spacing at the\n     beginning of the input lines is preserved in the output, as are blank\n     lines and interword spacing.  Lines are joined or split only at white\n     space; that is, words are never joined or hyphenated.\n\n     The options are as follows:\n\n     -c      Center the text, line by line.  In this case, most of the other\n\t     options are ignored; no splitting or joining of lines is done.\n\n     -m      Try to format mail header lines contained in the input sensibly.\n\n     -n      Format lines beginning with a ‘.’ (dot) character.\n\n     -p      Allow indented paragraphs.  Without the -p flag, any change in\n\t     the amount of whitespace at the start of a line results in a new\n\t     paragraph being begun.\n\n     -s      Collapse whitespace inside lines, so that multiple whitespace\n\t     characters are turned into a single space.  (Or, at the end of a\n\t     sentence, a double space.)\n\n     -d chars\n\t     Treat the chars (and no others) as sentence-ending characters.\n\t     By default the sentence-ending characters are full stop (‘.’),\n\t     question mark (‘?’) and exclamation mark (‘!’).  Remember that\n\t     some characters may need to be escaped to protect them from your\n\t     shell.\n\n     -l number\n\t     Replace multiple spaces with tabs at the start of each output\n\t     line, if possible.  Each number spaces will be replaced with one\n\t     tab.  The default is 8.  If number is 0, spaces are preserved.\n\n     -t number\n\t     Assume that the input files' tabs assume number spaces per tab\n\t     stop.  The default is 8.\n\n     The fmt utility is meant to format mail messages prior to sending, but\n     may also be useful for other simple tasks.  For instance, within visual\n     mode of the ex(1) editor (e.g., vi(1)) the command\n\n\t   !}fmt\n\n     will reformat a paragraph, evening the lines.\n",
        "     The LANG, LC_ALL and LC_CTYPE environment variables affect the execution\n     of fmt as described in environ(7).\n",
        "     Center the text in standard input:\n\n\t   $ echo -e 'The merit of all things\\nlies\\nin their difficulty' | fmt -c\n\t\t\t\tThe merit of all things\n\t\t\t\t\t  lies\n\t\t\t\t  in their difficulty\n\n     Format the text in standard input collapsing spaces:\n\n\t   $ echo -e 'Multiple\t spaces    will be collapsed' | fmt -s\n\t   Multiple spaces will be collapsed\n",
        "     fold(1), mail(1)\n",
        "     The fmt command appeared in 3BSD.\n\n     The version described herein is a complete rewrite and appeared in\n     FreeBSD 4.4.\n",
        "     Kurt Shoens\n     Liz Allen (added goal length concept)\n     Gareth McCaughan\n",
        "     The program was designed to be simple and fast - for more complex\n     operations, the standard text processors are likely to be more\n     appropriate.\n\n     When the first line of an indented paragraph is very long (more than\n     about twice the goal length), the indentation in the output can be wrong.\n\n     The fmt utility is not infallible in guessing what lines are mail headers\n     and what lines are not.\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-c",
      "description": "Center the text, line by line.  In this case, most of the other options are ignored; no splitting or joining of lines is done."
    },
    {
      "flag": "-m",
      "description": "Try to format mail header lines contained in the input sensibly."
    },
    {
      "flag": "-n",
      "description": "Format lines beginning with a ‘.’ (dot) character."
    },
    {
      "flag": "-p",
      "description": "Allow indented paragraphs.  Without the -p flag, any change in the amount of whitespace at the start of a line results in a new paragraph being begun."
    },
    {
      "flag": "-s",
      "description": "Collapse whitespace inside lines, so that multiple whitespace characters are turned into a single space.  (Or, at the end of a sentence, a double space.)"
    },
    {
      "flag": "-d",
      "description": " Treat the chars (and no others) as sentence-ending characters. By default the sentence-ending characters are full stop (‘.’), question mark (‘?’) and exclamation mark (‘!’).  Remember that some characters may need to be escaped to protect them from your shell.",
      "optional": true
    },
    {
      "flag": "-l",
      "description": " Replace multiple spaces with tabs at the start of each output line, if possible.  Each number spaces will be replaced with one tab.  The default is 8.  If number is 0, spaces are preserved.",
      "optional": true
    },
    {
      "flag": "-t",
      "description": " Assume that the input files' tabs assume number spaces per tab stop.  The default is 8. The fmt utility is meant to format mail messages prior to sending, but may also be useful for other simple tasks.  For instance, within visual mode of the ex(1) editor (e.g., vi(1)) the command !}fmt will reformat a paragraph, evening the lines.",
      "optional": true
    }
  ],
  "examples": [
    {
      "command": "echo -e 'The merit of all things\\nlies\\nin their difficulty' | fmt -c",
      "description": "The merit of all things",
      "tags": [
        "pipe"
      ],
      "output": "\t\t\t\tThe merit of all things\n\t\t\t\t\t  lies\n\t\t\t\t  in their difficulty\n     Format the text in standard input collapsing spaces:\n"
    },
    {
      "command": "echo -e 'Multiple\t spaces    will be collapsed' | fmt -s",
      "description": "Multiple spaces will be collapsed",
      "tags": [
        "pipe"
      ],
      "output": "\t   Multiple spaces will be collapsed\nSEE ALSO\n     fold(1), mail(1)\n"
    }
  ],
  "relatedCommands": [
    "fold",
    "mail",
    "fmt",
    "simple",
    "text",
    "formatter",
    "cmnps",
    "chars",
    "num",
    "goal",
    "maximum",
    "width",
    "utility",
    "which",
    "reads"
  ],
  "seeAlso": [
    {
      "name": "fold",
      "section": 1
    },
    {
      "name": "mail",
      "section": 1
    }
  ],
  "metadata": {},
  "searchContent": "fmt fmt manual page manual page fmt -cmnps -d chars -l num -t num goal maximum -width -w width file fmt manual page -c center the text line by line in this case most of the other options are ignored no splitting or joining of lines is done -m try to format mail header lines contained in the input sensibly -n format lines beginning with a dot character -p allow indented paragraphs without the -p flag any change in the amount of whitespace at the start of a line results in a new paragraph being begun -s collapse whitespace inside lines so that multiple whitespace characters are turned into a single space or at the end of a sentence a double space -d treat the chars and no others as sentence-ending characters by default the sentence-ending characters are full stop question mark and exclamation mark remember that some characters may need to be escaped to protect them from your shell -l replace multiple spaces with tabs at the start of each output line if possible each number spaces will be replaced with one tab the default is 8 if number is 0 spaces are preserved -t assume that the input files tabs assume number spaces per tab stop the default is 8 the fmt utility is meant to format mail messages prior to sending but may also be useful for other simple tasks for instance within visual mode of the ex 1 editor e g vi 1 the command fmt will reformat a paragraph evening the lines echo -e the merit of all things nlies nin their difficulty fmt -c the merit of all things echo -e multiple spaces will be collapsed fmt -s multiple spaces will be collapsed name goal maximum -width -w width file description macos 15 5 october 29 2020 macos 15 5",
  "keywords": [
    "fmt",
    "manual",
    "page"
  ],
  "complexity": "intermediate",
  "hash": "c960f9cfa9e030ce",
  "parsedAt": "2025-06-17T19:32:29.035Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": true,
  "hasDiagrams": false
}