{
  "name": "uname",
  "section": 1,
  "title": "uname manual page",
  "description": "The uname command writes the name of the operating system implementation to standard output.",
  "synopsis": "uname [-amnoprsv]",
  "category": "User Commands",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "macOS 15.5\t\t       November 13, 2020\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     uname – display information about the system\n",
        "     uname [-amnoprsv]\n",
        "     The uname command writes the name of the operating system implementation\n     to standard output.  When options are specified, strings representing one\n     or more system characteristics are written to standard output.\n\n     The options are as follows:\n\n     -a      Behave as though the options -m, -n, -r, -s, and -v were\n\t     specified.\n\n     -m      Write the type of the current hardware platform to standard\n\t     output.  (make(1) uses it to set the MACHINE variable.)\n\n     -n      Write the name of the system to standard output.\n\n     -o      This is a synonym for the -s option, for compatibility with other\n\t     systems.\n\n     -p      Write the type of the machine processor architecture to standard\n\t     output.  (make(1) uses it to set the MACHINE_ARCH variable.)\n\n     -r      Write the current release level of the operating system to\n\t     standard output.\n\n     -s      Write the name of the operating system implementation to standard\n\t     output.\n\n     -v      Write the version level of this release of the operating system\n\t     to standard output.\n\n     If the -a flag is specified, or multiple flags are specified, all output\n     is written on a single line, separated by spaces.\n",
        "     An environment variable composed of the string UNAME_ followed by any\n     flag to the uname utility (except for -a) will allow the corresponding\n     data to be set to the contents of the environment variable.\n\n     The -m, -n, -r, -s, and -v variables additionally have long aliases that\n     have historically been honored on MacOS, “UNAME_MACHINE”,\n     “UNAME_NODENAME”, “UNAME_RELEASE”, “UNAME_SYSNAME”, and “UNAME_VERSION”\n     respectively.  These names have a higher priority than their shorter\n     counterparts described in the previous paragraph.\n\n     See uname(3) for more information.\n",
        "     The uname utility exits 0 on success, and >0 if an error occurs.\n",
        "     The hardware platform (-m) can be different from the machine's processor\n     architecture (-p), e.g., on 64-bit PowerPC, -m would return powerpc and\n     -p would return powerpc64.\n",
        "     hostname(1), machine(1), sw_vers(1), sysctl(3), uname(3), sysctl(8)\n",
        "     The uname command is expected to conform to the IEEE Std 1003.2\n     (“POSIX.2”) specification.\n",
        "     The uname command appeared in PWB UNIX 1.0, however 4.4BSD was the first\n     Berkeley release with the uname command.\n\n     The -K and -U extension flags appeared in FreeBSD 10.0.  The -b extension\n     flag appeared in FreeBSD 13.0.\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-a",
      "description": "Behave as though the options -m, -n, -r, -s, and -v were specified."
    },
    {
      "flag": "-m",
      "description": "Write the type of the current hardware platform to standard output.  (make(1) uses it to set the MACHINE variable.)"
    },
    {
      "flag": "-n",
      "description": "Write the name of the system to standard output."
    },
    {
      "flag": "-o",
      "description": "This is a synonym for the -s option, for compatibility with other systems."
    },
    {
      "flag": "-p",
      "description": "Write the type of the machine processor architecture to standard output.  (make(1) uses it to set the MACHINE_ARCH variable.)"
    },
    {
      "flag": "-r",
      "description": "Write the current release level of the operating system to standard output."
    },
    {
      "flag": "-s",
      "description": "Write the name of the operating system implementation to standard output."
    },
    {
      "flag": "-v",
      "description": "Write the version level of this release of the operating system to standard output. If the -a flag is specified, or multiple flags are specified, all output is written on a single line, separated by spaces."
    }
  ],
  "examples": [],
  "relatedCommands": [
    "hostname",
    "machine",
    "sw_vers",
    "sysctl",
    "uname",
    "display",
    "information",
    "about",
    "amnoprsv",
    "command",
    "writes",
    "name",
    "operating",
    "implementation",
    "standard"
  ],
  "seeAlso": [
    {
      "name": "hostname",
      "section": 1
    },
    {
      "name": "machine",
      "section": 1
    },
    {
      "name": "sw_vers",
      "section": 1
    },
    {
      "name": "sysctl",
      "section": 3
    },
    {
      "name": "uname",
      "section": 3
    },
    {
      "name": "sysctl",
      "section": 8
    }
  ],
  "metadata": {},
  "searchContent": "uname uname manual page the uname command writes the name of the operating system implementation to standard output uname -amnoprsv uname manual page command writes name operating implementation standard output -a behave as though the options -m -n -r -s and -v were specified -m write the type of the current hardware platform to standard output make 1 uses it to set the machine variable -n write the name of the system to standard output -o this is a synonym for the -s option for compatibility with other systems -p write the type of the machine processor architecture to standard output make 1 uses it to set the machine arch variable -r write the current release level of the operating system to standard output -s write the name of the operating system implementation to standard output -v write the version level of this release of the operating system to standard output if the -a flag is specified or multiple flags are specified all output is written on a single line separated by spaces name macos 15 5 november 13 2020 macos 15 5",
  "keywords": [
    "uname",
    "manual",
    "page",
    "command",
    "writes",
    "name",
    "operating",
    "implementation",
    "standard",
    "output."
  ],
  "complexity": "intermediate",
  "hash": "16e4263c6a3b261a",
  "parsedAt": "2025-06-17T19:41:55.367Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": false,
  "hasDiagrams": false
}