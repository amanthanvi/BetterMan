{
  "name": "mv",
  "section": 1,
  "title": "mv manual page",
  "description": "In its first form, the mv utility renames the file named by the source operand to the destination path named by the target operand.",
  "synopsis": "mv [-f | -i | -n] [-hv] source target mv [-f | -i | -n] [-v] source ... directory",
  "category": "User Commands",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "macOS 15.5\t\t\tMarch 15, 2013\t\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     mv – move files\n",
        "     mv [-f | -i | -n] [-hv] source target\n     mv [-f | -i | -n] [-v] source ... directory\n",
        "     In its first form, the mv utility renames the file named by the source\n     operand to the destination path named by the target operand.  This form\n     is assumed when the last operand does not name an already existing\n     directory.\n\n     In its second form, mv moves each file named by a source operand to a\n     destination file in the existing directory named by the directory\n     operand.  The destination path for each operand is the pathname produced\n     by the concatenation of the last operand, a slash, and the final pathname\n     component of the named file.\n\n     The following options are available:\n\n     -f      Do not prompt for confirmation before overwriting the destination\n\t     path.  (The -f option overrides any previous -i or -n options.)\n\n     -h      If the target operand is a symbolic link to a directory, do not\n\t     follow it.  This causes the mv utility to rename the file source\n\t     to the destination path target rather than moving source into the\n\t     directory referenced by target.\n\n     -i      Cause mv to write a prompt to standard error before moving a file\n\t     that would overwrite an existing file.  If the response from the\n\t     standard input begins with the character ‘y’ or ‘Y’, the move is\n\t     attempted.  (The -i option overrides any previous -f or -n\n\t     options.)\n\n     -n      Do not overwrite an existing file.  (The -n option overrides any\n\t     previous -f or -i options.)\n\n     -v      Cause mv to be verbose, showing files after they are moved.\n\n     It is an error for the source operand to specify a directory if the\n     target exists and is not a directory.\n\n     If the destination path does not have a mode which permits writing, mv\n     prompts the user for confirmation as specified for the -i option.\n\n     As the rename(2) call does not work across file systems, mv uses cp(1)\n     and rm(1) to accomplish the move.\tThe effect is equivalent to:\n\n\t   rm -f destination_path && \\\n\t   cp -pRP source_file destination && \\\n\t   rm -rf source_file\n",
        "     The mv utility exits 0 on success, and >0 if an error occurs.\n\n     The command \"mv dir/afile dir\" will abort with an error message.\n",
        "     In legacy mode, the command \"mv dir/afile dir\" will fail silently,\n     returning an exit code of 0.\n\n     For more information about legacy mode, see compat(5).\n",
        "     Rename file foo to bar, overwriting bar if it already exists:\n\n\t   $ mv -f foo bar\n",
        "     The -h, -n, and -v options are non-standard and their use in scripts is\n     not recommended.\n\n     The mv utility now supports HFS+ Finder and Extended Attributes and\n     resource forks.  The mv utility will no longer strip resource forks off\n     of HFS files.  For an alternative method, refer to cp(1).\n",
        "     cp(1), rm(1), symlink(7)\n",
        "     The mv utility is expected to be IEEE Std 1003.2 (“POSIX.2”) compatible.\n",
        "     A mv command appeared in Version 1 AT&T UNIX.\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-f",
      "description": " path.  (The -f option overrides any previous -i or -n options.)",
      "optional": true
    },
    {
      "flag": "-h",
      "description": "If the target operand is a symbolic link to a directory, do not follow it.  This causes the mv utility to rename the file source to the destination path target rather than moving source into the directory referenced by target."
    },
    {
      "flag": "-i",
      "description": " that would overwrite an existing file.  If the response from the standard input begins with the character ‘y’ or ‘Y’, the move is attempted.  (The -i option overrides any previous -f or -n options.)",
      "optional": false
    },
    {
      "flag": "-n",
      "description": " previous -f or -i options.)",
      "optional": false
    },
    {
      "flag": "-v",
      "description": " It is an error for the source operand to specify a directory if the target exists and is not a directory. If the destination path does not have a mode which permits writing, mv prompts the user for confirmation as specified for the -i option. As the rename(2) call does not work across file systems, mv uses cp(1) and rm(1) to accomplish the move.\tThe effect is equivalent to: rm -f destination_path && \\ cp -pRP source_file destination && \\ rm -rf source_file EXIT STATUS The mv utility exits 0 on success, and >0 if an error occurs. The command \"mv dir/afile dir\" will abort with an error message. LEGACY DIAGNOSTICS In legacy mode, the command \"mv dir/afile dir\" will fail silently, returning an exit code of 0. For more information about legacy mode, see compat(5).",
      "optional": true
    }
  ],
  "examples": [
    {
      "command": "mv -f foo bar",
      "description": "",
      "tags": []
    }
  ],
  "relatedCommands": [
    "cp",
    "rm",
    "symlink",
    "move",
    "source",
    "target",
    "directory",
    "its",
    "first",
    "form",
    "utility",
    "renames",
    "named",
    "operand",
    "destination"
  ],
  "seeAlso": [
    {
      "name": "cp",
      "section": 1
    },
    {
      "name": "rm",
      "section": 1
    },
    {
      "name": "symlink",
      "section": 7
    }
  ],
  "metadata": {},
  "searchContent": "mv mv manual page in its first form the mv utility renames the file named by the source operand to the destination path named by the target operand mv -f -i -n -hv source target mv -f -i -n -v source directory mv manual page first form utility renames named source operand destination path target operand -f path the -f option overrides any previous -i or -n options -h if the target operand is a symbolic link to a directory do not follow it this causes the mv utility to rename the file source to the destination path target rather than moving source into the directory referenced by target -i that would overwrite an existing file if the response from the standard input begins with the character y or y the move is attempted the -i option overrides any previous -f or -n options -n previous -f or -i options -v it is an error for the source operand to specify a directory if the target exists and is not a directory if the destination path does not have a mode which permits writing mv prompts the user for confirmation as specified for the -i option as the rename 2 call does not work across file systems mv uses cp 1 and rm 1 to accomplish the move the effect is equivalent to rm -f destination path cp -prp source file destination rm -rf source file exit status the mv utility exits 0 on success and 0 if an error occurs the command mv dir afile dir will abort with an error message legacy diagnostics in legacy mode the command mv dir afile dir will fail silently returning an exit code of 0 for more information about legacy mode see compat 5 mv -f foo bar name macos 15 5 march 15 2013 macos 15 5",
  "keywords": [
    "mv",
    "manual",
    "page",
    "first",
    "form,",
    "utility",
    "renames",
    "named",
    "source",
    "operand",
    "destination",
    "path",
    "target",
    "operand."
  ],
  "complexity": "basic",
  "hash": "6506d486da82e228",
  "parsedAt": "2025-06-17T19:41:52.826Z",
  "parseVersion": "2.0.0",
  "isCommon": true,
  "hasInteractiveExamples": false,
  "hasDiagrams": false
}