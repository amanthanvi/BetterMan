{
  "name": "killall",
  "section": 1,
  "title": "killall manual page",
  "description": "The killall utility kills processes selected by name, as opposed to the selection by PID as done by kill(1).",
  "synopsis": "killall [-delmsvqz] [-help] [-I] [-u user] [-t tty] [-c procname] [-SIGNAL] [procname ...]",
  "category": "User Commands",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "except to print a few error messages if there are\n\t\t\tzombie processes that match the specified pattern.",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     killall – kill processes by name\n",
        "     killall [-delmsvqz] [-help] [-I] [-u user] [-t tty] [-c procname]\n\t     [-SIGNAL] [procname ...]\n",
        "     The killall utility kills processes selected by name, as opposed to the\n     selection by PID as done by kill(1).  By default, it will send a TERM\n     signal to all processes with a real UID identical to the caller of\n     killall that match the name procname.  The super-user is allowed to kill\n     any process.\n\n     The options are as follows:\n\n     -d \t\tBe more verbose about what will be done, but do not",
        "     -e \t\tUse the effective user ID instead of the (default)",
        "     -help\t\tGive a help on the command usage and exit.\n\n     -I \t\tRequest confirmation before attempting to signal each",
        "     -l \t\tList the names of the available signals and exit, like",
        "     -m \t\tMatch the argument procname as a (case sensitive)",
        "     -v \t\tBe verbose about what will be done.\n\n     -s \t\tSame as -v, but do not send any signal.\n\n     -SIGNAL\t\tSend a different signal instead of the default TERM.",
        "     -u user\t\tLimit potentially matching processes to those",
        "     -t tty\t\tLimit potentially matching processes to those running",
        "     -c procname\tLimit potentially matching processes to those matching",
        "     -q \t\tSuppress error message if no processes are matched.\n\n     -z \t\tDo not skip zombies.  This should not have any effect"
      ]
    },
    {
      "id": "all-processes",
      "title": "ALL PROCESSES",
      "content": "macOS 15.5\t\t\t June 27, 2020\t\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     Sending a signal to all processes with the given UID is already supported\n     by kill(1).  So use kill(1) for this job (e.g. “kill -TERM -1” or as root\n     “echo kill -TERM -1 | su -m <user>”).\n",
        "     This FreeBSD implementation of killall has completely different semantics\n     as compared to the traditional UNIX System V behavior of killall.\tThe\n     latter will kill all processes that the current user is able to kill, and\n     is intended to be used by the system shutdown process only.\n",
        "     The killall utility exits 0 if some processes have been found and\n     signalled successfully.  Otherwise, a status of 1 will be returned.\n",
        "     Send SIGTERM to all firefox processes:\n\n\t   killall firefox\n\n     Send SIGTERM to firefox processes belonging to USER:\n\n\t   killall -u ${USER} firefox\n\n     Stop all firefox processes:\n\n\t   killall -SIGSTOP firefox\n\n     Resume firefox processes:\n\n\t   killall -SIGCONT firefox\n\n     Show what would be done to firefox processes, but do not actually signal\n     them:\n\n\t   killall -s firefox\n\n     Send SIGTERM to all processes matching provided pattern (like vim and\n     vimdiff):\n\n\t   killall -m 'vim*'\n",
        "     Diagnostic messages will only be printed if the -d flag is used.\n",
        "     kill(1), pkill(1), sysctl(3)\n",
        "     The killall command appeared in FreeBSD 2.1.  It has been modeled after\n     the killall command as available on other platforms.\n",
        "     The killall program was originally written in Perl and was contributed by\n     Wolfram Schneider, this manual page has been written by Jörg Wunsch.  The\n     current version of killall was rewritten in C by Peter Wemm using\n     sysctl(3).\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-d",
      "description": "Be more verbose about what will be done, but do not send any signal.  The total number of user processes and the real user ID is shown.\tA list of the processes that will be sent the signal will be printed, or a message indicating that no matching processes have been found."
    },
    {
      "flag": "-e",
      "description": "Use the effective user ID instead of the (default) real user ID for matching processes specified with the"
    },
    {
      "flag": "-u",
      "description": " belonging to the specified user.",
      "optional": true
    },
    {
      "flag": "-help",
      "description": "",
      "optional": true
    },
    {
      "flag": "-I",
      "description": " process.",
      "optional": true
    },
    {
      "flag": "-l",
      "description": "List the names of the available signals and exit, like in kill(1)."
    },
    {
      "flag": "-m",
      "description": "Match the argument procname as a (case sensitive) regular expression against the names of processes found.\tCAUTION!  This is dangerous, a single dot will match any process running under the real UID of the caller."
    },
    {
      "flag": "-v",
      "description": "Be verbose about what will be done."
    },
    {
      "flag": "-s",
      "description": "Same as -v, but do not send any signal."
    },
    {
      "flag": "-SIGNAL",
      "description": " The signal may be specified either as a name (with or without a leading “SIG”), or numerically.",
      "optional": true
    },
    {
      "flag": "-u",
      "description": " belonging to the specified user.",
      "optional": true
    },
    {
      "flag": "-t",
      "description": " on the specified tty.",
      "optional": true
    },
    {
      "flag": "-c",
      "description": " the specified procname.",
      "optional": true
    },
    {
      "flag": "-q",
      "description": "Suppress error message if no processes are matched."
    },
    {
      "flag": "-z",
      "description": "Do not skip zombies.  This should not have any effect except to print a few error messages if there are zombie processes that match the specified pattern. ALL PROCESSES Sending a signal to all processes with the given UID is already supported by kill(1).  So use kill(1) for this job (e.g. “kill -TERM -1” or as root “echo kill -TERM -1 | su -m <user>”). IMPLEMENTATION NOTES This FreeBSD implementation of killall has completely different semantics as compared to the traditional UNIX System V behavior of killall.\tThe latter will kill all processes that the current user is able to kill, and is intended to be used by the system shutdown process only. EXIT STATUS The killall utility exits 0 if some processes have been found and signalled successfully.  Otherwise, a status of 1 will be returned."
    }
  ],
  "examples": [],
  "relatedCommands": [
    "kill",
    "pkill",
    "sysctl",
    "killall",
    "processes",
    "name",
    "delmsvqz",
    "help",
    "tty",
    "procname",
    "utility",
    "kills",
    "selected",
    "opposed",
    "selection"
  ],
  "seeAlso": [
    {
      "name": "kill",
      "section": 1
    },
    {
      "name": "pkill",
      "section": 1
    },
    {
      "name": "sysctl",
      "section": 3
    }
  ],
  "metadata": {},
  "searchContent": "killall killall manual page the killall utility kills processes selected by name as opposed to the selection by pid as done by kill 1 killall -delmsvqz -help -i -u user -t tty -c procname -signal procname killall manual page utility kills processes selected name opposed selection done kill 1 -d be more verbose about what will be done but do not send any signal the total number of user processes and the real user id is shown a list of the processes that will be sent the signal will be printed or a message indicating that no matching processes have been found -e use the effective user id instead of the default real user id for matching processes specified with the -u belonging to the specified user -help -i process -l list the names of the available signals and exit like in kill 1 -m match the argument procname as a case sensitive regular expression against the names of processes found caution this is dangerous a single dot will match any process running under the real uid of the caller -v be verbose about what will be done -s same as -v but do not send any signal -signal the signal may be specified either as a name with or without a leading sig or numerically -u belonging to the specified user -t on the specified tty -c the specified procname -q suppress error message if no processes are matched -z do not skip zombies this should not have any effect except to print a few error messages if there are zombie processes that match the specified pattern all processes sending a signal to all processes with the given uid is already supported by kill 1 so use kill 1 for this job e g kill -term -1 or as root echo kill -term -1 su -m user implementation notes this freebsd implementation of killall has completely different semantics as compared to the traditional unix system v behavior of killall the latter will kill all processes that the current user is able to kill and is intended to be used by the system shutdown process only exit status the killall utility exits 0 if some processes have been found and signalled successfully otherwise a status of 1 will be returned name except to print a few error messages if there are zombie processes that match the specified pattern all processes macos 15 5 june 27 2020 macos 15 5",
  "keywords": [
    "killall",
    "manual",
    "page",
    "utility",
    "kills",
    "processes",
    "selected",
    "name,",
    "opposed",
    "selection",
    "done",
    "kill(1)."
  ],
  "complexity": "intermediate",
  "hash": "006bd189172fd9ab",
  "parsedAt": "2025-06-17T19:42:00.682Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": false,
  "hasDiagrams": false
}