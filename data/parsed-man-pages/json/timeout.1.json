{
  "name": "timeout",
  "section": 1,
  "title": "run a command with a time limit",
  "description": "Start COMMAND, and kill it if still running after DURATION.",
  "synopsis": "timeout [OPTION] DURATION COMMAND [ARG]... timeout [OPTION]",
  "category": "User Commands",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "GNU coreutils 9.7\t\t  April 2025\t\t\t    TIMEOUT(1)",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "       timeout - run a command with a time limit\n",
        "       timeout [OPTION] DURATION COMMAND [ARG]...\n       timeout [OPTION]\n",
        "       Start COMMAND, and kill it if still running after DURATION.\n\n       Mandatory arguments to long options are mandatory for short options\n       too.\n\n       -f, --foreground\n\n\t      when not running timeout directly from a shell prompt, allow\n\t      COMMAND to read from the TTY and get TTY signals; in this mode,\n\t      children of COMMAND will not be timed out\n\n       -k, --kill-after=DURATION\n\n\t      also send a KILL signal if COMMAND is still running this long\n\t      after the initial signal was sent\n\n       -p, --preserve-status\n\n\t      exit with the same status as COMMAND, even when the command\n\t      times out\n\n       -s, --signal=SIGNAL\n\n\t      specify the signal to be sent on timeout; SIGNAL may be a name\n\t      like 'HUP' or a number; see 'kill -l' for a list of signals\n\n       -v, --verbose\n\t      diagnose to stderr any signal sent upon timeout\n\n       --help display this help and exit\n\n       --version\n\t      output version information and exit\n\n       DURATION is a floating point number with an optional suffix: 's' for\n       seconds (the default), 'm' for minutes, 'h' for hours or 'd' for days.\n       A duration of 0 disables the associated timeout.\n\n       Upon timeout, send the TERM signal to COMMAND, if no other SIGNAL\n       specified.  The TERM signal kills any process that does not block or\n       catch that signal.  It may be necessary to use the KILL signal, since\n       this signal can't be caught.\n",
        "       124    if COMMAND times out, and --preserve-status is not specified\n\n       125    if the timeout command itself fails\n\n       126    if COMMAND is found but cannot be invoked\n\n       127    if COMMAND cannot be found\n\n       137    if COMMAND (or timeout itself) is sent the KILL (9) signal\n\t      (128+9)\n\n       -      the exit status of COMMAND otherwise\n",
        "       Some platforms don't currently support timeouts beyond the year 2038.\n",
        "       Written by Padraig Brady.\n",
        "       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>\n       Report any translation bugs to <https://translationproject.org/team/>\n",
        "       Copyright Â© 2025 Free Software Foundation, Inc.\tLicense GPLv3+: GNU\n       GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n       This is free software: you are free to change and redistribute it.\n       There is NO WARRANTY, to the extent permitted by law.\n",
        "       kill(1)\n\n       Full documentation <https://www.gnu.org/software/coreutils/timeout>\n       or available locally via: info '(coreutils) timeout invocation'\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-f",
      "description": ", --foreground when not running timeout directly from a shell prompt, allow COMMAND to read from the TTY and get TTY signals; in this mode, children of COMMAND will not be timed out"
    },
    {
      "flag": "-k",
      "description": ", --kill-after=DURATION also send a KILL signal if COMMAND is still running this long after the initial signal was sent"
    },
    {
      "flag": "-p",
      "description": ", --preserve-status exit with the same status as COMMAND, even when the command times out"
    },
    {
      "flag": "-s",
      "description": ", --signal=SIGNAL specify the signal to be sent on timeout; SIGNAL may be a name like 'HUP' or a number; see 'kill -l' for a list of signals"
    },
    {
      "flag": "--help",
      "description": "display this help and exit",
      "shortFlag": "-v"
    },
    {
      "flag": "--version",
      "description": " output version information and exit DURATION is a floating point number with an optional suffix: 's' for seconds (the default), 'm' for minutes, 'h' for hours or 'd' for days. A duration of 0 disables the associated timeout. Upon timeout, send the TERM signal to COMMAND, if no other SIGNAL specified.  The TERM signal kills any process that does not block or catch that signal.  It may be necessary to use the KILL signal, since this signal can't be caught. Exit status: 124    if COMMAND times out, and --preserve-status is not specified 125    if the timeout command itself fails 126    if COMMAND is found but cannot be invoked 127    if COMMAND cannot be found 137    if COMMAND (or timeout itself) is sent the KILL (9) signal (128+9) -      the exit status of COMMAND otherwise"
    }
  ],
  "examples": [],
  "relatedCommands": [
    "kill",
    "TIMEOUT",
    "timeout",
    "run",
    "command",
    "time",
    "limit",
    "still",
    "running",
    "after",
    "arguments",
    "long",
    "options",
    "mandatory",
    "short"
  ],
  "seeAlso": [
    {
      "name": "kill",
      "section": 1
    },
    {
      "name": "TIMEOUT",
      "section": 1
    }
  ],
  "metadata": {},
  "searchContent": "timeout run a command with a time limit start command and kill it if still running after duration timeout option duration command arg timeout option timeout command time limit start command kill still running after duration -f --foreground when not running timeout directly from a shell prompt allow command to read from the tty and get tty signals in this mode children of command will not be timed out -k --kill-after duration also send a kill signal if command is still running this long after the initial signal was sent -p --preserve-status exit with the same status as command even when the command times out -s --signal signal specify the signal to be sent on timeout signal may be a name like hup or a number see kill -l for a list of signals --help display this help and exit --version output version information and exit duration is a floating point number with an optional suffix s for seconds the default m for minutes h for hours or d for days a duration of 0 disables the associated timeout upon timeout send the term signal to command if no other signal specified the term signal kills any process that does not block or catch that signal it may be necessary to use the kill signal since this signal can t be caught exit status 124 if command times out and --preserve-status is not specified 125 if the timeout command itself fails 126 if command is found but cannot be invoked 127 if command cannot be found 137 if command or timeout itself is sent the kill 9 signal 128 9 - the exit status of command otherwise name gnu coreutils 9 7 april 2025 timeout 1",
  "keywords": [
    "timeout",
    "command",
    "time",
    "limit",
    "start",
    "command,",
    "kill",
    "still",
    "running",
    "after",
    "duration."
  ],
  "complexity": "intermediate",
  "hash": "f84a4dcbc766421d",
  "parsedAt": "2025-06-17T19:42:12.628Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": false,
  "hasDiagrams": false
}