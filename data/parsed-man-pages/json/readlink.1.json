{
  "name": "readlink",
  "section": 1,
  "title": "readlink manual page",
  "description": "The stat utility displays information about the file pointed to by file.",
  "synopsis": "stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...] readlink [-fn] [file ...]",
  "category": "User Commands",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "macOS 15.5\t\t\t June 22, 2017\t\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     stat, readlink – display file status\n",
        "     stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...]\n     readlink [-fn] [file ...]\n",
        "     The stat utility displays information about the file pointed to by file.\n     Read, write, or execute permissions of the named file are not required,\n     but all directories listed in the pathname leading to the file must be\n     searchable.  If no argument is given, stat displays information about the\n     file descriptor for standard input.\n\n     When invoked as readlink, only the target of the symbolic link is\n     printed.  If the given argument is not a symbolic link and the -f option\n     is not specified, readlink will print nothing and exit with an error.  If\n     the -f option is specified, the output is canonicalized by following\n     every symlink in every component of the given path recursively.  readlink\n     will resolve both absolute and relative paths, and return the absolute\n     pathname corresponding to file.  In this case, the argument does not need\n     to be a symbolic link.\n\n     The information displayed is obtained by calling lstat(2) with the given\n     argument and evaluating the returned structure.  The default format\n     displays the st_dev, st_ino, st_mode, st_nlink, st_uid, st_gid, st_rdev,\n     st_size, st_atime, st_mtime, st_ctime, st_birthtime, st_blksize,\n     st_blocks, and st_flags fields, in that order.\n\n     The options are as follows:\n\n     -F      As in ls(1), display a slash (‘/’) immediately after each\n\t     pathname that is a directory, an asterisk (‘*’) after each that\n\t     is executable, an at sign (‘@’) after each symbolic link, a\n\t     percent sign (‘%’) after each whiteout, an equal sign (‘=’) after\n\t     each socket, and a vertical bar (‘|’) after each that is a FIFO.\n\t     The use of -F implies -l.\n\n     -L      Use stat(2) instead of lstat(2).  The information reported by\n\t     stat will refer to the target of file, if file is a symbolic\n\t     link, and not to file itself.  If the link is broken or the\n\t     target does not exist, fall back on lstat(2) and report\n\t     information about the link.\n\n     -f format\n\t     Display information using the specified format.  See the Formats\n\t     section for a description of valid formats.\n\n     -l      Display output in ls -lT format.\n\n     -n      Do not force a newline to appear at the end of each piece of\n\t     output.\n\n     -q      Suppress failure messages if calls to stat(2) or lstat(2) fail.\n\t     When run as readlink, error messages are automatically\n\t     suppressed.\n\n     -r      Display raw information.  That is, for all the fields in the stat\n\t     structure, display the raw, numerical value (for example, times\n\t     in seconds since the epoch, etc.).\n\n     -s      Display information in “shell output” format, suitable for\n\t     initializing variables.\n\n     -t timefmt\n\t     Display timestamps using the specified format.  This format is\n\t     passed directly to strftime(3).\n\n     -x      Display information in a more verbose way as known from some\n\t     Linux distributions.\n",
        "     Format strings are similar to printf(3) formats in that they start with\n     %, are then followed by a sequence of formatting characters, and end in a\n     character that selects the field of the struct stat which is to be\n     formatted.  If the % is immediately followed by one of n, t, %, or @,\n     then a newline character, a tab character, a percent character, or the\n     current file number is printed, otherwise the string is examined for the\n     following:\n\n     Any of the following optional flags:\n\n     #\t     Selects an alternate output form for octal and hexadecimal\n\t     output.  Non-zero octal output will have a leading zero, and non-\n\t     zero hexadecimal output will have “0x” prepended to it.\n\n     +\t     Asserts that a sign indicating whether a number is positive or\n\t     negative should always be printed.  Non-negative numbers are not\n\t     usually printed with a sign.\n\n     -\t     Aligns string output to the left of the field, instead of to the\n\t     right.\n\n     0\t     Sets the fill character for left padding to the ‘0’ character,\n\t     instead of a space.\n\n     space   Reserves a space at the front of non-negative signed output\n\t     fields.  A ‘+’ overrides a space if both are used.\n\n     Then the following fields:\n\n     size    An optional decimal digit string specifying the minimum field\n\t     width.\n\n     prec    An optional precision composed of a decimal point ‘.’ and a\n\t     decimal digit string that indicates the maximum string length,\n\t     the number of digits to appear after the decimal point in\n\t     floating point output, or the minimum number of digits to appear\n\t     in numeric output.\n\n     fmt     An optional output format specifier which is one of D, O, U, X,\n\t     F, or S.  These represent signed decimal output, octal output,\n\t     unsigned decimal output, hexadecimal output, floating point\n\t     output, and string output, respectively.  Some output formats do\n\t     not apply to all fields.  Floating point output only applies to\n\t     timespec fields (the a, m, and c fields).\n\n\t     The special output specifier S may be used to indicate that the\n\t     output, if applicable, should be in string format.  May be used\n\t     in combination with:\n\n\t     amc     Display date in strftime(3) format.\n\n\t     dr      Display actual device name.\n\n\t     f\t     Display the flags of file as in ls -lTdo.\n\n\t     gu      Display group or user name.\n\n\t     p\t     Display the mode of file as in ls -lTd.\n\n\t     N\t     Displays the name of file.\n\n\t     T\t     Displays the type of file.\n\n\t     Y\t     Insert a “ -> ” into the output.  Note that the default\n\t\t     output format for Y is a string, but if specified\n\t\t     explicitly, these four characters are prepended.\n\n     sub     An optional sub field specifier (high, middle, low).  Only\n\t     applies to the p, d, r, and T output formats.  It can be one of\n\t     the following:\n\n\t     H\t     “High” — specifies the major number for devices from r or\n\t\t     d, the “user” bits for permissions from the string form\n\t\t     of p, the file “type” bits from the numeric forms of p,\n\t\t     and the long output form of T.\n\n\t     L\t     “Low” — specifies the minor number for devices from r or\n\t\t     d, the “other” bits for permissions from the string form\n\t\t     of p, the “user”, “group”, and “other” bits from the\n\t\t     numeric forms of p, and the ls -F style output character\n\t\t     for file type when used with T (the use of L for this is\n\t\t     optional).\n\n\t     M\t     “Middle” — specifies the “group” bits for permissions\n\t\t     from the string output form of p, or the “suid”, “sgid”,\n\t\t     and “sticky” bits for the numeric forms of p.\n\n     datum   A required field specifier, being one of the following:\n\n\t     d\t     Device upon which file resides (st_dev).\n\n\t     i\t     file's inode number (st_ino).\n\n\t     p\t     File type and permissions (st_mode).\n\n\t     l\t     Number of hard links to file (st_nlink).\n\n\t     u, g    User ID and group ID of file's owner (st_uid, st_gid).\n\n\t     r\t     Device number for character and block device special\n\t\t     files (st_rdev).\n\n\t     a, m, c, B\n\t\t     The time file was last accessed or modified, or when the\n\t\t     inode was last changed, or the birth time of the inode\n\t\t     (st_atime, st_mtime, st_ctime, st_birthtime).\n\n\t     z\t     The size of file in bytes (st_size).\n\n\t     b\t     Number of blocks allocated for file (st_blocks).\n\n\t     k\t     Optimal file system I/O operation block size\n\t\t     (st_blksize).\n\n\t     f\t     User defined flags for file.\n\n\t     v\t     Inode generation number (st_gen).\n\n\t     The following five field specifiers are not drawn directly from\n\t     the data in struct stat, but are:\n\n\t     N\t     The name of the file.\n\n\t     R\t     The absolute pathname corresponding to the file.\n\n\t     T\t     The file type, either as in ls -F or in a more\n\t\t     descriptive form if the sub field specifier H is given.\n\n\t     Y\t     The target of a symbolic link.\n\n\t     Z\t     Expands to “major,minor” from the rdev field for\n\t\t     character or block special devices and gives size output\n\t\t     for all others.\n\n     Only the % and the field specifier are required.  Most field specifiers\n     default to U as an output form, with the exception of p which defaults to\n     O; a, m, and c which default to D; and Y, T, and N which default to S.\n",
        "     The stat and readlink utilities exit 0 on success, and >0 if an error\n     occurs.\n",
        "     If no options are specified, the default format is \"%d %i %Sp %l %Su %Sg\n     %r %z \\\"%Sa\\\" \\\"%Sm\\\" \\\"%Sc\\\" \\\"%SB\\\" %k %b %#Xf %N\".\n\n\t   > stat /tmp/bar\n\t   0 78852 -rw-r--r-- 1 root wheel 0 0 \"Jul  8 10:26:03 2004\" \"Jul  8 10:26:03 2004\" \"Jul  8 10:28:13 2004\" \"Jan  1 09:00:00 1970\" 16384 0 0 /tmp/bar\n\n     Given a symbolic link “foo” that points from /tmp/foo to /, you would use\n     stat as follows:\n\n\t   > stat -F /tmp/foo\n\t   lrwxrwxrwx 1 jschauma cs 1 Apr 24 16:37:28 2002 /tmp/foo@ -> /\n\n\t   > stat -LF /tmp/foo\n\t   drwxr-xr-x 16 root wheel 512 Apr 19 10:57:54 2002 /tmp/foo/\n\n     To initialize some shell variables, you could use the -s flag as follows:\n\n\t   > csh\n\t   % eval set `stat -s .cshrc`\n\t   % echo $st_size $st_mtimespec\n\t   1148 1015432481\n\n\t   > sh\n\t   $ eval $(stat -s .profile)\n\t   $ echo $st_size $st_mtimespec\n\t   1148 1015432481\n\n     In order to get a list of file types including files pointed to if the\n     file is a symbolic link, you could use the following format:\n\n\t   $ stat -f \"%N: %HT%SY\" /tmp/*\n\t   /tmp/bar: Symbolic Link -> /tmp/foo\n\t   /tmp/output25568: Regular File\n\t   /tmp/blah: Directory\n\t   /tmp/foo: Symbolic Link -> /\n\n     In order to get a list of the devices, their types and the major and\n     minor device numbers, formatted with tabs and linebreaks, you could use\n     the following format:\n\n\t   stat -f \"Name: %N%n%tType: %HT%n%tMajor: %Hr%n%tMinor: %Lr%n%n\" /dev/*\n\t   [...]\n\t   Name: /dev/wt8\n\t\t   Type: Block Device\n\t\t   Major: 3\n\t\t   Minor: 8\n\n\t   Name: /dev/zero\n\t\t   Type: Character Device\n\t\t   Major: 2\n\t\t   Minor: 12\n\n     In order to determine the permissions set on a file separately, you could\n     use the following format:\n\n\t   > stat -f \"%Sp -> owner=%SHp group=%SMp other=%SLp\" .\n\t   drwxr-xr-x -> owner=rwx group=r-x other=r-x\n\n     In order to determine the three files that have been modified most\n     recently, you could use the following format:\n\n\t   > stat -f \"%m%t%Sm %N\" /tmp/* | sort -rn | head -3 | cut -f2-\n\t   Apr 25 11:47:00 2002 /tmp/blah\n\t   Apr 25 10:36:34 2002 /tmp/bar\n\t   Apr 24 16:47:35 2002 /tmp/foo\n\n     To display a file's modification time:\n\n\t   > stat -f %m /tmp/foo\n\t   1177697733\n\n     To display the same modification time in a readable format:\n\n\t   > stat -f %Sm /tmp/foo\n\t   Apr 27 11:15:33 2007\n\n     To display the same modification time in a readable and sortable format:\n\n\t   > stat -f %Sm -t %Y%m%d%H%M%S /tmp/foo\n\t   20070427111533\n\n     To display the same in UTC:\n\n\t   > sh\n\t   $ TZ= stat -f %Sm -t %Y%m%d%H%M%S /tmp/foo\n\t   20070427181533\n",
        "     file(1), ls(1), lstat(2), readlink(2), stat(2), printf(3), strftime(3)\n",
        "     The stat utility appeared in NetBSD 1.6 and FreeBSD 4.10.\n",
        "     The stat utility was written by Andrew Brown <atatat@NetBSD.org>.\tThis\n     man page was written by Jan Schaumann <jschauma@NetBSD.org>.\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-F",
      "description": "As in ls(1), display a slash (‘/’) immediately after each pathname that is a directory, an asterisk (‘*’) after each that is executable, an at sign (‘@’) after each symbolic link, a percent sign (‘%’) after each whiteout, an equal sign (‘=’) after each socket, and a vertical bar (‘|’) after each that is a FIFO. The use of -F implies -l."
    },
    {
      "flag": "-L",
      "description": "Use stat(2) instead of lstat(2).  The information reported by stat will refer to the target of file, if file is a symbolic link, and not to file itself.  If the link is broken or the target does not exist, fall back on lstat(2) and report information about the link."
    },
    {
      "flag": "-f",
      "description": " Display information using the specified format.  See the Formats section for a description of valid formats.",
      "optional": true
    },
    {
      "flag": "-l",
      "description": "",
      "optional": false
    },
    {
      "flag": "-n",
      "description": "Do not force a newline to appear at the end of each piece of output."
    },
    {
      "flag": "-q",
      "description": "Suppress failure messages if calls to stat(2) or lstat(2) fail. When run as readlink, error messages are automatically suppressed."
    },
    {
      "flag": "-r",
      "description": " structure, display the raw, numerical value (for example, times in seconds since the epoch, etc.).",
      "optional": false
    },
    {
      "flag": "-s",
      "description": " initializing variables.",
      "optional": false
    },
    {
      "flag": "-t",
      "description": " Display timestamps using the specified format.  This format is passed directly to strftime(3).",
      "optional": true
    },
    {
      "flag": "-x",
      "description": " Linux distributions. Formats Format strings are similar to printf(3) formats in that they start with %, are then followed by a sequence of formatting characters, and end in a character that selects the field of the struct stat which is to be formatted.  If the % is immediately followed by one of n, t, %, or @, then a newline character, a tab character, a percent character, or the current file number is printed, otherwise the string is examined for the following: Any of the following optional flags: #\t     Selects an alternate output form for octal and hexadecimal output.  Non-zero octal output will have a leading zero, and non- zero hexadecimal output will have “0x” prepended to it. +\t     Asserts that a sign indicating whether a number is positive or negative should always be printed.  Non-negative numbers are not usually printed with a sign. -\t     Aligns string output to the left of the field, instead of to the right. 0\t     Sets the fill character for left padding to the ‘0’ character, instead of a space. space   Reserves a space at the front of non-negative signed output fields.  A ‘+’ overrides a space if both are used. Then the following fields: size    An optional decimal digit string specifying the minimum field width. prec    An optional precision composed of a decimal point ‘.’ and a decimal digit string that indicates the maximum string length, the number of digits to appear after the decimal point in floating point output, or the minimum number of digits to appear in numeric output. fmt     An optional output format specifier which is one of D, O, U, X, F, or S.  These represent signed decimal output, octal output, unsigned decimal output, hexadecimal output, floating point output, and string output, respectively.  Some output formats do not apply to all fields.  Floating point output only applies to timespec fields (the a, m, and c fields). The special output specifier S may be used to indicate that the output, if applicable, should be in string format.  May be used in combination with: amc     Display date in strftime(3) format. dr      Display actual device name. f\t     Display the flags of file as in ls -lTdo. gu      Display group or user name. p\t     Display the mode of file as in ls -lTd. N\t     Displays the name of file. T\t     Displays the type of file. Y\t     Insert a “ -> ” into the output.  Note that the default output format for Y is a string, but if specified explicitly, these four characters are prepended. sub     An optional sub field specifier (high, middle, low).  Only applies to the p, d, r, and T output formats.  It can be one of the following: H\t     “High” — specifies the major number for devices from r or d, the “user” bits for permissions from the string form of p, the file “type” bits from the numeric forms of p, and the long output form of T. L\t     “Low” — specifies the minor number for devices from r or d, the “other” bits for permissions from the string form of p, the “user”, “group”, and “other” bits from the numeric forms of p, and the ls -F style output character for file type when used with T (the use of L for this is optional). M\t     “Middle” — specifies the “group” bits for permissions from the string output form of p, or the “suid”, “sgid”, and “sticky” bits for the numeric forms of p. datum   A required field specifier, being one of the following: d\t     Device upon which file resides (st_dev). i\t     file's inode number (st_ino). p\t     File type and permissions (st_mode). l\t     Number of hard links to file (st_nlink). u, g    User ID and group ID of file's owner (st_uid, st_gid). r\t     Device number for character and block device special files (st_rdev). a, m, c, B The time file was last accessed or modified, or when the inode was last changed, or the birth time of the inode (st_atime, st_mtime, st_ctime, st_birthtime). z\t     The size of file in bytes (st_size). b\t     Number of blocks allocated for file (st_blocks). k\t     Optimal file system I/O operation block size (st_blksize). f\t     User defined flags for file. v\t     Inode generation number (st_gen). The following five field specifiers are not drawn directly from the data in struct stat, but are: N\t     The name of the file. R\t     The absolute pathname corresponding to the file. T\t     The file type, either as in ls -F or in a more descriptive form if the sub field specifier H is given. Y\t     The target of a symbolic link. Z\t     Expands to “major,minor” from the rdev field for character or block special devices and gives size output for all others. Only the % and the field specifier are required.  Most field specifiers default to U as an output form, with the exception of p which defaults to O; a, m, and c which default to D; and Y, T, and N which default to S. EXIT STATUS The stat and readlink utilities exit 0 on success, and >0 if an error occurs.",
      "optional": false
    }
  ],
  "examples": [
    {
      "command": "eval $(stat -s .profile)",
      "description": "",
      "tags": [
        "substitution"
      ]
    },
    {
      "command": "echo $st_size $st_mtimespec",
      "description": "1148 1015432481",
      "tags": [],
      "output": "\t   1148 1015432481\n     In order to get a list of file types including files pointed to if the\n     file is a symbolic link, you could use the following format:\n"
    },
    {
      "command": "stat -f \"%N: %HT%SY\" /tmp/*",
      "description": "/tmp/bar: Symbolic Link -> /tmp/foo",
      "tags": [
        "glob"
      ],
      "output": "\t   /tmp/bar: Symbolic Link -> /tmp/foo\n\t   /tmp/output25568: Regular File\n\t   /tmp/blah: Directory\n\t   /tmp/foo: Symbolic Link -> /\n     In order to get a list of the devices, their types and the major and\n     minor device numbers, formatted with tabs and linebreaks, you could use\n     the following format:\n\t   stat -f \"Name: %N%n%tType: %HT%n%tMajor: %Hr%n%tMinor: %Lr%n%n\" /dev/*\n\t   [...]\n\t   Name: /dev/wt8\n\t\t   Type: Block Device\n\t\t   Major: 3\n\t\t   Minor: 8\n\t   Name: /dev/zero\n\t\t   Type: Character Device\n\t\t   Major: 2\n\t\t   Minor: 12\n     In order to determine the permissions set on a file separately, you could\n     use the following format:\n\t   > stat -f \"%Sp -> owner=%SHp group=%SMp other=%SLp\" .\n\t   drwxr-xr-x -> owner=rwx group=r-x other=r-x\n     In order to determine the three files that have been modified most\n     recently, you could use the following format:\n\t   > stat -f \"%m%t%Sm %N\" /tmp/* | sort -rn | head -3 | cut -f2-\n\t   Apr 25 11:47:00 2002 /tmp/blah\n\t   Apr 25 10:36:34 2002 /tmp/bar\n\t   Apr 24 16:47:35 2002 /tmp/foo\n     To display a file's modification time:\n\t   > stat -f %m /tmp/foo\n\t   1177697733\n     To display the same modification time in a readable format:\n\t   > stat -f %Sm /tmp/foo\n\t   Apr 27 11:15:33 2007\n     To display the same modification time in a readable and sortable format:\n\t   > stat -f %Sm -t %Y%m%d%H%M%S /tmp/foo\n\t   20070427111533\n     To display the same in UTC:\n\t   > sh\n"
    },
    {
      "command": "TZ= stat -f %Sm -t %Y%m%d%H%M%S /tmp/foo",
      "description": "20070427181533",
      "tags": [],
      "output": "\t   20070427181533\nSEE ALSO\n     file(1), ls(1), lstat(2), readlink(2), stat(2), printf(3), strftime(3)\n"
    }
  ],
  "relatedCommands": [
    "file",
    "ls",
    "lstat",
    "readlink",
    "stat",
    "printf",
    "strftime",
    "display",
    "status",
    "format",
    "timefmt",
    "utility",
    "displays",
    "information",
    "about"
  ],
  "seeAlso": [
    {
      "name": "file",
      "section": 1
    },
    {
      "name": "ls",
      "section": 1
    },
    {
      "name": "lstat",
      "section": 2
    },
    {
      "name": "readlink",
      "section": 2
    },
    {
      "name": "stat",
      "section": 2
    },
    {
      "name": "printf",
      "section": 3
    },
    {
      "name": "strftime",
      "section": 3
    }
  ],
  "metadata": {},
  "searchContent": "readlink readlink manual page the stat utility displays information about the file pointed to by file stat -flnq -f format -l -r -s -x -t timefmt file readlink -fn file readlink manual page stat utility displays information about pointed file -f as in ls 1 display a slash immediately after each pathname that is a directory an asterisk after each that is executable an at sign after each symbolic link a percent sign after each whiteout an equal sign after each socket and a vertical bar after each that is a fifo the use of -f implies -l -l use stat 2 instead of lstat 2 the information reported by stat will refer to the target of file if file is a symbolic link and not to file itself if the link is broken or the target does not exist fall back on lstat 2 and report information about the link -f display information using the specified format see the formats section for a description of valid formats -l -n do not force a newline to appear at the end of each piece of output -q suppress failure messages if calls to stat 2 or lstat 2 fail when run as readlink error messages are automatically suppressed -r structure display the raw numerical value for example times in seconds since the epoch etc -s initializing variables -t display timestamps using the specified format this format is passed directly to strftime 3 -x linux distributions formats format strings are similar to printf 3 formats in that they start with are then followed by a sequence of formatting characters and end in a character that selects the field of the struct stat which is to be formatted if the is immediately followed by one of n t or then a newline character a tab character a percent character or the current file number is printed otherwise the string is examined for the following any of the following optional flags selects an alternate output form for octal and hexadecimal output non-zero octal output will have a leading zero and non- zero hexadecimal output will have 0x prepended to it asserts that a sign indicating whether a number is positive or negative should always be printed non-negative numbers are not usually printed with a sign - aligns string output to the left of the field instead of to the right 0 sets the fill character for left padding to the 0 character instead of a space space reserves a space at the front of non-negative signed output fields a overrides a space if both are used then the following fields size an optional decimal digit string specifying the minimum field width prec an optional precision composed of a decimal point and a decimal digit string that indicates the maximum string length the number of digits to appear after the decimal point in floating point output or the minimum number of digits to appear in numeric output fmt an optional output format specifier which is one of d o u x f or s these represent signed decimal output octal output unsigned decimal output hexadecimal output floating point output and string output respectively some output formats do not apply to all fields floating point output only applies to timespec fields the a m and c fields the special output specifier s may be used to indicate that the output if applicable should be in string format may be used in combination with amc display date in strftime 3 format dr display actual device name f display the flags of file as in ls -ltdo gu display group or user name p display the mode of file as in ls -ltd n displays the name of file t displays the type of file y insert a - into the output note that the default output format for y is a string but if specified explicitly these four characters are prepended sub an optional sub field specifier high middle low only applies to the p d r and t output formats it can be one of the following h high specifies the major number for devices from r or d the user bits for permissions from the string form of p the file type bits from the numeric forms of p and the long output form of t l low specifies the minor number for devices from r or d the other bits for permissions from the string form of p the user group and other bits from the numeric forms of p and the ls -f style output character for file type when used with t the use of l for this is optional m middle specifies the group bits for permissions from the string output form of p or the suid sgid and sticky bits for the numeric forms of p datum a required field specifier being one of the following d device upon which file resides st dev i file s inode number st ino p file type and permissions st mode l number of hard links to file st nlink u g user id and group id of file s owner st uid st gid r device number for character and block device special files st rdev a m c b the time file was last accessed or modified or when the inode was last changed or the birth time of the inode st atime st mtime st ctime st birthtime z the size of file in bytes st size b number of blocks allocated for file st blocks k optimal file system i o operation block size st blksize f user defined flags for file v inode generation number st gen the following five field specifiers are not drawn directly from the data in struct stat but are n the name of the file r the absolute pathname corresponding to the file t the file type either as in ls -f or in a more descriptive form if the sub field specifier h is given y the target of a symbolic link z expands to major minor from the rdev field for character or block special devices and gives size output for all others only the and the field specifier are required most field specifiers default to u as an output form with the exception of p which defaults to o a m and c which default to d and y t and n which default to s exit status the stat and readlink utilities exit 0 on success and 0 if an error occurs eval stat -s profile echo st size st mtimespec 1148 1015432481 stat -f n ht sy tmp tmp bar symbolic link - tmp foo tz stat -f sm -t y m d h m s tmp foo 20070427181533 name macos 15 5 june 22 2017 macos 15 5",
  "keywords": [
    "readlink",
    "manual",
    "page",
    "stat",
    "utility",
    "displays",
    "information",
    "about",
    "pointed",
    "file."
  ],
  "complexity": "intermediate",
  "hash": "d8a9465eff6768c4",
  "parsedAt": "2025-06-17T19:41:58.043Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": true,
  "hasDiagrams": false
}