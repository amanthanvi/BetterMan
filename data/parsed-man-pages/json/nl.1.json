{
  "name": "nl",
  "section": 1,
  "title": "nl manual page",
  "description": "The nl utility reads lines from the named file, applies a configurable line numbering filter operation, and writes the result to the standard output.",
  "synopsis": "nl [-p] [-b type] [-d delim] [-f type] [-h type] [-i incr] [-l num] [-n format] [-s sep] [-v startnum] [-w width] [file]",
  "category": "User Commands",
  "sections": [
    {
      "id": "name",
      "title": "NAME",
      "content": "[-n format] [-s sep] [-v startnum] [-w width] [file]",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     nl – line numbering filter\n",
        "     nl [-p] [-b type] [-d delim] [-f type] [-h type] [-i incr] [-l num]"
      ]
    },
    {
      "id": "description",
      "title": "DESCRIPTION",
      "content": "line number; in case the width is insufficient to hold\n\t\t\tthe line number, it will be truncated to its width\n\t\t\tleast significant digits.  The default width is 6.",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     The nl utility reads lines from the named file, applies a configurable\n     line numbering filter operation, and writes the result to the standard\n     output.  If file is a single dash (‘-’) or absent, nl reads from the\n     standard input.\n\n     The nl utility treats the text it reads in terms of logical pages.\n     Unless specified otherwise, line numbering is reset at the start of each\n     logical page.  A logical page consists of a header, a body and a footer\n     section; empty sections are valid.  Different line numbering options are\n     independently available for header, body and footer sections.\n\n     The starts of logical page sections are signalled by input lines\n     containing nothing but one of the following sequences of delimiter\n     characters:\n\n\t   Line      Start of\n\t   \\:\\:\\:    header\n\t   \\:\\:      body\n\t   \\:\t     footer\n\n     If the input does not contain any logical page section signalling\n     directives, the text being read is assumed to consist of a single logical\n     page body.\n\n     The following options are available:\n\n     -b type\t\tSpecify the logical page body lines to be numbered.",
        "\t\t\t\tregular expression specified by expr.\n",
        "     -d delim\t\tSpecify the delimiter characters used to indicate the",
        "     -f type\t\tSpecify the same as -b type except for logical page",
        "     -h type\t\tSpecify the same as -b type except for logical page",
        "     -i incr\t\tSpecify the increment value used to number logical",
        "     -l num\t\tIf numbering of all lines is specified for the current",
        "     -n format\t\tSpecify the line numbering output format.  Recognized",
        "     -p \t\tSpecify that line numbering should not be restarted at",
        "     -s sep\t\tSpecify the characters used in separating the line",
        "     -v startnum\tSpecify the initial value used to number logical page",
        "     -w width\t\tSpecify the number of characters to be occupied by the"
      ]
    },
    {
      "id": "environment",
      "title": "ENVIRONMENT",
      "content": "2  lines",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     The LANG, LC_ALL, LC_CTYPE and LC_COLLATE environment variables affect\n     the execution of nl as described in environ(7).\n",
        "     The nl utility exits 0 on success, and >0 if an error occurs.\n",
        "     Number all non-blank lines:\n\n\t   $ echo -e \"This is\\n\\n\\na simple text\" | nl",
        "     Number all lines including blank ones, with right justified line numbers\n     with leading zeroes, starting at 2, with increment of 2 and a custom\n     multi-character separator:\n\n\t   $ echo -e \"This\\nis\\nan\\n\\n\\nexample\" | nl -ba -n rz -i2 -s \"->\" -v2\n\t   000002->This\n\t   000004->is\n\t   000006->an\n\t   000008->\n\t   000010->\n\t   000012->example\n\n     Number lines matching regular expression for an i followed by either m or\n     n\n\n\t   $ echo -e \"This is\\na simple text\\nwith multiple\\nlines\" | nl -bp'i[mn]'\n\t\t   This is",
        "\t\t   with multiple"
      ]
    },
    {
      "id": "see-also",
      "title": "SEE ALSO",
      "content": "macOS 15.5\t\t\t June 18, 2020\t\t\t    macOS 15.5",
      "level": 1,
      "subsections": [],
      "codeBlocks": [
        "     jot(1), pr(1)\n",
        "     The nl utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).\n",
        "     The nl utility first appeared in AT&T System V Release 2 UNIX.\n",
        "     Input lines are limited to LINE_MAX (2048) bytes in length.\n"
      ]
    }
  ],
  "flags": [
    {
      "flag": "-b",
      "description": " Recognized type arguments are: a\tNumber all lines. t\tNumber only non-empty lines. n\tNo line numbering. pexpr\tNumber only those lines that contain the basic regular expression specified by expr. The default type for logical page body lines is t.",
      "optional": true
    },
    {
      "flag": "-d",
      "description": " start of a logical page section in the input file.  At most two characters may be specified; if only one character is specified, the first character is replaced and the second character remains unchanged. The default delim characters are “\\:”.",
      "optional": true
    },
    {
      "flag": "-f",
      "description": " footer lines.  The default type for logical page footer lines is n.",
      "optional": true
    },
    {
      "flag": "-h",
      "description": " header lines.  The default type for logical page header lines is n. lines to be considered as one.\tFor example, -l 2 results in only the second adjacent blank line being numbered.  The default num value is 1.",
      "optional": true
    },
    {
      "flag": "-i",
      "description": " page lines.  The default incr value is 1.",
      "optional": true
    },
    {
      "flag": "-l",
      "description": " logical section using the corresponding -b a, -f a or",
      "optional": true
    },
    {
      "flag": "-h",
      "description": " header lines.  The default type for logical page header lines is n. lines to be considered as one.\tFor example, -l 2 results in only the second adjacent blank line being numbered.  The default num value is 1.",
      "optional": true
    },
    {
      "flag": "-n",
      "description": " format arguments are: ln\tLeft justified. rn\tRight justified, leading zeros suppressed. rz\tRight justified, leading zeros kept. The default format is rn.",
      "optional": true
    },
    {
      "flag": "-p",
      "description": " logical page delimiters.",
      "optional": true
    },
    {
      "flag": "-s",
      "description": " number and the corresponding text line.  The default sep setting is a single tab character.",
      "optional": true
    },
    {
      "flag": "-v",
      "description": " lines; see also the description of the -p option.  The default startnum value is 1.",
      "optional": true
    },
    {
      "flag": "-w",
      "description": " line number; in case the width is insufficient to hold the line number, it will be truncated to its width least significant digits.  The default width is 6.",
      "optional": true
    }
  ],
  "examples": [
    {
      "command": "echo -e \"This is\\n\\n\\na simple text\" | nl",
      "description": "1  This is",
      "tags": [
        "pipe"
      ],
      "output": "\t\t1  This is\n\t\t2  a simple text\n     Number all lines including blank ones, with right justified line numbers\n     with leading zeroes, starting at 2, with increment of 2 and a custom\n     multi-character separator:\n"
    },
    {
      "command": "echo -e \"This\\nis\\nan\\n\\n\\nexample\" | nl -ba -n rz -i2 -s \"->\" -v2",
      "description": "000002->This",
      "tags": [
        "pipe",
        "redirect"
      ],
      "output": "\t   000002->This\n\t   000004->is\n\t   000006->an\n\t   000008->\n\t   000010->\n\t   000012->example\n     Number lines matching regular expression for an i followed by either m or\n     n\n"
    },
    {
      "command": "echo -e \"This is\\na simple text\\nwith multiple\\nlines\" | nl -bp'i[mn]'",
      "description": "This is",
      "tags": [
        "pipe"
      ],
      "output": "\t\t   This is\n\t\t1  a simple text\n\t\t   with multiple\n\t\t2  lines\nSEE ALSO\n     jot(1), pr(1)\n"
    }
  ],
  "relatedCommands": [
    "line",
    "numbering",
    "filter",
    "type",
    "delim",
    "incr",
    "num",
    "format",
    "sep",
    "startnum",
    "width",
    "utility",
    "reads",
    "lines",
    "named"
  ],
  "seeAlso": [],
  "metadata": {},
  "searchContent": "nl nl manual page the nl utility reads lines from the named file applies a configurable line numbering filter operation and writes the result to the standard output nl -p -b type -d delim -f type -h type -i incr -l num -n format -s sep -v startnum -w width file nl manual page utility reads lines named file applies configurable line numbering filter operation writes result standard output -b recognized type arguments are a number all lines t number only non-empty lines n no line numbering pexpr number only those lines that contain the basic regular expression specified by expr the default type for logical page body lines is t -d start of a logical page section in the input file at most two characters may be specified if only one character is specified the first character is replaced and the second character remains unchanged the default delim characters are -f footer lines the default type for logical page footer lines is n -h header lines the default type for logical page header lines is n lines to be considered as one for example -l 2 results in only the second adjacent blank line being numbered the default num value is 1 -i page lines the default incr value is 1 -l logical section using the corresponding -b a -f a or -h header lines the default type for logical page header lines is n lines to be considered as one for example -l 2 results in only the second adjacent blank line being numbered the default num value is 1 -n format arguments are ln left justified rn right justified leading zeros suppressed rz right justified leading zeros kept the default format is rn -p logical page delimiters -s number and the corresponding text line the default sep setting is a single tab character -v lines see also the description of the -p option the default startnum value is 1 -w line number in case the width is insufficient to hold the line number it will be truncated to its width least significant digits the default width is 6 echo -e this is n n na simple text nl 1 this is echo -e this nis nan n n nexample nl -ba -n rz -i2 -s - -v2 000002- this echo -e this is na simple text nwith multiple nlines nl -bp i mn this is name -n format -s sep -v startnum -w width file description line number in case the width is insufficient to hold the line number it will be truncated to its width least significant digits the default width is 6 environment 2 lines see also macos 15 5 june 18 2020 macos 15 5",
  "keywords": [
    "nl",
    "manual",
    "page",
    "utility",
    "reads",
    "lines",
    "named",
    "file,",
    "applies",
    "configurable",
    "line",
    "numbering",
    "filter",
    "operation,",
    "writes",
    "result",
    "standard",
    "output."
  ],
  "complexity": "intermediate",
  "hash": "37b287e984566afd",
  "parsedAt": "2025-06-17T19:42:00.557Z",
  "parseVersion": "2.0.0",
  "isCommon": false,
  "hasInteractiveExamples": true,
  "hasDiagrams": false
}